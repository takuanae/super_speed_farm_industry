/// <reference path="./internal_*.d.ts" />
declare namespace Internal {
    class SpellAttributeBuilderJS extends Internal.BuilderBase<Internal.Attribute> {
        constructor(i: ResourceLocation_)
        getClass(): typeof any;
        createObject(): Internal.Attribute;
        createAdditionalObjects(): void;
        /**
         * Makes displayName() override language files.
        */
        formattedDisplayName(): Internal.BuilderBase<Internal.Attribute>;
        getTranslationKeyGroup(): string;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        generateDataJsons(generator: Internal.DataJsonGenerator_): void;
        /**
         * Combined method of formattedDisplayName().displayName(name).
        */
        formattedDisplayName(name: Internal.Component_): Internal.BuilderBase<Internal.Attribute>;
        /**
         * Sets the display name for this object, e.g. `Stone`.
         * 
         * This will be overridden by a lang file if it exists.
        */
        displayName(name: Internal.Component_): Internal.BuilderBase<Internal.Attribute>;
        /**
         *         Sets the maximum value for the attribute.
        */
        setMaximumValue(maximumValue: number): this;
        /**
         *         Sets the minimum value for the attribute.
        */
        setMinimumValue(minimumValue: number): this;
        /**
         * Adds a tag to this object, e.g. `minecraft:stone`.
        */
        tag(tag: ResourceLocation_): Internal.BuilderBase<Internal.Attribute>;
        toString(): string;
        notifyAll(): void;
        /**
         * Sets the translation key for this object, e.g. `block.minecraft.stone`.
        */
        translationKey(key: string): Internal.BuilderBase<Internal.Attribute>;
        getRegistryType(): Internal.RegistryInfo<Internal.Attribute>;
        /**
         *         Sets the default value for the attribute.
        */
        setDefaultValue(defaultValue: number): this;
        getBuilderTranslationKey(): string;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        transformObject(obj: Internal.Attribute_): Internal.Attribute;
        get(): Internal.Attribute;
        generateLang(lang: Internal.LangEventJS_): void;
        equals(arg0: any): boolean;
        newID(pre: string, post: string): ResourceLocation;
        generateAssetJsons(generator: Internal.AssetJsonGenerator_): void;
        get class(): typeof any
        get translationKeyGroup(): string
        /**
         *         Sets the maximum value for the attribute.
        */
        set maximumValue(maximumValue: number)
        /**
         *         Sets the minimum value for the attribute.
        */
        set minimumValue(minimumValue: number)
        get registryType(): Internal.RegistryInfo<Internal.Attribute>
        /**
         *         Sets the default value for the attribute.
        */
        set defaultValue(defaultValue: number)
        get builderTranslationKey(): string
    }
    type SpellAttributeBuilderJS_ = SpellAttributeBuilderJS;
    class RotatedPillarBlock extends Internal.Block {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getDescriptionId(): string;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        setFriction(arg0: number): void;
        getTypeData(): Internal.CompoundTag;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getSpeedFactor(): number;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Player_): void;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Player_): Internal.ItemStack;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getRenderPropertiesInternal(): any;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setRequiresTool(v: boolean): void;
        setSpeedFactor(arg0: number): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        getFriction(): number;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        wait(arg0: number): void;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        notify(): void;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        setDestroySpeed(v: number): void;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Player_): boolean;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        wait(): void;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<Internal.Component>, arg3: Internal.TooltipFlag_): void;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        static rotatePillar(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static stateById(arg0: number): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get descriptionId(): string
        /**
         * @deprecated
        */
        get explosionResistance(): number
        set friction(arg0: number)
        get typeData(): Internal.CompoundTag
        get jumpFactor(): number
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        set destroySpeed(v: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get name(): Internal.MutableComponent
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        get mod(): string
        set soundType(arg0: SoundType_)
        set hasCollision(arg0: boolean)
        static readonly AXIS: Internal.EnumProperty<Internal.Direction$Axis>;
    }
    type RotatedPillarBlock_ = RotatedPillarBlock;
    class MobSpawnSettingsBuilder extends Internal.MobSpawnSettings$Builder {
        constructor(arg0: Internal.MobSpawnSettings_)
        getClass(): typeof any;
        toString(): string;
        getProbability(): number;
        notifyAll(): void;
        getEntityTypes(): Internal.Set<Internal.EntityType<any>>;
        creatureGenerationProbability(arg0: number): Internal.MobSpawnSettings$Builder;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        addSpawn(arg0: Internal.MobCategory_, arg1: Internal.MobSpawnSettings$SpawnerData_): Internal.MobSpawnSettings$Builder;
        disablePlayerSpawn(): this;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        getSpawner(arg0: Internal.MobCategory_): Internal.List<Internal.MobSpawnSettings$SpawnerData>;
        build(): Internal.MobSpawnSettings;
        getCost(arg0: Internal.EntityType_<any>): Internal.MobSpawnSettings$MobSpawnCost;
        equals(arg0: any): boolean;
        getSpawnerTypes(): Internal.Set<Internal.MobCategory>;
        addMobCharge(arg0: Internal.EntityType_<any>, arg1: number, arg2: number): Internal.MobSpawnSettings$Builder;
        get class(): typeof any
        get probability(): number
        get entityTypes(): Internal.Set<Internal.EntityType<any>>
        get spawnerTypes(): Internal.Set<Internal.MobCategory>
    }
    type MobSpawnSettingsBuilder_ = MobSpawnSettingsBuilder;
    class TagNetworkSerialization$NetworkPayload {
        getClass(): typeof any;
        write(arg0: Internal.FriendlyByteBuf_): void;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        isEmpty(): boolean;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static read(arg0: Internal.FriendlyByteBuf_): Internal.TagNetworkSerialization$NetworkPayload;
        get class(): typeof any
        get empty(): boolean
    }
    type TagNetworkSerialization$NetworkPayload_ = TagNetworkSerialization$NetworkPayload;
    /**
     * @deprecated
     * This class is marked to be removed in future!
    */
    class AccessControlContext {
        constructor(arg0: Internal.AccessControlContext_, arg1: Internal.DomainCombiner_)
        constructor(arg0: Internal.ProtectionDomain_[])
        getClass(): typeof any;
        hashCode(): number;
        checkPermission(arg0: Internal.Permission_): void;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        getDomainCombiner(): Internal.DomainCombiner;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        get domainCombiner(): Internal.DomainCombiner
    }
    type AccessControlContext_ = AccessControlContext;
    interface CreativeModeTab$DisplayItemsGenerator {
        abstract accept(arg0: Internal.CreativeModeTab$ItemDisplayParameters_, arg1: Internal.CreativeModeTab$Output_): void;
        (arg0: Internal.CreativeModeTab$ItemDisplayParameters, arg1: Internal.CreativeModeTab$Output): void;
    }
    type CreativeModeTab$DisplayItemsGenerator_ = CreativeModeTab$DisplayItemsGenerator | ((arg0: Internal.CreativeModeTab$ItemDisplayParameters, arg1: Internal.CreativeModeTab$Output)=> void);
    class SpellBookBuilderJS extends Internal.BuilderBase<Internal.SpellBook> {
        constructor(i: ResourceLocation_)
        getClass(): typeof any;
        createAdditionalObjects(): void;
        /**
         * Makes displayName() override language files.
        */
        formattedDisplayName(): Internal.BuilderBase<Internal.SpellBook>;
        createObject(): any;
        getTranslationKeyGroup(): string;
        /**
         * Combined method of formattedDisplayName().displayName(name).
        */
        formattedDisplayName(name: Internal.Component_): Internal.BuilderBase<Internal.SpellBook>;
        /**
         * Sets the translation key for this object, e.g. `block.minecraft.stone`.
        */
        translationKey(key: string): Internal.BuilderBase<Internal.SpellBook>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        generateDataJsons(generator: Internal.DataJsonGenerator_): void;
        /**
         * Adds a tag to this object, e.g. `minecraft:stone`.
        */
        tag(tag: ResourceLocation_): Internal.BuilderBase<Internal.SpellBook>;
        transformObject(obj: Internal.SpellBook_): Internal.SpellBook;
        /**
         * Sets the display name for this object, e.g. `Stone`.
         * 
         * This will be overridden by a lang file if it exists.
        */
        displayName(name: Internal.Component_): Internal.BuilderBase<Internal.SpellBook>;
        get(): Internal.SpellBook;
        toString(): string;
        notifyAll(): void;
        getBuilderTranslationKey(): string;
        /**
         *         Sets the maximum amount of spell slots the spell book can have.
        */
        setMaxSpellSlots(maxSpellSlots: number): this;
        hashCode(): number;
        getRegistryType(): Internal.RegistryInfo<Internal.Item>;
        wait(): void;
        wait(arg0: number): void;
        /**
         *         Adds a default spell to the item. Can be used multiple times. It takes a spell ID (or a spell object) and the spell level.
        */
        addDefaultSpell(spell: Internal.ISSKJSUtils$SpellHolder_, spellLevel: number): this;
        /**
         *         Adds a default attribute to the item. Can be used multiple times. It takes an attribute ID (or just an attribute object), the modifier name, the modifier amount, and the modifier operation.
         *         The modifier operation can be either `ADDITION`, `MULTIPLY_TOTAL` or `MULTIPLY_BASE`.
        */
        addDefaultAttribute(attribute: Internal.ISSKJSUtils$AttributeHolder_, modifierName: string, modifierAmount: number, modifierOperation: Internal.AttributeModifier$Operation_): this;
        generateLang(lang: Internal.LangEventJS_): void;
        equals(arg0: any): boolean;
        newID(pre: string, post: string): ResourceLocation;
        generateAssetJsons(generator: Internal.AssetJsonGenerator_): void;
        get class(): typeof any
        get translationKeyGroup(): string
        get builderTranslationKey(): string
        /**
         *         Sets the maximum amount of spell slots the spell book can have.
        */
        set maxSpellSlots(maxSpellSlots: number)
        get registryType(): Internal.RegistryInfo<Internal.Item>
    }
    type SpellBookBuilderJS_ = SpellBookBuilderJS;
    class TelemetryEventInstance extends Internal.Record {
        constructor(arg0: Internal.TelemetryEventType_, arg1: Internal.TelemetryPropertyMap_)
        getClass(): typeof any;
        type(): Internal.TelemetryEventType;
        hashCode(): number;
        export(arg0: Internal.TelemetrySession_): Internal.TelemetryEvent;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        properties(): Internal.TelemetryPropertyMap;
        get class(): typeof any
        static readonly CODEC: Internal.Codec<Internal.TelemetryEventInstance>;
    }
    type TelemetryEventInstance_ = TelemetryEventInstance;
    class FallingBlock extends Internal.Block implements Internal.Fallable {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        setFriction(arg0: number): void;
        getTypeData(): Internal.CompoundTag;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        static isFree(arg0: Internal.BlockState_): boolean;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        onLand(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.FallingBlockEntity_): void;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        onBrokenAfterFall(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.FallingBlockEntity_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        getFallDamageSource(arg0: Internal.Entity_): DamageSource;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        getDustColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<Internal.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        set friction(arg0: number)
        get typeData(): Internal.CompoundTag
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
    }
    type FallingBlock_ = FallingBlock;
    class RecursivePoint$RecursivePointType <A> extends com.mojang.datafixers.types.Type<A> {
        constructor(arg0: Internal.RecursiveTypeFamily_, arg1: number, arg2: Internal.Supplier_<com.mojang.datafixers.types.Type<A>>)
        codec(): Internal.Codec<A>;
        readTyped<T>(arg0: Internal.DynamicOps_<T>, arg1: T): Internal.DataResult<com.mojang.datafixers.util.Pair<Internal.Typed<A>, T>>;
        index(): number;
        getSetType<FT, FR>(arg0: Internal.OpticFinder_<FT>, arg1: com.mojang.datafixers.types.Type_<FR>): com.mojang.datafixers.types.Type<any>;
        notify(): void;
        rewrite(arg0: Internal.TypeRewriteRule_, arg1: Internal.PointFreeRule_): Internal.Optional<Internal.RewriteResult<A, any>>;
        ifSame<B>(arg0: com.mojang.datafixers.types.Type_<B>, arg1: B): Internal.Optional<A>;
        one(arg0: Internal.TypeRewriteRule_): Internal.Optional<Internal.RewriteResult<A, any>>;
        everywhere(arg0: Internal.TypeRewriteRule_, arg1: Internal.PointFreeRule_, arg2: boolean, arg3: boolean): Internal.Optional<Internal.RewriteResult<A, any>>;
        pointTyped(arg0: Internal.DynamicOps_<any>): Internal.Optional<Internal.Typed<A>>;
        static unbox<A>(arg0: Internal.App_<Internal.Type$Mu, A>): com.mojang.datafixers.types.Type<A>;
        findTypeInChildren<FT, FR>(arg0: com.mojang.datafixers.types.Type_<FT>, arg1: com.mojang.datafixers.types.Type_<FR>, arg2: Internal.Type$TypeMatcher_<FT, FR>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT, FR>, Internal.Type$FieldNotFoundException>;
        ifSame<B>(arg0: com.mojang.datafixers.types.Type_<B>, arg1: Internal.RewriteResult_<B, any>): Internal.Optional<Internal.RewriteResult<A, any>>;
        read<T>(arg0: Internal.DynamicOps_<T>, arg1: Internal.TypeRewriteRule_, arg2: Internal.PointFreeRule_, arg3: T): Internal.DataResult<com.mojang.datafixers.util.Pair<Internal.Optional<any>, T>>;
        wait(): void;
        ifSame<B>(arg0: Internal.Typed_<B>): Internal.Optional<A>;
        "ifSame(com.mojang.datafixers.types.Type,com.mojang.datafixers.RewriteResult)"<B>(arg0: com.mojang.datafixers.types.Type_<B>, arg1: Internal.RewriteResult_<B, any>): Internal.Optional<Internal.RewriteResult<A, any>>;
        buildTemplate(): Internal.TypeTemplate;
        write<T>(arg0: Internal.DynamicOps_<T>, arg1: A): Internal.DataResult<T>;
        findType<FT, FR>(arg0: com.mojang.datafixers.types.Type_<FT>, arg1: com.mojang.datafixers.types.Type_<FR>, arg2: Internal.Type$TypeMatcher_<FT, FR>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT, FR>, Internal.Type$FieldNotFoundException>;
        getClass(): typeof any;
        findChoiceType(arg0: string, arg1: number): Internal.Optional<Internal.TaggedChoice$TaggedChoiceType<any>>;
        writeDynamic<T>(arg0: Internal.DynamicOps_<T>, arg1: A): Internal.DataResult<Internal.Dynamic<T>>;
        all(arg0: Internal.TypeRewriteRule_, arg1: boolean, arg2: boolean): Internal.RewriteResult<A, any>;
        wait(arg0: number, arg1: number): void;
        readAndWrite<T>(arg0: Internal.DynamicOps_<T>, arg1: com.mojang.datafixers.types.Type_<any>, arg2: Internal.TypeRewriteRule_, arg3: Internal.PointFreeRule_, arg4: T): Internal.DataResult<T>;
        findField(arg0: string): Internal.OpticFinder<any>;
        point(arg0: Internal.DynamicOps_<any>): Internal.Optional<A>;
        readTyped<T>(arg0: Internal.Dynamic_<T>): Internal.DataResult<com.mojang.datafixers.util.Pair<Internal.Typed<A>, T>>;
        equals(arg0: any, arg1: boolean, arg2: boolean): boolean;
        findTypeCached<FT, FR>(arg0: com.mojang.datafixers.types.Type_<FT>, arg1: com.mojang.datafixers.types.Type_<FR>, arg2: Internal.Type$TypeMatcher_<FT, FR>, arg3: boolean): Internal.Either<Internal.TypedOptic<A, any, FT, FR>, Internal.Type$FieldNotFoundException>;
        static opticView<S, T, A, B>(arg0: com.mojang.datafixers.types.Type_<S>, arg1: Internal.RewriteResult_<A, B>, arg2: Internal.TypedOptic_<S, T, A, B>): Internal.RewriteResult<S, T>;
        toString(): string;
        notifyAll(): void;
        "in"(): Internal.View<A, A>;
        findCheckedType(arg0: number): Internal.Optional<com.mojang.datafixers.types.Type<any>>;
        "ifSame(com.mojang.datafixers.types.Type,java.lang.Object)"<B>(arg0: com.mojang.datafixers.types.Type_<B>, arg1: B): Internal.Optional<A>;
        family(): Internal.RecursiveTypeFamily;
        hashCode(): number;
        findFieldTypeOpt(arg0: string): Internal.Optional<com.mojang.datafixers.types.Type<any>>;
        read<T>(arg0: Internal.Dynamic_<T>): Internal.DataResult<com.mojang.datafixers.util.Pair<A, Internal.Dynamic<T>>>;
        out(): Internal.View<A, A>;
        findFieldType(arg0: string): com.mojang.datafixers.types.Type<any>;
        rewriteOrNop(arg0: Internal.TypeRewriteRule_): Internal.RewriteResult<A, any>;
        wait(arg0: number): void;
        finder(): Internal.OpticFinder<A>;
        equals(arg0: any): boolean;
        updateMu(arg0: Internal.RecursiveTypeFamily_): com.mojang.datafixers.types.Type<any>;
        unfold(): com.mojang.datafixers.types.Type<A>;
        template(): Internal.TypeTemplate;
        get class(): typeof any
    }
    type RecursivePoint$RecursivePointType_<A> = RecursivePoint$RecursivePointType<A>;
    class BlockStateConfiguration implements Internal.FeatureConfiguration {
        constructor(arg0: Internal.BlockState_)
        getClass(): typeof any;
        hashCode(): number;
        getFeatures(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        get features(): Internal.Stream<Internal.ConfiguredFeature<any, any>>
        static readonly CODEC: Internal.Codec<Internal.BlockStateConfiguration>;
        readonly state: Internal.BlockState;
    }
    type BlockStateConfiguration_ = BlockStateConfiguration;
    class MobType {
        constructor()
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        static readonly ILLAGER: (Internal.MobType) & (Internal.MobType);
        static readonly WATER: (Internal.MobType) & (Internal.MobType);
        static readonly UNDEFINED: (Internal.MobType) & (Internal.MobType);
        static readonly UNDEAD: (Internal.MobType) & (Internal.MobType);
        static readonly ARTHROPOD: (Internal.MobType) & (Internal.MobType);
    }
    type MobType_ = MobType;
    class RedstoneTorchBlock extends Internal.TorchBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getDescriptionId(): string;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        setFriction(arg0: number): void;
        getTypeData(): Internal.CompoundTag;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getSpeedFactor(): number;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Player_): void;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Player_): Internal.ItemStack;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getRenderPropertiesInternal(): any;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setRequiresTool(v: boolean): void;
        setSpeedFactor(arg0: number): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        getFriction(): number;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        wait(arg0: number): void;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        notify(): void;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        setDestroySpeed(v: number): void;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Player_): boolean;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        wait(): void;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        setIsRandomlyTicking(arg0: boolean): void;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<Internal.Component>, arg3: Internal.TooltipFlag_): void;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        isSignalSource(arg0: Internal.BlockState_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static stateById(arg0: number): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get descriptionId(): string
        /**
         * @deprecated
        */
        get explosionResistance(): number
        set friction(arg0: number)
        get typeData(): Internal.CompoundTag
        get jumpFactor(): number
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        set destroySpeed(v: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get name(): Internal.MutableComponent
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        get mod(): string
        set soundType(arg0: SoundType_)
        set hasCollision(arg0: boolean)
        static readonly RESTART_DELAY: (160) & (number);
        static readonly MAX_RECENT_TOGGLES: (8) & (number);
        static readonly RECENT_TOGGLE_TIMER: (60) & (number);
        static readonly LIT: (Internal.BooleanProperty) & (Internal.BooleanProperty);
    }
    type RedstoneTorchBlock_ = RedstoneTorchBlock;
    interface ConfigWriter {
        writeToString(arg0: Internal.UnmodifiableConfig_): string;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.File_, arg2: Internal.WritingMode_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.nio.file.Path,com.electronwill.nightconfig.core.io.WritingMode,java.nio.charset.Charset)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Path_, arg2: Internal.WritingMode_, arg3: Internal.Charset_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.nio.file.Path,com.electronwill.nightconfig.core.io.WritingMode)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Path_, arg2: Internal.WritingMode_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.io.OutputStream,java.nio.charset.Charset)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.OutputStream_, arg2: Internal.Charset_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.io.File,com.electronwill.nightconfig.core.io.WritingMode)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.File_, arg2: Internal.WritingMode_): void;
        abstract "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.io.Writer)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Writer_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.File_, arg2: Internal.WritingMode_, arg3: Internal.Charset_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.io.OutputStream)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.OutputStream_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Path_, arg2: Internal.WritingMode_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.URL_): void;
        abstract write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Writer_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.OutputStream_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.Path_, arg2: Internal.WritingMode_, arg3: Internal.Charset_): void;
        write(arg0: Internal.UnmodifiableConfig_, arg1: Internal.OutputStream_, arg2: Internal.Charset_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.io.File,com.electronwill.nightconfig.core.io.WritingMode,java.nio.charset.Charset)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.File_, arg2: Internal.WritingMode_, arg3: Internal.Charset_): void;
        "write(com.electronwill.nightconfig.core.UnmodifiableConfig,java.net.URL)"(arg0: Internal.UnmodifiableConfig_, arg1: Internal.URL_): void;
    }
    type ConfigWriter_ = ConfigWriter;
    abstract class ChunkSource implements Internal.AutoCloseable, Internal.LightChunkGetter {
        constructor()
        getClass(): typeof any;
        abstract gatherStats(): string;
        abstract getLoadedChunksCount(): number;
        updateChunkForced(arg0: Internal.ChunkPos_, arg1: boolean): void;
        abstract getLevel(): Internal.BlockGetter;
        toString(): string;
        abstract tick(arg0: Internal.BooleanSupplier_, arg1: boolean): void;
        notifyAll(): void;
        abstract getChunk(arg0: number, arg1: number, arg2: Internal.ChunkStatus_, arg3: boolean): Internal.ChunkAccess;
        hasChunk(arg0: number, arg1: number): boolean;
        setSpawnSettings(arg0: boolean, arg1: boolean): void;
        getChunk(arg0: number, arg1: number, arg2: boolean): Internal.LevelChunk;
        notify(): void;
        getChunkNow(arg0: number, arg1: number): Internal.LevelChunk;
        onLightUpdate(arg0: Internal.LightLayer_, arg1: Internal.SectionPos_): void;
        wait(arg0: number, arg1: number): void;
        getChunkForLighting(arg0: number, arg1: number): Internal.LightChunk;
        hashCode(): number;
        wait(): void;
        close(): void;
        wait(arg0: number): void;
        abstract getLightEngine(): Internal.LevelLightEngine;
        equals(arg0: any): boolean;
        get class(): typeof any
        get loadedChunksCount(): number
        get level(): Internal.BlockGetter
        get lightEngine(): Internal.LevelLightEngine
    }
    type ChunkSource_ = ChunkSource;
    interface HolderLookup$RegistryLookup <T> extends Internal.HolderOwner<T>, Internal.HolderLookup<T> {
        abstract get(arg0: Internal.TagKey_<T>): Internal.Optional<Internal.HolderSet$Named<T>>;
        abstract "get(net.minecraft.resources.ResourceKey)"(arg0: Internal.ResourceKey_<T>): Internal.Optional<Internal.Holder$Reference<T>>;
        filterElements(arg0: Internal.Predicate_<T>): Internal.HolderLookup<T>;
        abstract get(arg0: Internal.ResourceKey_<T>): Internal.Optional<Internal.Holder$Reference<T>>;
        abstract listTags(): Internal.Stream<Internal.HolderSet$Named<T>>;
        getOrThrow(arg0: Internal.TagKey_<T>): Internal.HolderSet$Named<T>;
        abstract key(): Internal.ResourceKey<Internal.Registry<T>>;
        getOrThrow(arg0: Internal.ResourceKey_<T>): Internal.Holder$Reference<T>;
        listElementIds(): Internal.Stream<Internal.ResourceKey<T>>;
        canSerializeIn(arg0: Internal.HolderOwner_<T>): boolean;
        abstract "get(net.minecraft.tags.TagKey)"(arg0: Internal.TagKey_<T>): Internal.Optional<Internal.HolderSet$Named<T>>;
        "getOrThrow(net.minecraft.resources.ResourceKey)"(arg0: Internal.ResourceKey_<T>): Internal.Holder$Reference<T>;
        listTagIds(): Internal.Stream<Internal.TagKey<T>>;
        "getOrThrow(net.minecraft.tags.TagKey)"(arg0: Internal.TagKey_<T>): Internal.HolderSet$Named<T>;
        abstract listElements(): Internal.Stream<Internal.Holder$Reference<T>>;
        filterFeatures(arg0: Internal.FeatureFlagSet_): Internal.HolderLookup<T>;
        abstract registryLifecycle(): Internal.Lifecycle;
    }
    type HolderLookup$RegistryLookup_<T> = HolderLookup$RegistryLookup<T>;
    interface ICurioItem {
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onEquip(arg0: string, arg1: number, arg2: Internal.LivingEntity_, arg3: Internal.ItemStack_): void;
        onEquip(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        showAttributesTooltip(arg0: string, arg1: Internal.ItemStack_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        onUnequip(arg0: string, arg1: number, arg2: Internal.LivingEntity_, arg3: Internal.ItemStack_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getTagsTooltip(arg0: Internal.List_<Internal.Component>, arg1: Internal.ItemStack_): Internal.List<Internal.Component>;
        curioBreak(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        curioTick(arg0: string, arg1: number, arg2: Internal.LivingEntity_, arg3: Internal.ItemStack_): void;
        canSync(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): boolean;
        getSlotsTooltip(arg0: Internal.List_<Internal.Component>, arg1: Internal.ItemStack_): Internal.List<Internal.Component>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        curioAnimate(arg0: string, arg1: number, arg2: Internal.LivingEntity_, arg3: Internal.ItemStack_): void;
        readSyncData(arg0: Internal.SlotContext_, arg1: Internal.CompoundTag_, arg2: Internal.ItemStack_): void;
        onEquipFromUse(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): void;
        getLootingLevel(arg0: Internal.SlotContext_, arg1: DamageSource_, arg2: Internal.LivingEntity_, arg3: number, arg4: Internal.ItemStack_): number;
        canUnequip(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        canUnequip(arg0: string, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_): boolean;
        writeSyncData(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): Internal.CompoundTag;
        isEnderMask(arg0: Internal.SlotContext_, arg1: Internal.EnderMan_, arg2: Internal.ItemStack_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getDropRule(arg0: Internal.LivingEntity_, arg1: Internal.ItemStack_): Internal.ICurio$DropRule;
        canWalkOnPowderedSnow(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        writeSyncData(arg0: Internal.ItemStack_): Internal.CompoundTag;
        getAttributesTooltip(arg0: Internal.List_<Internal.Component>, arg1: Internal.ItemStack_): Internal.List<Internal.Component>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        playRightClickEquipSound(arg0: Internal.LivingEntity_, arg1: Internal.ItemStack_): void;
        canEquipFromUse(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): boolean;
        makesPiglinsNeutral(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        "curioBreak(net.minecraft.world.item.ItemStack,net.minecraft.world.entity.LivingEntity)"(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): void;
        hasCurioCapability(arg0: Internal.ItemStack_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        curioBreak(arg0: Internal.ItemStack_, arg1: Internal.LivingEntity_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        canRightClickEquip(arg0: Internal.ItemStack_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        readSyncData(arg0: Internal.CompoundTag_, arg1: Internal.ItemStack_): void;
        getEquipSound(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): Internal.ICurio$SoundInfo;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        canSync(arg0: string, arg1: number, arg2: Internal.LivingEntity_, arg3: Internal.ItemStack_): boolean;
        getFortuneLevel(arg0: Internal.SlotContext_, arg1: Internal.LootContext_, arg2: Internal.ItemStack_): number;
        getDropRule(arg0: Internal.SlotContext_, arg1: DamageSource_, arg2: number, arg3: boolean, arg4: Internal.ItemStack_): Internal.ICurio$DropRule;
        getAttributeModifiers(arg0: Internal.SlotContext_, arg1: Internal.UUID_, arg2: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        curioTick(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): void;
        "curioBreak(top.theillusivec4.curios.api.SlotContext,net.minecraft.world.item.ItemStack)"(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getLootingBonus(arg0: string, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): number;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getAttributeModifiers(arg0: string, arg1: Internal.ItemStack_): Internal.Multimap<Internal.Attribute, Internal.AttributeModifier>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getFortuneBonus(arg0: string, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_, arg3: number): number;
        canEquip(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        canEquip(arg0: string, arg1: Internal.LivingEntity_, arg2: Internal.ItemStack_): boolean;
        onUnequip(arg0: Internal.SlotContext_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        readonly defaultInstance: Internal.ICurio;
    }
    type ICurioItem_ = ICurioItem;
    abstract class AbstractSkeleton extends Internal.Monster implements Internal.RangedAttackMob {
        getUpVector(arg0: number): Vec3d;
        gameEvent(arg0: Internal.GameEvent_, arg1: Internal.Entity_): void;
        static checkMobSpawnRules(arg0: Internal.EntityType_<Internal.Mob>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        setDefaultMovementSpeedMultiplier(speed: number): void;
        isSuppressingBounce(): boolean;
        setTarget(arg0: Internal.LivingEntity_): void;
        isOnFire(): boolean;
        getPositionCodec(): Internal.VecDeltaCodec;
        getPickedResult(arg0: Internal.HitResult_): Internal.ItemStack;
        isShaking(): boolean;
        /**
         * @deprecated
        */
        updateFluidHeightAndDoFluidPushing(arg0: Internal.TagKey_<Internal.Fluid>, arg1: number): boolean;
        setMaxUpStep(arg0: number): void;
        convertTo<T extends Internal.Mob>(arg0: Internal.EntityType_<T>, arg1: boolean): T;
        getFallFlyingTicks(): number;
        setPosition(x: number, y: number, z: number): void;
        runCommandSilent(command: string): number;
        chunkPosition(): Internal.ChunkPos;
        dropLeash(arg0: boolean, arg1: boolean): void;
        gameEvent(arg0: Internal.GameEvent_): void;
        setXxa(arg0: number): void;
        setDelayedLeashHolderId(arg0: number): void;
        isShiftKeyDown(): boolean;
        isInFluidType(arg0: Internal.FluidState_): boolean;
        setUUID(arg0: Internal.UUID_): void;
        checkBelowWorld(): void;
        setMotionZ(z: number): void;
        getMagicData(): Internal.MagicData;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        canFreeze(): boolean;
        ignoreExplosion(): boolean;
        getBlockY(): number;
        isSpectator(): boolean;
        setMainHandItem(item: Internal.ItemStack_): void;
        removeEffectNoUpdate(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        spawnAtLocation(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        getPersistentData(): Internal.CompoundTag;
        getHealth(): number;
        getMaxHealth(): number;
        setPathfindingMalus(arg0: Internal.BlockPathTypes_, arg1: number): void;
        getRandomZ(arg0: number): number;
        setAggressive(arg0: boolean): void;
        getHasUsedSingleAttack(): boolean;
        setRemoved(arg0: Internal.Entity$RemovalReason_): void;
        getDistanceSq(arg0: number, arg1: number, arg2: number): number;
        isInWaterRainOrBubble(): boolean;
        getRemovalReason(): Internal.Entity$RemovalReason;
        getIndirectPassengers(): Internal.Iterable<Internal.Entity>;
        resetFallDistance(): void;
        canSprint(): boolean;
        blockPosition(): BlockPos;
        setBoundingBox(arg0: Internal.AABB_): void;
        isAmbientCreature(): boolean;
        setZza(arg0: number): void;
        getBlock(): Internal.BlockContainerJS;
        setEquipment(slot: Internal.EquipmentSlot_, item: Internal.ItemStack_): void;
        randomTeleport(arg0: number, arg1: number, arg2: number, arg3: boolean): boolean;
        invalidateCaps(): void;
        getName(): Internal.Component;
        playAmbientSound(): void;
        onGround(): boolean;
        getControlledVehicle(): Internal.Entity;
        isOnSameTeam(arg0: Internal.Entity_): boolean;
        getArmorValue(): number;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        tick(): void;
        getKillCredit(): Internal.LivingEntity;
        isPushedByFluid(arg0: Internal.FluidType_): boolean;
        sinkInFluid(arg0: Internal.FluidType_): void;
        hasPermissions(arg0: number): boolean;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        static createMobAttributes(): Internal.AttributeSupplier$Builder;
        isAutoSpinAttack(): boolean;
        getRemainingFireTicks(): number;
        onlyOpCanSetNbt(): boolean;
        fireImmune(): boolean;
        addMotion(arg0: number, arg1: number, arg2: number): void;
        getMaxFallDistance(): number;
        isHolding(arg0: Internal.Item_): boolean;
        getZ(arg0: number): number;
        hasCustomOutlineRendering(arg0: Player_): boolean;
        static areAllEffectsAmbient(arg0: Internal.Collection_<Internal.MobEffectInstance>): boolean;
        doHurtTarget(arg0: Internal.Entity_): boolean;
        getTicksFrozen(): number;
        getRandomX(arg0: number): number;
        spawnAtLocation(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        pick(arg0: number, arg1: number, arg2: boolean): Internal.HitResult;
        getVoicePitch(): number;
        setStatusMessage(message: Internal.Component_): void;
        setSleepingPos(arg0: BlockPos_): void;
        isDescending(): boolean;
        getAttributeBaseValue(arg0: Internal.Attribute_): number;
        sendEffectToPassengers(arg0: Internal.MobEffectInstance_): void;
        getHeadRotSpeed(): number;
        getYHeadRot(): number;
        getProjectile(arg0: Internal.ItemStack_): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        syncPacketPositionCodec(arg0: number, arg1: number, arg2: number): void;
        setAbsorptionAmount(arg0: number): void;
        shouldRenderAtSqrDistance(arg0: number): boolean;
        damageSources(): Internal.DamageSources;
        removeAllGoals(arg0: Internal.Predicate_<Internal.Goal>): void;
        swing(): void;
        recreateFromPacket(arg0: Internal.ClientboundAddEntityPacket_): void;
        canStartSwimming(): boolean;
        setDeltaMovement(arg0: Vec3d_): void;
        getLeashOffset(arg0: number): Vec3d;
        isBaby(): boolean;
        damageEquipment(slot: Internal.EquipmentSlot_): void;
        isGlowing(): boolean;
        "isInFluidType(net.minecraft.world.level.material.FluidState)"(arg0: Internal.FluidState_): boolean;
        getWalkTargetValue(arg0: BlockPos_): number;
        /**
         * @deprecated
        */
        canBreatheUnderwater(): boolean;
        die(arg0: DamageSource_): void;
        removeAllEffects(): boolean;
        getLeashOffset(): Vec3d;
        hasLineOfSight(arg0: Internal.Entity_): boolean;
        onClimbable(): boolean;
        isAttackable(): boolean;
        getSlot(arg0: number): Internal.SlotAccess;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        stopSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        handler$zcl000$setTicksFrozen(arg0: number, arg1: Internal.CallbackInfo_): void;
        isUnderWater(): boolean;
        stopRiding(): void;
        getLeashHolder(): Internal.Entity;
        getX(arg0: number): number;
        getSensing(): Internal.Sensing;
        getLegsArmorItem(): Internal.ItemStack;
        captureDrops(arg0: Internal.Collection_<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getDeltaMovement(): Vec3d;
        canTakeItem(arg0: Internal.ItemStack_): boolean;
        shouldDropExperience(): boolean;
        hasPassenger(arg0: Internal.Entity_): boolean;
        setSecondsOnFire(arg0: number): void;
        moveTo(arg0: number, arg1: number, arg2: number): void;
        "getDisplayName()"(): Internal.Component;
        getLootTable(): ResourceLocation;
        getTicksUsingItem(): number;
        getArrowCount(): number;
        getMoveControl(): Internal.MoveControl;
        setMotion(arg0: number, arg1: number, arg2: number): void;
        playSound(arg0: Internal.SoundEvent_): void;
        getDefaultMovementSpeed(): number;
        restoreFrom(arg0: Internal.Entity_): void;
        isPeacefulCreature(): boolean;
        setOnGround(arg0: boolean): void;
        addEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): boolean;
        ate(): void;
        setHasUsedSingleAttack(hasUsedSingleAttack: boolean): void;
        setPos(arg0: number, arg1: number, arg2: number): void;
        notify(): void;
        getFirstTick(): boolean;
        setPersistenceRequired(): void;
        getLastHurtByMobTimestamp(): number;
        getVehicle(): Internal.Entity;
        isEffectiveAi(): boolean;
        startRiding(arg0: Internal.Entity_, arg1: boolean): boolean;
        setSpawnCancelled(arg0: boolean): void;
        getStringUuid(): string;
        setSwimming(arg0: boolean): void;
        canHydrateInFluidType(arg0: Internal.FluidType_): boolean;
        getMainArm(): Internal.HumanoidArm;
        checkSpawnRules(arg0: Internal.LevelAccessor_, arg1: Internal.MobSpawnType_): boolean;
        getRotationVector(): Internal.Vec2;
        getHurtDir(): number;
        isSprinting(): boolean;
        isMaxGroupSizeReached(arg0: number): boolean;
        getMotionY(): number;
        getOffhandItem(): Internal.ItemStack;
        canCollideWith(arg0: Internal.Entity_): boolean;
        getBlockExplosionResistance(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.FluidState_, arg5: number): number;
        getFluidFallDistanceModifier(arg0: Internal.FluidType_): number;
        isDrinkingPotion(): boolean;
        clearSleepingPos(): void;
        canSpawnSprintParticle(): boolean;
        "moveTo(net.minecraft.core.BlockPos,float,float)"(arg0: BlockPos_, arg1: number, arg2: number): void;
        getLastHurtMob(): Internal.LivingEntity;
        getSelfAndPassengers(): Internal.Stream<Internal.Entity>;
        moveRelative(arg0: number, arg1: Vec3d_): void;
        isAddedToWorld(): boolean;
        saveAsPassenger(arg0: Internal.CompoundTag_): boolean;
        getSoundSource(): Internal.SoundSource;
        getLastDamageSource(): DamageSource;
        setNoActionTime(arg0: number): void;
        setMovementSpeedAddition(speed: number): void;
        equipmentHasChanged(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getPose(): Internal.Pose;
        getAttribute(arg0: Internal.Attribute_): Internal.AttributeInstance;
        setPositionAndRotation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        canBeAffected(arg0: Internal.MobEffectInstance_): boolean;
        getRestrictCenter(): BlockPos;
        isLeftHanded(): boolean;
        removeVehicle(): void;
        setZ(z: number): void;
        getY(): number;
        hashCode(): number;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        eat(arg0: Internal.Level_, arg1: Internal.ItemStack_): Internal.ItemStack;
        isWithinMeleeAttackRange(arg0: Internal.LivingEntity_): boolean;
        static checkMonsterSpawnRules(arg0: Internal.EntityType_<Internal.Monster>, arg1: Internal.ServerLevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        broadcastBreakEvent(arg0: Internal.EquipmentSlot_): void;
        showVehicleHealth(): boolean;
        getDistance(pos: BlockPos_): number;
        isBlocking(): boolean;
        isCasting(): boolean;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number): void;
        removeAttribute(attribute: Internal.Attribute_, identifier: string): void;
        handler$zco000$handleEquipmentChanges(arg0: Internal.CallbackInfoReturnable_<any>): void;
        /**
         * @deprecated
        */
        isPushedByFluid(): boolean;
        abstract "getItemBySlot(net.minecraft.world.entity.EquipmentSlot)"(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        getArmorCoverPercentage(): number;
        handleRelativeFrictionAndCalculateMovement(arg0: Vec3d_, arg1: number): Vec3d;
        turn(arg0: number, arg1: number): void;
        getAirSupply(): number;
        moveTo(arg0: BlockPos_, arg1: number, arg2: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        readAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        getMotionDirection(): Internal.Direction;
        canBeCollidedWith(): boolean;
        lavaHurt(): void;
        handleDamageEvent(arg0: DamageSource_): void;
        canChangeDimensions(): boolean;
        jumpInFluid(arg0: Internal.FluidType_): void;
        getCommandSenderWorld(): Internal.Level;
        getTotalMovementSpeed(): number;
        changeDimension(arg0: Internal.ServerLevel_): Internal.Entity;
        moveInFluid(arg0: Internal.FluidState_, arg1: Vec3d_, arg2: number): boolean;
        attack(hp: number): void;
        canSwimInFluidType(arg0: Internal.FluidType_): boolean;
        getAttributes(): Internal.AttributeMap;
        initiateCastSpell(spell: Internal.AbstractSpell_, spellLevel: number): void;
        isSpawnCancelled(): boolean;
        "hasPassenger(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getDimensions(arg0: Internal.Pose_): Internal.EntityDimensions;
        isSwimming(): boolean;
        setSprinting(arg0: boolean): void;
        mayInteract(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        setPortalCooldown(): void;
        getAttackAnim(arg0: number): number;
        setX(x: number): void;
        castComplete(): void;
        getPortalWaitTime(): number;
        getBlockStateOn(): Internal.BlockState;
        abstract getItemBySlot(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        wantsToPickUp(arg0: Internal.ItemStack_): boolean;
        getFluidJumpThreshold(): number;
        "setPositionAndRotation(double,double,double,float,float)"(x: number, y: number, z: number, yaw: number, pitch: number): void;
        isInvisibleTo(arg0: Player_): boolean;
        stopSleeping(): void;
        setAirSupply(arg0: number): void;
        getOnPos(): BlockPos;
        isUndead(): boolean;
        static createLivingAttributes(): Internal.AttributeSupplier$Builder;
        getStepHeight(): number;
        stopUsingItem(): void;
        isSleeping(): boolean;
        acceptsFailure(): boolean;
        setOnGroundWithKnownMovement(arg0: boolean, arg1: Vec3d_): void;
        getFluidFallingAdjustedMovement(arg0: number, arg1: boolean, arg2: Vec3d_): Vec3d;
        setOldPosAndRot(): void;
        static createMonsterAttributes(): Internal.AttributeSupplier$Builder;
        isFree(arg0: number, arg1: number, arg2: number): boolean;
        getDismountPoses(): Internal.ImmutableList<Internal.Pose>;
        getLastHurtMobTimestamp(): number;
        "moveTo(double,double,double)"(arg0: number, arg1: number, arg2: number): void;
        setRemainingFireTicks(arg0: number): void;
        /**
         * @deprecated
        */
        getOnPosLegacy(): BlockPos;
        setPos(arg0: Vec3d_): void;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        reassessWeaponGoal(): void;
        setCanPickUpLoot(arg0: boolean): void;
        getMainHandItem(): Internal.ItemStack;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        setSilent(arg0: boolean): void;
        hasExactlyOnePlayerPassenger(): boolean;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        canBeSeenAsEnemy(): boolean;
        setLeftHanded(arg0: boolean): void;
        getActiveEffects(): Internal.Collection<Internal.MobEffectInstance>;
        isOnPortalCooldown(): boolean;
        canAttack(arg0: Internal.LivingEntity_, arg1: Internal.TargetingConditions_): boolean;
        performRangedAttack(arg0: Internal.LivingEntity_, arg1: number): void;
        getAttributeValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        setPitch(arg0: number): void;
        isMultipartEntity(): boolean;
        setPosRaw(arg0: number, arg1: number, arg2: number): void;
        handleEntityEvent(arg0: number): void;
        getParts(): Internal.PartEntity<any>[];
        isUsingItem(): boolean;
        isAlwaysTicking(): boolean;
        interactAt(arg0: Player_, arg1: Vec3d_, arg2: Internal.InteractionHand_): Internal.InteractionResult;
        lerpTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onPassengerTurned(arg0: Internal.Entity_): void;
        spawnAtLocation(arg0: Internal.ItemLike_): Internal.ItemEntity;
        getForgePersistentData(): Internal.CompoundTag;
        "spawnAtLocation(net.minecraft.world.level.ItemLike,int)"(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        setInvulnerable(arg0: boolean): void;
        push(arg0: Internal.Entity_): void;
        isInFluidType(): boolean;
        maxUpStep(): number;
        handler$zco000$isCurrentlyGlowing(arg0: Internal.CallbackInfoReturnable_<any>): void;
        setGlowing(arg0: boolean): void;
        load(arg0: Internal.CompoundTag_): void;
        "broadcastBreakEvent(net.minecraft.world.entity.EquipmentSlot)"(arg0: Internal.EquipmentSlot_): void;
        setLeashedTo(arg0: Internal.Entity_, arg1: boolean): void;
        isAlive(): boolean;
        startSleeping(arg0: BlockPos_): void;
        getBbHeight(): number;
        getMeleeAttackRangeSqr(arg0: Internal.LivingEntity_): number;
        getTags(): Internal.Set<string>;
        getViewVector(arg0: number): Vec3d;
        setSyncedSpellData(syncedSpellData: Internal.SyncedSpellData_): void;
        getLastAttacker(): Internal.LivingEntity;
        hasControllingPassenger(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number, arg2: number): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        onPathfindingStart(): void;
        getPercentFrozen(): number;
        setPortalCooldown(arg0: number): void;
        shouldBlockExplode(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number): boolean;
        hasGlowingTag(): boolean;
        setPosition(block: Internal.BlockContainerJS_): void;
        isLeashed(): boolean;
        addEffect(arg0: Internal.MobEffectInstance_): boolean;
        getViewXRot(arg0: number): number;
        canRiderInteract(): boolean;
        setPose(arg0: Internal.Pose_): void;
        getReachDistance(): number;
        static collideBoundingBox(arg0: Internal.Entity_, arg1: Vec3d_, arg2: Internal.AABB_, arg3: Internal.Level_, arg4: Internal.List_<Internal.VoxelShape>): Vec3d;
        getEntityType(): Internal.EntityType<any>;
        isWaterCreature(): boolean;
        toString(): string;
        setLastHurtByPlayer(arg0: Player_): void;
        "getServer()"(): Internal.MinecraftServer;
        wasExperienceConsumed(): boolean;
        isPushable(): boolean;
        setYBodyRot(arg0: number): void;
        foodEaten(is: Internal.ItemStack_): void;
        onClientRemoval(): void;
        reviveCaps(): void;
        getDistance(x: number, y: number, z: number): number;
        setMotionY(y: number): void;
        static createAttributes(): Internal.AttributeSupplier$Builder;
        setRotation(yaw: number, pitch: number): void;
        handler$zzf000$init(entityType: Internal.EntityType_<any>, level: Internal.Level_, ci: Internal.CallbackInfo_): void;
        calculateEntityAnimation(arg0: boolean): void;
        forceAddEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        setChestArmorItem(item: Internal.ItemStack_): void;
        onAboveBubbleCol(arg0: boolean): void;
        "playSound(net.minecraft.sounds.SoundEvent,float,float)"(id: Internal.SoundEvent_, volume: number, pitch: number): void;
        isPassenger(): boolean;
        hasPose(arg0: Internal.Pose_): boolean;
        makeStuckInBlock(arg0: Internal.BlockState_, arg1: Vec3d_): void;
        /**
         * @deprecated
        */
        isEyeInFluid(arg0: Internal.TagKey_<Internal.Fluid>): boolean;
        isInvulnerableTo(arg0: DamageSource_): boolean;
        isSensitiveToWater(): boolean;
        skipAttackInteraction(arg0: Internal.Entity_): boolean;
        lerpMotion(arg0: number, arg1: number, arg2: number): void;
        "getAttributeValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        shouldRender(arg0: number, arg1: number, arg2: number): boolean;
        getJumpControl(): Internal.JumpControl;
        cancelCast(): void;
        getFeetArmorItem(): Internal.ItemStack;
        static getViewScale(): number;
        handler$zcl000$isAlliedTo(arg0: Internal.Entity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getVisualRotationYInDegrees(): number;
        setSpeed(arg0: number): void;
        requiresCustomPersistence(): boolean;
        isDiscrete(): boolean;
        unRide(): void;
        getLevel(): Internal.Level;
        "spawnAtLocation(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): Internal.ItemEntity;
        getCombatTracker(): Internal.CombatTracker;
        updateDynamicGameEventListener(arg0: Internal.BiConsumer_<Internal.DynamicGameEventListener<any>, Internal.ServerLevel>): void;
        "onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor)"(pKey: Internal.EntityDataAccessor_<any>): void;
        isNoAi(): boolean;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        extinguishFire(): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getChestArmorItem(): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number): void;
        tell(message: Internal.Component_): void;
        closerThan(arg0: Internal.Entity_, arg1: number): boolean;
        getDistanceSq(pos: BlockPos_): number;
        indicateDamage(arg0: number, arg1: number): void;
        canBeSeenByAnyone(): boolean;
        handler$zco000$getArmorCoverPercentage(arg0: Internal.CallbackInfoReturnable_<any>): void;
        isFullyFrozen(): boolean;
        isInWall(): boolean;
        getAllSlots(): Internal.Iterable<Internal.ItemStack>;
        remove(arg0: Internal.Entity$RemovalReason_): void;
        getScale(): number;
        isSuppressingSlidingDownLadder(): boolean;
        getBlockZ(): number;
        dampensVibrations(): boolean;
        isSilent(): boolean;
        "playSound(net.minecraft.sounds.SoundEvent)"(id: Internal.SoundEvent_): void;
        getPitch(): number;
        getPathfindingMalus(arg0: Internal.BlockPathTypes_): number;
        getRandom(): Internal.RandomSource;
        canReplaceEqualItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getPassengersAndSelf(): Internal.Stream<Internal.Entity>;
        rotate(arg0: Internal.Rotation_): number;
        shouldRiderFaceForward(arg0: Player_): boolean;
        self(): Internal.PathfinderMob;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        "getAttributeBaseValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        clearRestriction(): void;
        rayTrace(): Internal.RayTraceResultJS;
        alwaysAccepts(): boolean;
        spawnItemParticles(arg0: Internal.ItemStack_, arg1: number): void;
        "isHolding(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getNoActionTime(): number;
        isVisuallyCrawling(): boolean;
        isAggressive(): boolean;
        setYya(arg0: number): void;
        shouldUpdateFluidWhileBoating(arg0: Internal.FluidState_, arg1: Internal.Boat_): boolean;
        setDropChance(arg0: Internal.EquipmentSlot_, arg1: number): void;
        "broadcastBreakEvent(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        teleportRelative(arg0: number, arg1: number, arg2: number): void;
        setBaby(arg0: boolean): void;
        getLastHurtByMob(): Internal.LivingEntity;
        isInWaterOrBubble(): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        updateFluidHeightAndDoFluidPushing(): void;
        getPortalCooldown(): number;
        getItem(): Internal.ItemStack;
        causeFallDamage(arg0: number, arg1: number, arg2: DamageSource_): boolean;
        releaseUsingItem(): void;
        getPosition(arg0: number): Vec3d;
        removeFreeWill(): void;
        removeWhenFarAway(arg0: number): boolean;
        wait(arg0: number): void;
        isIgnoringBlockTriggers(): boolean;
        setRecordPlayingNearby(arg0: BlockPos_, arg1: boolean): void;
        getHandHoldingItemAngle(arg0: Internal.Item_): Vec3d;
        hasItemInSlot(arg0: Internal.EquipmentSlot_): boolean;
        canUpdate(arg0: boolean): void;
        getEyeInFluidType(): Internal.FluidType;
        distanceToSqr(arg0: Vec3d_): number;
        isSteppingCarefully(): boolean;
        getSoundFromFluidType(arg0: Internal.FluidType_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        "spawnAtLocation(net.minecraft.world.item.ItemStack,float)"(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        addAdditionalSaveData(pCompound: Internal.CompoundTag_): void;
        getBlockX(): number;
        /**
         * @deprecated
        */
        getLightLevelDependentMagicValue(): number;
        isFallFlying(): boolean;
        getEncodeId(): string;
        getY(arg0: number): number;
        getMaxHeadXRot(): number;
        getNbt(): Internal.CompoundTag;
        setInvisible(arg0: boolean): void;
        getEffect(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        setTotalMovementSpeedMultiplier(speed: number): void;
        setHealth(arg0: number): void;
        attack(arg0: DamageSource_, arg1: number): boolean;
        onInsideBubbleColumn(arg0: boolean): void;
        getEyePosition(): Vec3d;
        getEyeHeight(): number;
        setDiscardFriction(arg0: boolean): void;
        hasPassenger(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getYaw(): number;
        swing(arg0: Internal.InteractionHand_, arg1: boolean): void;
        getUsedItemHand(): Internal.InteractionHand;
        setDefaultMovementSpeed(speed: number): void;
        canAttackType(arg0: Internal.EntityType_<any>): boolean;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        canEntityBeSeen(entity: Internal.LivingEntity_): boolean;
        getBrain(): Internal.Brain<any>;
        setCustomNameVisible(arg0: boolean): void;
        isAlliedTo(arg0: Internal.Team_): boolean;
        canFireProjectileWeapon(arg0: Internal.ProjectileWeaponItem_): boolean;
        getControllingPassenger(): Internal.LivingEntity;
        getScriptType(): Internal.ScriptType;
        shouldDiscardFriction(): boolean;
        startRiding(arg0: Internal.Entity_): boolean;
        saveWithoutId(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        getForward(): Vec3d;
        serializeNBT(): Internal.Tag;
        setFeetArmorItem(item: Internal.ItemStack_): void;
        getId(): number;
        canBeHitByProjectile(): boolean;
        handler$zcl000$isInvisibleTo(arg0: Player_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getEyeY(): number;
        skipDropExperience(): void;
        getBoundingBox(): Internal.AABB;
        isInWaterOrRain(): boolean;
        setItemSlot(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        equals(arg0: any): boolean;
        getViewYRot(arg0: number): number;
        dismountsUnderwater(): boolean;
        isAffectedByPotions(): boolean;
        addTag(arg0: string): boolean;
        playerTouch(arg0: Player_): void;
        getEyeHeight(arg0: Internal.Pose_): number;
        getAddEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        isWithinRestriction(arg0: BlockPos_): boolean;
        static getEquipmentForSlot(arg0: Internal.EquipmentSlot_, arg1: number): Internal.Item;
        getTeam(): Internal.Team;
        "self()"(): Internal.PathfinderMob;
        setTicksFrozen(arg0: number): void;
        getUseItem(): Internal.ItemStack;
        getMyRidingOffset(): number;
        dismountTo(arg0: number, arg1: number, arg2: number): void;
        hasCustomName(): boolean;
        getSwimAmount(arg0: number): number;
        isLiving(): boolean;
        getX(): number;
        isVehicle(): boolean;
        spawnAtLocation(arg0: Internal.ItemStack_): Internal.ItemEntity;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        thunderHit(arg0: Internal.ServerLevel_, arg1: Internal.LightningBolt_): void;
        setIsInPowderSnow(arg0: boolean): void;
        doEnchantDamageEffects(arg0: Internal.LivingEntity_, arg1: Internal.Entity_): void;
        setCustomName(arg0: Internal.Component_): void;
        getTeamId(): string;
        canBeRiddenUnderFluidType(arg0: Internal.FluidType_, arg1: Internal.Entity_): boolean;
        setStingerCount(arg0: number): void;
        getMaxHeadYRot(): number;
        isCustomNameVisible(): boolean;
        isSupportedBy(arg0: BlockPos_): boolean;
        getPistonPushReaction(): Internal.PushReaction;
        shouldRiderSit(): boolean;
        lookAt(arg0: Internal.EntityAnchorArgument$Anchor_, arg1: Vec3d_): void;
        getLootTableSeed(): number;
        isInFluidType(arg0: Internal.FluidType_): boolean;
        getFluidMotionScale(arg0: Internal.FluidType_): number;
        getMotionX(): number;
        "onSyncedDataUpdated(java.util.List)"(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        canBeLeashed(arg0: Player_): boolean;
        hasIndirectPassenger(arg0: Internal.Entity_): boolean;
        getEntityData(): Internal.SynchedEntityData;
        handleInsidePortal(arg0: BlockPos_): void;
        getPotionEffects(): Internal.EntityPotionEffectsJS;
        updateFluidHeightAndDoFluidPushing(arg0: Internal.Predicate_<Internal.FluidState>): void;
        absMoveTo(arg0: number, arg1: number, arg2: number): void;
        isOnRails(): boolean;
        getStingerCount(): number;
        getFallSounds(): Internal.LivingEntity$Fallsounds;
        getAttributeTotalValue(attribute: Internal.Attribute_): number;
        getDimensionChangingDelay(): number;
        setLivingEntityFlag(arg0: number, arg1: boolean): void;
        setTeleportLocationBehindTarget(distance: number): boolean;
        setYaw(arg0: number): void;
        getPickRadius(): number;
        isPathFinding(): boolean;
        isRemoved(): boolean;
        teleportToWithTicket(arg0: number, arg1: number, arg2: number): void;
        spawnAnim(): void;
        getJumpBoostPower(): number;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        self(): Internal.Entity;
        refreshDimensions(): void;
        "isHolding(net.minecraft.world.item.Item)"(arg0: Internal.Item_): boolean;
        "spawnAtLocation(net.minecraft.world.level.ItemLike)"(arg0: Internal.ItemLike_): Internal.ItemEntity;
        "getAttributeValue(net.minecraft.world.entity.ai.attributes.Attribute)"(arg0: Internal.Attribute_): number;
        getEyePosition(arg0: number): Vec3d;
        setShiftKeyDown(arg0: boolean): void;
        getPassengers(): Internal.EntityArrayList;
        getMaxHeightFluidType(): Internal.FluidType;
        getZ(): number;
        teleportTo(arg0: number, arg1: number, arg2: number): void;
        getAttributeBaseValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        getServer(): Internal.MinecraftServer;
        getExperienceReward(): number;
        getFirstPassenger(): Internal.Entity;
        handler$zbn000$curio$canFreeze(arg0: Internal.CallbackInfoReturnable_<any>): void;
        heal(arg0: number): void;
        getSpawnType(): Internal.MobSpawnType;
        setLastHurtMob(arg0: Internal.Entity_): void;
        setLastHurtByMob(arg0: Internal.LivingEntity_): void;
        interact(arg0: Player_, arg1: Internal.InteractionHand_): Internal.InteractionResult;
        getDismountLocationForPassenger(arg0: Internal.LivingEntity_): Vec3d;
        checkSlowFallDistance(): void;
        canStandOnFluid(arg0: Internal.FluidState_): boolean;
        touchingUnloadedChunk(): boolean;
        modifyAttribute(attribute: Internal.Attribute_, identifier: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        getLookAngle(): Vec3d;
        getAmbientSoundInterval(): number;
        setArrowCount(arg0: number): void;
        getMotionZ(): number;
        isPersistenceRequired(): boolean;
        isInvisible(): boolean;
        is(arg0: Internal.Entity_): boolean;
        getBedOrientation(): Internal.Direction;
        ejectPassengers(): void;
        removeEffect(arg0: Internal.MobEffect_): boolean;
        getProfile(): Internal.GameProfile;
        isDeadOrDying(): boolean;
        setHeadArmorItem(item: Internal.ItemStack_): void;
        static setViewScale(arg0: number): void;
        take(arg0: Internal.Entity_, arg1: number): void;
        setLevelCallback(arg0: Internal.EntityInLevelCallback_): void;
        getLookControl(): Internal.LookControl;
        isPreventingPlayerRest(arg0: Player_): boolean;
        playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        canAttack(arg0: Internal.LivingEntity_): boolean;
        getOffHandItem(): Internal.ItemStack;
        startSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isOnScoreboardTeam(teamId: string): boolean;
        startUsingItem(arg0: Internal.InteractionHand_): void;
        position(): Vec3d;
        static getEquipmentSlotForItem(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getEquipment(slot: Internal.EquipmentSlot_): Internal.ItemStack;
        displayFireAnimation(): boolean;
        getRopeHoldPosition(arg0: number): Vec3d;
        copyPosition(arg0: Internal.Entity_): void;
        onAddedToWorld(): void;
        "hasPassenger(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        isCrouching(): boolean;
        "getAttributeBaseValue(net.minecraft.world.entity.ai.attributes.Attribute)"(attribute: Internal.Attribute_): number;
        onLeaveCombat(): void;
        setY(y: number): void;
        getAttributeValue(arg0: Internal.Attribute_): number;
        getFeetBlockState(): Internal.BlockState;
        isWithinRestriction(): boolean;
        changeDimension(arg0: Internal.ServerLevel_, arg1: Internal.ITeleporter_): Internal.Entity;
        positionRider(arg0: Internal.Entity_): void;
        baseTick(): void;
        broadcastToPlayer(arg0: Internal.ServerPlayer_): boolean;
        getSleepingPos(): Internal.Optional<BlockPos>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        damageHeldItem(): void;
        getCustomName(): Internal.Component;
        getClass(): typeof any;
        "self()"(): Internal.Entity;
        isVisuallySwimming(): boolean;
        getMaxAirSupply(): number;
        canTrample(arg0: Internal.BlockState_, arg1: BlockPos_, arg2: number): boolean;
        setItemInHand(arg0: Internal.InteractionHand_, arg1: Internal.ItemStack_): void;
        setMaxHealth(hp: number): void;
        getFacing(): Internal.Direction;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>, arg1: boolean): boolean;
        isPassengerOfSameVehicle(arg0: Internal.Entity_): boolean;
        getBoundingBoxForCulling(): Internal.AABB;
        getTarget(): Internal.LivingEntity;
        restrictTo(arg0: BlockPos_, arg1: number): void;
        trackingPosition(): Vec3d;
        getNameTagOffsetY(): number;
        isInvulnerable(): boolean;
        isInLava(): boolean;
        isInWater(): boolean;
        awardKillScore(arg0: Internal.Entity_, arg1: number, arg2: DamageSource_): void;
        finalizeSpawn(arg0: Internal.ServerLevelAccessor_, arg1: Internal.DifficultyInstance_, arg2: Internal.MobSpawnType_, arg3: Internal.SpawnGroupData_, arg4: Internal.CompoundTag_): Internal.SpawnGroupData;
        hasEffect(arg0: Internal.MobEffect_): boolean;
        swing(arg0: Internal.InteractionHand_): void;
        getHeldItem(hand: Internal.InteractionHand_): Internal.ItemStack;
        getRootVehicle(): Internal.Entity;
        onPathfindingDone(): void;
        save(arg0: Internal.CompoundTag_): boolean;
        getLocalBoundsForPose(arg0: Internal.Pose_): Internal.AABB;
        isNoGravity(): boolean;
        m_8024_(): void;
        curePotionEffects(arg0: Internal.ItemStack_): boolean;
        onItemPickup(arg0: Internal.ItemEntity_): void;
        updateSwimming(): void;
        isHolding(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getSpeed(): number;
        shouldInformAdmins(): boolean;
        canFluidExtinguish(arg0: Internal.FluidType_): boolean;
        rideTick(): void;
        wait(): void;
        getUuid(): Internal.UUID;
        setOffHandItem(item: Internal.ItemStack_): void;
        spawn(): void;
        setNoAi(arg0: boolean): void;
        teleportTo(arg0: Internal.ServerLevel_, arg1: number, arg2: number, arg3: number, arg4: Internal.Set_<Internal.RelativeMovement>, arg5: number, arg6: number): boolean;
        shouldShowName(): boolean;
        setBurningDashDirectionData(): void;
        getArmorSlots(): Internal.Iterable<Internal.ItemStack>;
        canPickUpLoot(): boolean;
        kill(): void;
        onEnterCombat(): void;
        animateHurt(arg0: number): void;
        static resetForwardDirectionOfRelativePortalPosition(arg0: Vec3d_): Vec3d;
        hasRestriction(): boolean;
        getHeadArmorItem(): Internal.ItemStack;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntityDimensions;
        deserializeNBT(arg0: Internal.Tag_): void;
        revive(): void;
        getBbWidth(): number;
        static checkAnyLightMonsterSpawnRules(arg0: Internal.EntityType_<Internal.Monster>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        isEyeInFluidType(arg0: Internal.FluidType_): boolean;
        addDeltaMovement(arg0: Vec3d_): void;
        canDrownInFluidType(arg0: Internal.FluidType_): boolean;
        "getName()"(): Internal.Component;
        mirror(arg0: Internal.Mirror_): number;
        canUpdate(): boolean;
        knockback(arg0: number, arg1: number, arg2: number): void;
        getTicksRequiredToFreeze(): number;
        getVisibilityPercent(arg0: Internal.Entity_): number;
        getMaxSpawnClusterSize(): number;
        handler$zdd000$changeGlowOutline(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getUsername(): string;
        move(arg0: Internal.MoverType_, arg1: Vec3d_): void;
        onRemovedFromWorld(): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        isPickable(): boolean;
        setYHeadRot(arg0: number): void;
        setJumping(arg0: boolean): void;
        getPickResult(): Internal.ItemStack;
        setDrinkingPotion(drinkingPotion: boolean): void;
        "getMainHandItem()"(): Internal.ItemStack;
        getAbsorptionAmount(): number;
        getRandomY(): number;
        getDisplayName(): Internal.Component;
        getMobType(): Internal.MobType;
        travel(arg0: Vec3d_): void;
        getItemInHand(arg0: Internal.InteractionHand_): Internal.ItemStack;
        startDrinkingPotion(): void;
        getFluidTypeHeight(arg0: Internal.FluidType_): number;
        shouldBeSaved(): boolean;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        removeTag(arg0: string): boolean;
        isHoldingInAnyHand(i: Internal.Ingredient_): boolean;
        /**
         * @deprecated
        */
        getFluidHeight(arg0: Internal.TagKey_<Internal.Fluid>): number;
        canSpawnSoulSpeedParticle(): boolean;
        notifyAll(): void;
        aiStep(): void;
        getPassengersRidingOffset(): number;
        setAttributeBaseValue(attribute: Internal.Attribute_, value: number): void;
        "isInFluidType(java.util.function.BiPredicate)"(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        distanceToEntitySqr(arg0: Internal.Entity_): number;
        isFrame(): boolean;
        broadcastBreakEvent(arg0: Internal.InteractionHand_): void;
        setLegsArmorItem(item: Internal.ItemStack_): void;
        discard(): void;
        sendSystemMessage(arg0: Internal.Component_): void;
        acceptsSuccess(): boolean;
        notifyDangerousProjectile(projectile: Internal.Projectile_): void;
        setNoGravity(arg0: boolean): void;
        getUseItemRemainingTicks(): number;
        attackable(): boolean;
        createCommandSourceStack(): Internal.CommandSourceStack;
        getNavigation(): Internal.PathNavigation;
        isControlledByLocalInstance(): boolean;
        isMonster(): boolean;
        getLastClimbablePos(): Internal.Optional<BlockPos>;
        getEatingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getPerceivedTargetDistanceSquareForMeleeAttack(arg0: Internal.LivingEntity_): number;
        getHorizontalFacing(): Internal.Direction;
        onSyncedDataUpdated(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        setId(arg0: number): void;
        getType(): string;
        isDamageSourceBlocked(arg0: DamageSource_): boolean;
        getLightProbePosition(arg0: number): Vec3d;
        getActiveEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>;
        onEquipItem(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        static isDarkEnoughToSpawn(arg0: Internal.ServerLevelAccessor_, arg1: BlockPos_, arg2: Internal.RandomSource_): boolean;
        checkDespawn(): void;
        getWalkTargetValue(arg0: BlockPos_, arg1: Internal.LevelReader_): number;
        handler$zco000$updateInvisibilityStatus(arg0: Internal.CallbackInfo_): void;
        lookAt(arg0: Internal.Entity_, arg1: number, arg2: number): void;
        setHeldItem(hand: Internal.InteractionHand_, item: Internal.ItemStack_): void;
        equipItemIfPossible(arg0: Internal.ItemStack_): Internal.ItemStack;
        onSyncedDataUpdated(pKey: Internal.EntityDataAccessor_<any>): void;
        lerpHeadTo(arg0: number, arg1: number): void;
        canDisableShield(): boolean;
        setMotionX(x: number): void;
        getHandSlots(): Internal.Iterable<Internal.ItemStack>;
        distanceToEntity(arg0: Internal.Entity_): number;
        wait(arg0: number, arg1: number): void;
        getTeamColor(): number;
        setNbt(nbt: Internal.CompoundTag_): void;
        "isInFluidType(net.minecraftforge.fluids.FluidType)"(arg0: Internal.FluidType_): boolean;
        checkSpawnObstruction(arg0: Internal.LevelReader_): boolean;
        extinguish(): void;
        getRestrictRadius(): number;
        moveTo(arg0: Vec3d_): void;
        isColliding(arg0: BlockPos_, arg1: Internal.BlockState_): boolean;
        "swing(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        isInvertedHealAndHarm(): boolean;
        canHoldItem(arg0: Internal.ItemStack_): boolean;
        killedEntity(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): boolean;
        getClassification(arg0: boolean): Internal.MobCategory;
        isFreezing(): boolean;
        runCommand(command: string): number;
        setGuaranteedDrop(arg0: Internal.EquipmentSlot_): void;
        setSharedFlagOnFire(arg0: boolean): void;
        set defaultMovementSpeedMultiplier(speed: number)
        get suppressingBounce(): boolean
        set target(arg0: Internal.LivingEntity_)
        get onFire(): boolean
        get positionCodec(): Internal.VecDeltaCodec
        get shaking(): boolean
        set maxUpStep(arg0: number)
        get fallFlyingTicks(): number
        set xxa(arg0: number)
        set delayedLeashHolderId(arg0: number)
        get shiftKeyDown(): boolean
        set UUID(arg0: Internal.UUID_)
        set motionZ(z: number)
        get magicData(): Internal.MagicData
        get blockY(): number
        get spectator(): boolean
        set mainHandItem(item: Internal.ItemStack_)
        get persistentData(): Internal.CompoundTag
        get health(): number
        get maxHealth(): number
        set aggressive(arg0: boolean)
        get hasUsedSingleAttack(): boolean
        set removed(arg0: Internal.Entity$RemovalReason_)
        get inWaterRainOrBubble(): boolean
        get removalReason(): Internal.Entity$RemovalReason
        get indirectPassengers(): Internal.Iterable<Internal.Entity>
        set boundingBox(arg0: Internal.AABB_)
        get ambientCreature(): boolean
        set zza(arg0: number)
        get block(): Internal.BlockContainerJS
        get name(): Internal.Component
        get controlledVehicle(): Internal.Entity
        get armorValue(): number
        get killCredit(): Internal.LivingEntity
        get autoSpinAttack(): boolean
        get remainingFireTicks(): number
        get maxFallDistance(): number
        get ticksFrozen(): number
        get voicePitch(): number
        set statusMessage(message: Internal.Component_)
        set sleepingPos(arg0: BlockPos_)
        get descending(): boolean
        get headRotSpeed(): number
        get YHeadRot(): number
        set absorptionAmount(arg0: number)
        set deltaMovement(arg0: Vec3d_)
        get baby(): boolean
        get glowing(): boolean
        get leashOffset(): Vec3d
        get attackable(): boolean
        get underWater(): boolean
        get leashHolder(): Internal.Entity
        get sensing(): Internal.Sensing
        get legsArmorItem(): Internal.ItemStack
        get deltaMovement(): Vec3d
        set secondsOnFire(arg0: number)
        get "displayName()"(): Internal.Component
        get lootTable(): ResourceLocation
        get ticksUsingItem(): number
        get arrowCount(): number
        get moveControl(): Internal.MoveControl
        get defaultMovementSpeed(): number
        get peacefulCreature(): boolean
        set onGround(arg0: boolean)
        set hasUsedSingleAttack(hasUsedSingleAttack: boolean)
        get firstTick(): boolean
        get lastHurtByMobTimestamp(): number
        get vehicle(): Internal.Entity
        get effectiveAi(): boolean
        set spawnCancelled(arg0: boolean)
        get stringUuid(): string
        set swimming(arg0: boolean)
        get mainArm(): Internal.HumanoidArm
        get rotationVector(): Internal.Vec2
        get hurtDir(): number
        get sprinting(): boolean
        get motionY(): number
        get offhandItem(): Internal.ItemStack
        get drinkingPotion(): boolean
        get lastHurtMob(): Internal.LivingEntity
        get selfAndPassengers(): Internal.Stream<Internal.Entity>
        get addedToWorld(): boolean
        get soundSource(): Internal.SoundSource
        get lastDamageSource(): DamageSource
        set noActionTime(arg0: number)
        set movementSpeedAddition(speed: number)
        get pose(): Internal.Pose
        get restrictCenter(): BlockPos
        get leftHanded(): boolean
        set z(z: number)
        get y(): number
        get blocking(): boolean
        get casting(): boolean
        /**
         * @deprecated
        */
        get pushedByFluid(): boolean
        get armorCoverPercentage(): number
        get airSupply(): number
        get player(): boolean
        get animal(): boolean
        get motionDirection(): Internal.Direction
        get commandSenderWorld(): Internal.Level
        get totalMovementSpeed(): number
        get attributes(): Internal.AttributeMap
        get spawnCancelled(): boolean
        get swimming(): boolean
        set sprinting(arg0: boolean)
        set x(x: number)
        get portalWaitTime(): number
        get blockStateOn(): Internal.BlockState
        get fluidJumpThreshold(): number
        set airSupply(arg0: number)
        get onPos(): BlockPos
        get undead(): boolean
        get stepHeight(): number
        get sleeping(): boolean
        get dismountPoses(): Internal.ImmutableList<Internal.Pose>
        get lastHurtMobTimestamp(): number
        set remainingFireTicks(arg0: number)
        /**
         * @deprecated
        */
        get onPosLegacy(): BlockPos
        set pos(arg0: Vec3d_)
        set canPickUpLoot(arg0: boolean)
        get mainHandItem(): Internal.ItemStack
        set silent(arg0: boolean)
        set leftHanded(arg0: boolean)
        get activeEffects(): Internal.Collection<Internal.MobEffectInstance>
        get onPortalCooldown(): boolean
        set pitch(arg0: number)
        get multipartEntity(): boolean
        get parts(): Internal.PartEntity<any>[]
        get usingItem(): boolean
        get alwaysTicking(): boolean
        get forgePersistentData(): Internal.CompoundTag
        set invulnerable(arg0: boolean)
        get inFluidType(): boolean
        set glowing(arg0: boolean)
        get alive(): boolean
        get bbHeight(): number
        get tags(): Internal.Set<string>
        set syncedSpellData(syncedSpellData: Internal.SyncedSpellData_)
        get lastAttacker(): Internal.LivingEntity
        get percentFrozen(): number
        set portalCooldown(arg0: number)
        set position(block: Internal.BlockContainerJS_)
        get leashed(): boolean
        set pose(arg0: Internal.Pose_)
        get reachDistance(): number
        get entityType(): Internal.EntityType<any>
        get waterCreature(): boolean
        set lastHurtByPlayer(arg0: Player_)
        get "server()"(): Internal.MinecraftServer
        get pushable(): boolean
        set YBodyRot(arg0: number)
        set motionY(y: number)
        set chestArmorItem(item: Internal.ItemStack_)
        get passenger(): boolean
        get sensitiveToWater(): boolean
        get jumpControl(): Internal.JumpControl
        get feetArmorItem(): Internal.ItemStack
        get viewScale(): number
        get visualRotationYInDegrees(): number
        set speed(arg0: number)
        get discrete(): boolean
        get level(): Internal.Level
        get combatTracker(): Internal.CombatTracker
        get noAi(): boolean
        get chestArmorItem(): Internal.ItemStack
        get fullyFrozen(): boolean
        get inWall(): boolean
        get allSlots(): Internal.Iterable<Internal.ItemStack>
        get scale(): number
        get suppressingSlidingDownLadder(): boolean
        get blockZ(): number
        get silent(): boolean
        get pitch(): number
        get random(): Internal.RandomSource
        get passengersAndSelf(): Internal.Stream<Internal.Entity>
        get noActionTime(): number
        get visuallyCrawling(): boolean
        get aggressive(): boolean
        set yya(arg0: number)
        set baby(arg0: boolean)
        get lastHurtByMob(): Internal.LivingEntity
        get inWaterOrBubble(): boolean
        get portalCooldown(): number
        get item(): Internal.ItemStack
        get ignoringBlockTriggers(): boolean
        get eyeInFluidType(): Internal.FluidType
        get steppingCarefully(): boolean
        get blockX(): number
        /**
         * @deprecated
        */
        get lightLevelDependentMagicValue(): number
        get fallFlying(): boolean
        get encodeId(): string
        get maxHeadXRot(): number
        get nbt(): Internal.CompoundTag
        set invisible(arg0: boolean)
        set totalMovementSpeedMultiplier(speed: number)
        set health(arg0: number)
        get eyePosition(): Vec3d
        get eyeHeight(): number
        set discardFriction(arg0: boolean)
        get yaw(): number
        get usedItemHand(): Internal.InteractionHand
        set defaultMovementSpeed(speed: number)
        get brain(): Internal.Brain<any>
        set customNameVisible(arg0: boolean)
        get controllingPassenger(): Internal.LivingEntity
        get scriptType(): Internal.ScriptType
        get forward(): Vec3d
        set feetArmorItem(item: Internal.ItemStack_)
        get id(): number
        get eyeY(): number
        get boundingBox(): Internal.AABB
        get inWaterOrRain(): boolean
        get affectedByPotions(): boolean
        get addEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get team(): Internal.Team
        set ticksFrozen(arg0: number)
        get useItem(): Internal.ItemStack
        get myRidingOffset(): number
        get living(): boolean
        get x(): number
        get vehicle(): boolean
        set isInPowderSnow(arg0: boolean)
        set customName(arg0: Internal.Component_)
        get teamId(): string
        set stingerCount(arg0: number)
        get maxHeadYRot(): number
        get customNameVisible(): boolean
        get pistonPushReaction(): Internal.PushReaction
        get lootTableSeed(): number
        get motionX(): number
        get entityData(): Internal.SynchedEntityData
        get potionEffects(): Internal.EntityPotionEffectsJS
        get onRails(): boolean
        get stingerCount(): number
        get fallSounds(): Internal.LivingEntity$Fallsounds
        get dimensionChangingDelay(): number
        set teleportLocationBehindTarget(distance: number)
        set yaw(arg0: number)
        get pickRadius(): number
        get pathFinding(): boolean
        get removed(): boolean
        get jumpBoostPower(): number
        set shiftKeyDown(arg0: boolean)
        get passengers(): Internal.EntityArrayList
        get maxHeightFluidType(): Internal.FluidType
        get z(): number
        get server(): Internal.MinecraftServer
        get experienceReward(): number
        get firstPassenger(): Internal.Entity
        get spawnType(): Internal.MobSpawnType
        set lastHurtMob(arg0: Internal.Entity_)
        set lastHurtByMob(arg0: Internal.LivingEntity_)
        get lookAngle(): Vec3d
        get ambientSoundInterval(): number
        set arrowCount(arg0: number)
        get motionZ(): number
        get persistenceRequired(): boolean
        get invisible(): boolean
        get bedOrientation(): Internal.Direction
        get profile(): Internal.GameProfile
        get deadOrDying(): boolean
        set headArmorItem(item: Internal.ItemStack_)
        set viewScale(arg0: number)
        set levelCallback(arg0: Internal.EntityInLevelCallback_)
        get lookControl(): Internal.LookControl
        get offHandItem(): Internal.ItemStack
        get crouching(): boolean
        set y(y: number)
        get feetBlockState(): Internal.BlockState
        get withinRestriction(): boolean
        get sleepingPos(): Internal.Optional<BlockPos>
        get customName(): Internal.Component
        get class(): typeof any
        get visuallySwimming(): boolean
        get maxAirSupply(): number
        set maxHealth(hp: number)
        get facing(): Internal.Direction
        get boundingBoxForCulling(): Internal.AABB
        get target(): Internal.LivingEntity
        get nameTagOffsetY(): number
        get invulnerable(): boolean
        get inLava(): boolean
        get inWater(): boolean
        get rootVehicle(): Internal.Entity
        get noGravity(): boolean
        get speed(): number
        get uuid(): Internal.UUID
        set offHandItem(item: Internal.ItemStack_)
        set noAi(arg0: boolean)
        get armorSlots(): Internal.Iterable<Internal.ItemStack>
        get headArmorItem(): Internal.ItemStack
        get bbWidth(): number
        get "name()"(): Internal.Component
        get ticksRequiredToFreeze(): number
        get maxSpawnClusterSize(): number
        get username(): string
        get pickable(): boolean
        set YHeadRot(arg0: number)
        set jumping(arg0: boolean)
        get pickResult(): Internal.ItemStack
        set drinkingPotion(drinkingPotion: boolean)
        get "mainHandItem()"(): Internal.ItemStack
        get absorptionAmount(): number
        get randomY(): number
        get displayName(): Internal.Component
        get mobType(): Internal.MobType
        get passengersRidingOffset(): number
        get frame(): boolean
        set legsArmorItem(item: Internal.ItemStack_)
        set noGravity(arg0: boolean)
        get useItemRemainingTicks(): number
        get navigation(): Internal.PathNavigation
        get controlledByLocalInstance(): boolean
        get monster(): boolean
        get lastClimbablePos(): Internal.Optional<BlockPos>
        get horizontalFacing(): Internal.Direction
        set id(arg0: number)
        get type(): string
        get activeEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>
        set motionX(x: number)
        get handSlots(): Internal.Iterable<Internal.ItemStack>
        get teamColor(): number
        set nbt(nbt: Internal.CompoundTag_)
        get restrictRadius(): number
        get invertedHealAndHarm(): boolean
        get freezing(): boolean
        set guaranteedDrop(arg0: Internal.EquipmentSlot_)
        set sharedFlagOnFire(arg0: boolean)
    }
    type AbstractSkeleton_ = AbstractSkeleton;
    interface FieldNamingStrategy {
        abstract translateName(arg0: Internal.Field_): string;
        (arg0: Internal.Field): string;
    }
    type FieldNamingStrategy_ = ((arg0: Internal.Field)=> string) | FieldNamingStrategy;
    interface SurfaceRules$RuleSource extends Internal.Function<Internal.SurfaceRules$Context, Internal.SurfaceRules$SurfaceRule> {
        abstract apply(arg0: Internal.SurfaceRules$Context_): Internal.SurfaceRules$SurfaceRule;
        bootstrap(arg0: Internal.Registry_<Internal.Codec<Internal.SurfaceRules$RuleSource>>): Internal.Codec<Internal.SurfaceRules$RuleSource>;
        andThen<V>(arg0: Internal.Function_<Internal.SurfaceRules$SurfaceRule, V>): Internal.Function<Internal.SurfaceRules$Context, V>;
        abstract codec(): Internal.KeyDispatchDataCodec<Internal.SurfaceRules$RuleSource>;
        compose<V>(arg0: Internal.Function_<V, Internal.SurfaceRules$Context>): Internal.Function<V, Internal.SurfaceRules$SurfaceRule>;
        identity<T>(): Internal.Function<T, T>;
        readonly CODEC: Internal.Codec<Internal.SurfaceRules$RuleSource>;
    }
    type SurfaceRules$RuleSource_ = SurfaceRules$RuleSource;
    class HasSturdyFacePredicate implements net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate {
        constructor(arg0: Vec3i_, arg1: Internal.Direction_)
        static noFluid(arg0: Vec3i_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        and(arg0: Internal.BiPredicate_<Internal.WorldGenLevel, BlockPos>): Internal.BiPredicate<Internal.WorldGenLevel, BlockPos>;
        static "matchesBlocks(java.util.List)"(arg0: Internal.List_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static matchesTag(arg0: Vec3i_, arg1: Internal.TagKey_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        notify(): void;
        negate(): Internal.BiPredicate<Internal.WorldGenLevel, BlockPos>;
        test(arg0: Internal.WorldGenLevel_, arg1: BlockPos_): boolean;
        static solid(arg0: Vec3i_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static insideWorld(arg0: Vec3i_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        or(arg0: Internal.BiPredicate_<Internal.WorldGenLevel, BlockPos>): Internal.BiPredicate<Internal.WorldGenLevel, BlockPos>;
        static matchesTag(arg0: Internal.TagKey_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static alwaysTrue(): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static solid(): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        type(): Internal.BlockPredicateType<any>;
        static matchesBlocks(arg0: Vec3i_, arg1: Internal.List_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static allOf(...arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "matchesBlocks(net.minecraft.world.level.block.Block[])"(...arg0: Internal.Block_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static replaceable(): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static matchesFluids(arg0: Vec3i_, arg1: Internal.List_<Internal.Fluid>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static matchesFluids(arg0: Vec3i_, ...arg1: Internal.Fluid_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        wait(): void;
        static anyOf(...arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "anyOf(net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate[])"(...arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static hasSturdyFace(arg0: Vec3i_, arg1: Internal.Direction_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        test(arg0: any, arg1: any): boolean;
        static matchesBlocks(...arg0: Internal.Block_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static hasSturdyFace(arg0: Internal.Direction_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        getClass(): typeof any;
        static "matchesFluids(net.minecraft.core.Vec3i,net.minecraft.world.level.material.Fluid[])"(arg0: Vec3i_, ...arg1: Internal.Fluid_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "allOf(java.util.List)"(arg0: Internal.List_<net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static anyOf(arg0: Internal.List_<net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "anyOf(java.util.List)"(arg0: Internal.List_<net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static noFluid(): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        wait(arg0: number, arg1: number): void;
        static anyOf(arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_, arg1: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "matchesBlocks(net.minecraft.core.Vec3i,net.minecraft.world.level.block.Block[])"(arg0: Vec3i_, ...arg1: Internal.Block_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "allOf(net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate[])"(...arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        "test(net.minecraft.world.level.WorldGenLevel,net.minecraft.core.BlockPos)"(arg0: Internal.WorldGenLevel_, arg1: BlockPos_): boolean;
        static matchesBlocks(arg0: Vec3i_, ...arg1: Internal.Block_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        toString(): string;
        notifyAll(): void;
        static "matchesFluids(net.minecraft.core.Vec3i,java.util.List)"(arg0: Vec3i_, arg1: Internal.List_<Internal.Fluid>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "matchesBlocks(net.minecraft.core.Vec3i,java.util.List)"(arg0: Vec3i_, arg1: Internal.List_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static wouldSurvive(arg0: Internal.BlockState_, arg1: Vec3i_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        hashCode(): number;
        static not(arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static allOf(arg0: Internal.List_<net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static allOf(arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_, arg1: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        wait(arg0: number): void;
        static replaceable(arg0: Vec3i_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        "test(java.lang.Object,java.lang.Object)"(arg0: any, arg1: any): boolean;
        static matchesBlocks(arg0: Internal.List_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        equals(arg0: any): boolean;
        static matchesFluids(...arg0: Internal.Fluid_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        get class(): typeof any
        static readonly CODEC: Internal.Codec<Internal.HasSturdyFacePredicate>;
    }
    type HasSturdyFacePredicate_ = HasSturdyFacePredicate;
    class GlazedTerracottaBlock extends Internal.HorizontalDirectionalBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getDescriptionId(): string;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        setFriction(arg0: number): void;
        getTypeData(): Internal.CompoundTag;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getSpeedFactor(): number;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Player_): void;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Player_): Internal.ItemStack;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getRenderPropertiesInternal(): any;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setRequiresTool(v: boolean): void;
        setSpeedFactor(arg0: number): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        getFriction(): number;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        wait(arg0: number): void;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        notify(): void;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        setDestroySpeed(v: number): void;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Player_): boolean;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        wait(): void;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        /**
         * @deprecated
        */
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<Internal.Component>, arg3: Internal.TooltipFlag_): void;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_): void;
        /**
         * @deprecated
        */
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static stateById(arg0: number): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get descriptionId(): string
        /**
         * @deprecated
        */
        get explosionResistance(): number
        set friction(arg0: number)
        get typeData(): Internal.CompoundTag
        get jumpFactor(): number
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        set destroySpeed(v: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get name(): Internal.MutableComponent
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        get mod(): string
        set soundType(arg0: SoundType_)
        set hasCollision(arg0: boolean)
    }
    type GlazedTerracottaBlock_ = GlazedTerracottaBlock;
    class ArgumentSignatures extends Internal.Record {
        constructor(arg0: Internal.List_<Internal.ArgumentSignatures$Entry>)
        constructor(arg0: Internal.FriendlyByteBuf_)
        getClass(): typeof any;
        write(arg0: Internal.FriendlyByteBuf_): void;
        toString(): string;
        get(arg0: string): Internal.MessageSignature;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        static signCommand(arg0: Internal.SignableCommand_<any>, arg1: Internal.ArgumentSignatures$Signer_): Internal.ArgumentSignatures;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        entries(): Internal.List<Internal.ArgumentSignatures$Entry>;
        get class(): typeof any
        static readonly EMPTY: (Internal.ArgumentSignatures) & (Internal.ArgumentSignatures);
    }
    type ArgumentSignatures_ = ArgumentSignatures;
    abstract class StructurePiece {
        constructor(arg0: Internal.StructurePieceType_, arg1: Internal.CompoundTag_)
        getClass(): typeof any;
        static findCollisionPiece(arg0: Internal.List_<Internal.StructurePiece>, arg1: Internal.BoundingBox_): Internal.StructurePiece;
        isCloseToChunk(arg0: Internal.ChunkPos_, arg1: number): boolean;
        getOrientation(): Internal.Direction;
        createTag(arg0: Internal.StructurePieceSerializationContext_): Internal.CompoundTag;
        notify(): void;
        getBoundingBox(): Internal.BoundingBox;
        wait(arg0: number, arg1: number): void;
        getMirror(): Internal.Mirror;
        static createBoundingBox(arg0: Internal.Stream_<Internal.StructurePiece>): Internal.BoundingBox;
        getLocatorPosition(): BlockPos;
        abstract postProcess(arg0: Internal.WorldGenLevel_, arg1: Internal.StructureManager_, arg2: Internal.ChunkGenerator_, arg3: Internal.RandomSource_, arg4: Internal.BoundingBox_, arg5: Internal.ChunkPos_, arg6: BlockPos_): void;
        toString(): string;
        move(arg0: number, arg1: number, arg2: number): void;
        setGenDepth(arg0: number): void;
        getGenDepth(): number;
        notifyAll(): void;
        setOrientation(arg0: Internal.Direction_): void;
        getType(): Internal.StructurePieceType;
        getRotation(): Internal.Rotation;
        hashCode(): number;
        wait(): void;
        addChildren(arg0: Internal.StructurePiece_, arg1: Internal.StructurePieceAccessor_, arg2: Internal.RandomSource_): void;
        static reorient(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.BlockState;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get orientation(): Internal.Direction
        get boundingBox(): Internal.BoundingBox
        get mirror(): Internal.Mirror
        get locatorPosition(): BlockPos
        set genDepth(arg0: number)
        get genDepth(): number
        set orientation(arg0: Internal.Direction_)
        get type(): Internal.StructurePieceType
        get rotation(): Internal.Rotation
    }
    type StructurePiece_ = StructurePiece;
    interface LongToIntFunction {
        abstract applyAsInt(arg0: number): number;
        (arg0: number): number;
    }
    type LongToIntFunction_ = LongToIntFunction | ((arg0: number)=> number);
    abstract class TypeParameter <T> extends Internal.TypeCapture<T> {
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type TypeParameter_<T> = TypeParameter<T>;
    class VoidStartPlatformFeature extends Internal.Feature<Internal.NoneFeatureConfiguration> {
        constructor(arg0: Internal.Codec_<Internal.NoneFeatureConfiguration>)
        getClass(): typeof any;
        toString(): string;
        static checkNeighbors(arg0: Internal.Function_<BlockPos, Internal.BlockState>, arg1: BlockPos_, arg2: Internal.Predicate_<Internal.BlockState>): boolean;
        notifyAll(): void;
        place(arg0: Internal.NoneFeatureConfiguration_, arg1: Internal.WorldGenLevel_, arg2: Internal.ChunkGenerator_, arg3: Internal.RandomSource_, arg4: BlockPos_): boolean;
        notify(): void;
        static isAdjacentToAir(arg0: Internal.Function_<BlockPos, Internal.BlockState>, arg1: BlockPos_): boolean;
        wait(arg0: number, arg1: number): void;
        place(arg0: Internal.FeaturePlaceContext_<Internal.NoneFeatureConfiguration>): boolean;
        static isGrassOrDirt(arg0: Internal.LevelSimulatedReader_, arg1: BlockPos_): boolean;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        static isDirt(arg0: Internal.BlockState_): boolean;
        equals(arg0: any): boolean;
        static isReplaceable(arg0: Internal.TagKey_<Internal.Block>): Internal.Predicate<Internal.BlockState>;
        configuredCodec(): Internal.Codec<Internal.ConfiguredFeature<Internal.NoneFeatureConfiguration, Internal.Feature<Internal.NoneFeatureConfiguration>>>;
        get class(): typeof any
    }
    type VoidStartPlatformFeature_ = VoidStartPlatformFeature;
    class BiomeGenerationSettings {
        getClass(): typeof any;
        toString(): string;
        getFlowerFeatures(): Internal.List<Internal.ConfiguredFeature<any, any>>;
        getCarvingStages(): Internal.Set<Internal.GenerationStep$Carving>;
        features(): Internal.List<Internal.HolderSet<Internal.PlacedFeature>>;
        notifyAll(): void;
        hasFeature(arg0: Internal.PlacedFeature_): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        getCarvers(arg0: Internal.GenerationStep$Carving_): Internal.Iterable<Internal.Holder<Internal.ConfiguredWorldCarver<any>>>;
        equals(arg0: any): boolean;
        get class(): typeof any
        get flowerFeatures(): Internal.List<Internal.ConfiguredFeature<any, any>>
        get carvingStages(): Internal.Set<Internal.GenerationStep$Carving>
        static readonly EMPTY: (Internal.BiomeGenerationSettings) & (Internal.BiomeGenerationSettings);
        static readonly CODEC: Internal.MapCodec<Internal.BiomeGenerationSettings>;
    }
    type BiomeGenerationSettings_ = BiomeGenerationSettings;
    interface DirectoryStream$Filter <T> {
        abstract accept(arg0: T): boolean;
        (arg0: T): boolean;
    }
    type DirectoryStream$Filter_<T> = DirectoryStream$Filter<T> | ((arg0: T)=> boolean);
    interface Spliterator$OfPrimitive <T, T_CONS, T_SPLITR extends Internal.Spliterator$OfPrimitive<T, T_CONS, T_SPLITR>> extends Internal.Spliterator<T> {
        forEachRemaining(arg0: T_CONS): void;
        abstract "tryAdvance(java.util.function.Consumer)"(arg0: Internal.Consumer_<T>): boolean;
        hasCharacteristics(arg0: number): boolean;
        abstract tryAdvance(arg0: T_CONS): boolean;
        getComparator(): Internal.Comparator<T>;
        "forEachRemaining(java.util.function.Consumer)"(arg0: Internal.Consumer_<T>): void;
        abstract estimateSize(): number;
        "forEachRemaining(java.lang.Object)"(arg0: T_CONS): void;
        abstract "tryAdvance(java.lang.Object)"(arg0: T_CONS): boolean;
        trySplit(): Internal.Spliterator<any>;
        getExactSizeIfKnown(): number;
        forEachRemaining(arg0: Internal.Consumer_<T>): void;
        abstract tryAdvance(arg0: Internal.Consumer_<T>): boolean;
        abstract characteristics(): number;
        get comparator(): Internal.Comparator<T>
        get exactSizeIfKnown(): number
    }
    type Spliterator$OfPrimitive_<T, T_CONS, T_SPLITR extends Internal.Spliterator$OfPrimitive<T, T_CONS, T_SPLITR>> = Spliterator$OfPrimitive<T, T_CONS, T_SPLITR>;
    abstract class Signature extends Internal.SignatureSpi {
        clone(): any;
        getClass(): typeof any;
        verify(arg0: number[]): boolean;
        "initVerify(java.security.PublicKey)"(arg0: Internal.PublicKey_): void;
        static getInstance(arg0: string, arg1: string): Internal.Signature;
        notify(): void;
        sign(arg0: number[], arg1: number, arg2: number): number;
        wait(arg0: number, arg1: number): void;
        initVerify(arg0: Internal.Certificate_): void;
        update(arg0: Internal.ByteBuffer_): void;
        getParameters(): Internal.AlgorithmParameters;
        static getInstance(arg0: string): Internal.Signature;
        getAlgorithm(): string;
        update(arg0: number[], arg1: number, arg2: number): void;
        "update(byte[])"(arg0: number[]): void;
        static getInstance(arg0: string, arg1: Internal.Provider_): Internal.Signature;
        "initVerify(java.security.cert.Certificate)"(arg0: Internal.Certificate_): void;
        toString(): string;
        sign(): number[];
        notifyAll(): void;
        /**
         * @deprecated
        */
        getParameter(arg0: string): any;
        getProvider(): Internal.Provider;
        setParameter(arg0: Internal.AlgorithmParameterSpec_): void;
        /**
         * @deprecated
        */
        setParameter(arg0: string, arg1: any): void;
        static "getInstance(java.lang.String,java.security.Provider)"(arg0: string, arg1: Internal.Provider_): Internal.Signature;
        hashCode(): number;
        verify(arg0: number[], arg1: number, arg2: number): boolean;
        initSign(arg0: Internal.PrivateKey_, arg1: Internal.SecureRandom_): void;
        initSign(arg0: Internal.PrivateKey_): void;
        wait(): void;
        wait(arg0: number): void;
        "update(byte)"(arg0: number): void;
        "update(java.nio.ByteBuffer)"(arg0: Internal.ByteBuffer_): void;
        update(arg0: number): void;
        equals(arg0: any): boolean;
        update(arg0: number[]): void;
        static "getInstance(java.lang.String,java.lang.String)"(arg0: string, arg1: string): Internal.Signature;
        initVerify(arg0: Internal.PublicKey_): void;
        get class(): typeof any
        get parameters(): Internal.AlgorithmParameters
        get algorithm(): string
        get provider(): Internal.Provider
        set parameter(arg0: Internal.AlgorithmParameterSpec_)
    }
    type Signature_ = Signature;
    abstract class Screen extends Internal.AbstractContainerEventHandler implements Internal.AccessScreen, Internal.Renderable {
        afterMouseAction(): void;
        charTyped(arg0: string, arg1: number): boolean;
        onFilesDrop(arg0: Internal.List_<Internal.Path>): void;
        "setFocused(net.minecraft.client.gui.components.events.GuiEventListener)"(arg0: Internal.GuiEventListener_): void;
        getMinecraft(): Internal.Minecraft;
        narrationEnabled(): void;
        setFocused(arg0: boolean): void;
        static getTooltipFromItem(arg0: Internal.Minecraft_, arg1: Internal.ItemStack_): Internal.List<Internal.Component>;
        setTooltipForNextRenderPass(arg0: Internal.List_<Internal.FormattedCharSequence>): void;
        renderDirtBackground(arg0: Internal.GuiGraphics_): void;
        renderWithTooltip(arg0: Internal.GuiGraphics_, arg1: number, arg2: number, arg3: number): void;
        mouseClicked(arg0: number, arg1: number, arg2: number): boolean;
        keyReleased(arg0: number, arg1: number, arg2: number): boolean;
        notify(): void;
        static isCut(arg0: number): boolean;
        addRenderableWidget<T extends Internal.GuiEventListener & Internal.Renderable & Internal.NarratableEntry>(arg0: T): T;
        afterMouseMove(): void;
        mouseMoved(arg0: number, arg1: number): void;
        getRectangle(): Internal.ScreenRectangle;
        getFocused(): Internal.GuiEventListener;
        "setTooltipForNextRenderPass(java.util.List,net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner,boolean)"(arg0: Internal.List_<Internal.FormattedCharSequence>, arg1: Internal.ClientTooltipPositioner_, arg2: boolean): void;
        nextFocusPath(arg0: Internal.FocusNavigationEvent_): Internal.ComponentPath;
        static isCopy(arg0: number): boolean;
        magicalSpecialHackyFocus(arg0: Internal.GuiEventListener_): void;
        handleComponentClicked(arg0: Internal.Style_): boolean;
        tick(): void;
        controlling$getRenderables(): Internal.List<any>;
        static findNarratableWidget(arg0: Internal.List_<Internal.NarratableEntry>, arg1: Internal.NarratableEntry_): Internal.Screen$NarratableSearchResult;
        keyPressed(arg0: number, arg1: number, arg2: number): boolean;
        isPauseScreen(): boolean;
        setDragging(arg0: boolean): void;
        removed(): void;
        wait(): void;
        children(): Internal.List<Internal.GuiEventListener>;
        getTitle(): Internal.Component;
        render(arg0: Internal.GuiGraphics_, arg1: number, arg2: number, arg3: number): void;
        addRenderableOnly<T extends Internal.Renderable>(arg0: T): T;
        static isSelectAll(arg0: number): boolean;
        isDragging(): boolean;
        getChildAt(arg0: number, arg1: number): Internal.Optional<Internal.GuiEventListener>;
        isMouseOver(arg0: number, arg1: number): boolean;
        shouldCloseOnEsc(): boolean;
        getClass(): typeof any;
        isFocused(): boolean;
        static hasAltDown(): boolean;
        renderBackground(arg0: Internal.GuiGraphics_): void;
        getTabOrderGroup(): number;
        setFocused(arg0: Internal.GuiEventListener_): void;
        mouseScrolled(arg0: number, arg1: number, arg2: number): boolean;
        wait(arg0: number, arg1: number): void;
        onClose(): void;
        addWidget<T extends Internal.GuiEventListener & Internal.NarratableEntry>(arg0: T): T;
        static hasShiftDown(): boolean;
        init(arg0: Internal.Minecraft_, arg1: number, arg2: number): void;
        getBackgroundMusic(): Internal.Music;
        getNarrationMessage(): Internal.Component;
        mouseDragged(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): boolean;
        "setTooltipForNextRenderPass(net.minecraft.client.gui.components.Tooltip,net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner,boolean)"(arg0: Internal.Tooltip_, arg1: Internal.ClientTooltipPositioner_, arg2: boolean): void;
        toString(): string;
        notifyAll(): void;
        resize(arg0: Internal.Minecraft_, arg1: number, arg2: number): void;
        static isPaste(arg0: number): boolean;
        mouseReleased(arg0: number, arg1: number, arg2: number): boolean;
        "setFocused(boolean)"(arg0: boolean): void;
        setTooltipForNextRenderPass(arg0: Internal.List_<Internal.FormattedCharSequence>, arg1: Internal.ClientTooltipPositioner_, arg2: boolean): void;
        static hasControlDown(): boolean;
        afterKeyboardAction(): void;
        hashCode(): number;
        getCurrentFocusPath(): Internal.ComponentPath;
        added(): void;
        wait(arg0: number): void;
        handleDelayedNarration(): void;
        static wrapScreenError(arg0: Internal.Runnable_, arg1: string, arg2: string): void;
        equals(arg0: any): boolean;
        triggerImmediateNarration(arg0: boolean): void;
        setTooltipForNextRenderPass(arg0: Internal.Tooltip_, arg1: Internal.ClientTooltipPositioner_, arg2: boolean): void;
        set "focused(net.minecraft.client.gui.components.events.GuiEventListener)"(arg0: Internal.GuiEventListener_)
        get minecraft(): Internal.Minecraft
        set focused(arg0: boolean)
        set tooltipForNextRenderPass(arg0: Internal.List_<Internal.FormattedCharSequence>)
        get rectangle(): Internal.ScreenRectangle
        get focused(): Internal.GuiEventListener
        get pauseScreen(): boolean
        set dragging(arg0: boolean)
        get title(): Internal.Component
        get dragging(): boolean
        get class(): typeof any
        get focused(): boolean
        get tabOrderGroup(): number
        set focused(arg0: Internal.GuiEventListener_)
        get backgroundMusic(): Internal.Music
        get narrationMessage(): Internal.Component
        set "focused(boolean)"(arg0: boolean)
        get currentFocusPath(): Internal.ComponentPath
        static readonly BACKGROUND_LOCATION: (ResourceLocation) & (ResourceLocation);
        width: number;
        height: number;
        readonly children: Internal.List<Internal.GuiEventListener>;
        readonly renderables: Internal.List<Internal.Renderable>;
        readonly narratables: Internal.List<Internal.NarratableEntry>;
    }
    type Screen_ = Screen;
    interface RecvByteBufAllocator {
        abstract newHandle(): Internal.RecvByteBufAllocator$Handle;
        (): Internal.RecvByteBufAllocator$Handle_;
    }
    type RecvByteBufAllocator_ = (()=> Internal.RecvByteBufAllocator$Handle_) | RecvByteBufAllocator;
    class AffineTransform implements Internal.Cloneable, Internal.Serializable {
        constructor()
        constructor(arg0: number[])
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number)
        constructor(arg0: Internal.AffineTransform_)
        constructor(arg0: number[])
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number)
        static getScaleInstance(arg0: number, arg1: number): Internal.AffineTransform;
        setToRotation(arg0: number, arg1: number, arg2: number): void;
        concatenate(arg0: Internal.AffineTransform_): void;
        setToRotation(arg0: number): void;
        static getQuadrantRotateInstance(arg0: number, arg1: number, arg2: number): Internal.AffineTransform;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        setToShear(arg0: number, arg1: number): void;
        static getShearInstance(arg0: number, arg1: number): Internal.AffineTransform;
        notify(): void;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        preConcatenate(arg0: Internal.AffineTransform_): void;
        "transform(double[],int,double[],int,int)"(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        createTransformedShape(arg0: Internal.Shape_): Internal.Shape;
        getShearY(): number;
        isIdentity(): boolean;
        getScaleX(): number;
        "transform(float[],int,double[],int,int)"(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        inverseTransform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        "transform(java.awt.geom.Point2D[],int,java.awt.geom.Point2D[],int,int)"(arg0: Internal.Point2D_[], arg1: number, arg2: Internal.Point2D_[], arg3: number, arg4: number): void;
        setToScale(arg0: number, arg1: number): void;
        invert(): void;
        transform(arg0: Internal.Point2D_, arg1: Internal.Point2D_): Internal.Point2D;
        deltaTransform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        transform(arg0: Internal.Point2D_[], arg1: number, arg2: Internal.Point2D_[], arg3: number, arg4: number): void;
        setToIdentity(): void;
        setTransform(arg0: Internal.AffineTransform_): void;
        rotate(arg0: number, arg1: number, arg2: number): void;
        static getQuadrantRotateInstance(arg0: number): Internal.AffineTransform;
        getTranslateY(): number;
        static getRotateInstance(arg0: number): Internal.AffineTransform;
        wait(): void;
        inverseTransform(arg0: Internal.Point2D_, arg1: Internal.Point2D_): Internal.Point2D;
        setToTranslation(arg0: number, arg1: number): void;
        static getRotateInstance(arg0: number, arg1: number): Internal.AffineTransform;
        setToRotation(arg0: number, arg1: number, arg2: number, arg3: number): void;
        clone(): any;
        getClass(): typeof any;
        setTransform(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        scale(arg0: number, arg1: number): void;
        rotate(arg0: number, arg1: number, arg2: number, arg3: number): void;
        getMatrix(arg0: number[]): void;
        wait(arg0: number, arg1: number): void;
        deltaTransform(arg0: Internal.Point2D_, arg1: Internal.Point2D_): Internal.Point2D;
        getType(): number;
        static getTranslateInstance(arg0: number, arg1: number): Internal.AffineTransform;
        getScaleY(): number;
        translate(arg0: number, arg1: number): void;
        getShearX(): number;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        quadrantRotate(arg0: number, arg1: number, arg2: number): void;
        "transform(float[],int,float[],int,int)"(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        toString(): string;
        createInverse(): this;
        notifyAll(): void;
        shear(arg0: number, arg1: number): void;
        static getRotateInstance(arg0: number, arg1: number, arg2: number, arg3: number): Internal.AffineTransform;
        setToRotation(arg0: number, arg1: number): void;
        setToQuadrantRotation(arg0: number, arg1: number, arg2: number): void;
        quadrantRotate(arg0: number): void;
        transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        static getRotateInstance(arg0: number, arg1: number, arg2: number): Internal.AffineTransform;
        hashCode(): number;
        getTranslateX(): number;
        "transform(double[],int,float[],int,int)"(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
        getDeterminant(): number;
        rotate(arg0: number): void;
        wait(arg0: number): void;
        setToQuadrantRotation(arg0: number): void;
        equals(arg0: any): boolean;
        rotate(arg0: number, arg1: number): void;
        set toRotation(arg0: number)
        get shearY(): number
        get identity(): boolean
        get scaleX(): number
        set transform(arg0: Internal.AffineTransform_)
        get translateY(): number
        get class(): typeof any
        get type(): number
        get scaleY(): number
        get shearX(): number
        get translateX(): number
        get determinant(): number
        set toQuadrantRotation(arg0: number)
        static readonly TYPE_UNIFORM_SCALE: (2) & (number);
        static readonly TYPE_FLIP: (64) & (number);
        static readonly TYPE_IDENTITY: (0) & (number);
        static readonly TYPE_MASK_SCALE: (6) & (number);
        static readonly TYPE_MASK_ROTATION: (24) & (number);
        static readonly TYPE_QUADRANT_ROTATION: (8) & (number);
        static readonly TYPE_TRANSLATION: (1) & (number);
        static readonly TYPE_GENERAL_SCALE: (4) & (number);
        static readonly TYPE_GENERAL_TRANSFORM: (32) & (number);
        static readonly TYPE_GENERAL_ROTATION: (16) & (number);
    }
    type AffineTransform_ = AffineTransform;
    class ServerboundSeenAdvancementsPacket$Action extends Internal.Enum<Internal.ServerboundSeenAdvancementsPacket$Action> {
        static values(): Internal.ServerboundSeenAdvancementsPacket$Action[];
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        getDeclaringClass(): typeof Internal.ServerboundSeenAdvancementsPacket$Action;
        toString(): string;
        notifyAll(): void;
        "compareTo(net.minecraft.network.protocol.game.ServerboundSeenAdvancementsPacket$Action)"(arg0: Internal.ServerboundSeenAdvancementsPacket$Action_): number;
        compareTo(arg0: Internal.ServerboundSeenAdvancementsPacket$Action_): number;
        static valueOf(arg0: string): Internal.ServerboundSeenAdvancementsPacket$Action;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.ServerboundSeenAdvancementsPacket$Action>>;
        name(): string;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        get declaringClass(): typeof Internal.ServerboundSeenAdvancementsPacket$Action
        static readonly OPENED_TAB: (Internal.ServerboundSeenAdvancementsPacket$Action) & (Internal.ServerboundSeenAdvancementsPacket$Action);
        static readonly CLOSED_SCREEN: (Internal.ServerboundSeenAdvancementsPacket$Action) & (Internal.ServerboundSeenAdvancementsPacket$Action);
    }
    type ServerboundSeenAdvancementsPacket$Action_ = "closed_screen" | ServerboundSeenAdvancementsPacket$Action | "opened_tab";
    class RecipeBook {
        constructor()
        getClass(): typeof any;
        contains(arg0: ResourceLocation_): boolean;
        copyOverData(arg0: Internal.RecipeBook_): void;
        removeHighlight(arg0: Internal.Recipe_<any>): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        willHighlight(arg0: Internal.Recipe_<any>): boolean;
        "isFiltering(net.minecraft.world.inventory.RecipeBookType)"(arg0: Internal.RecipeBookType_): boolean;
        contains(arg0: Internal.Recipe_<any>): boolean;
        toString(): string;
        "contains(net.minecraft.resources.ResourceLocation)"(arg0: ResourceLocation_): boolean;
        remove(arg0: Internal.Recipe_<any>): void;
        isOpen(arg0: Internal.RecipeBookType_): boolean;
        notifyAll(): void;
        add(arg0: Internal.Recipe_<any>): void;
        "contains(net.minecraft.world.item.crafting.Recipe)"(arg0: Internal.Recipe_<any>): boolean;
        addHighlight(arg0: Internal.Recipe_<any>): void;
        setOpen(arg0: Internal.RecipeBookType_, arg1: boolean): void;
        hashCode(): number;
        "isFiltering(net.minecraft.world.inventory.RecipeBookMenu)"(arg0: Internal.RecipeBookMenu_<any>): boolean;
        isFiltering(arg0: Internal.RecipeBookType_): boolean;
        wait(): void;
        isFiltering(arg0: Internal.RecipeBookMenu_<any>): boolean;
        setFiltering(arg0: Internal.RecipeBookType_, arg1: boolean): void;
        wait(arg0: number): void;
        setBookSettings(arg0: Internal.RecipeBookSettings_): void;
        getBookSettings(): Internal.RecipeBookSettings;
        setBookSetting(arg0: Internal.RecipeBookType_, arg1: boolean, arg2: boolean): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        set bookSettings(arg0: Internal.RecipeBookSettings_)
        get bookSettings(): Internal.RecipeBookSettings
    }
    type RecipeBook_ = RecipeBook;
    class ChatTypeDecoration extends Internal.Record {
        constructor(arg0: string, arg1: Internal.List_<Internal.ChatTypeDecoration$Parameter>, arg2: Internal.Style_)
        getClass(): typeof any;
        toString(): string;
        style(): Internal.Style;
        translationKey(): string;
        parameters(): Internal.List<Internal.ChatTypeDecoration$Parameter>;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        static outgoingDirectMessage(arg0: string): Internal.ChatTypeDecoration;
        wait(): void;
        wait(arg0: number): void;
        static withSender(arg0: string): Internal.ChatTypeDecoration;
        equals(arg0: any): boolean;
        decorate(arg0: Internal.Component_, arg1: Internal.ChatType$Bound_): Internal.Component;
        static incomingDirectMessage(arg0: string): Internal.ChatTypeDecoration;
        static teamMessage(arg0: string): Internal.ChatTypeDecoration;
        get class(): typeof any
        static readonly CODEC: Internal.Codec<Internal.ChatTypeDecoration>;
    }
    type ChatTypeDecoration_ = ChatTypeDecoration;
    class WallSide extends Internal.Enum<Internal.WallSide> implements Internal.StringRepresentable {
        static values(): Internal.WallSide[];
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        static fromEnumWithMapping<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>, arg1: Internal.Function_<string, string>): Internal.StringRepresentable$EnumCodec<E>;
        toString(): string;
        "compareTo(net.minecraft.world.level.block.state.properties.WallSide)"(arg0: Internal.WallSide_): number;
        getSerializedName(): string;
        notifyAll(): void;
        notify(): void;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.WallSide>>;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        static fromEnum<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>): Internal.StringRepresentable$EnumCodec<E>;
        static keys(arg0: Internal.StringRepresentable_[]): Internal.Keyable;
        compareTo(arg0: Internal.WallSide_): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        static valueOf(arg0: string): Internal.WallSide;
        getDeclaringClass(): typeof Internal.WallSide;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        get serializedName(): string
        get declaringClass(): typeof Internal.WallSide
        static readonly LOW: (Internal.WallSide) & (Internal.WallSide);
        static readonly TALL: (Internal.WallSide) & (Internal.WallSide);
        static readonly NONE: (Internal.WallSide) & (Internal.WallSide);
    }
    type WallSide_ = "low" | WallSide | "tall" | "none";
    interface MessageSenderKJS {
        getDisplayName(): Internal.Component;
        setStatusMessage(message: Internal.Component_): void;
        getName(): Internal.Component;
        runCommandSilent(command: string): number;
        tell(message: Internal.Component_): void;
        runCommand(command: string): number;
        get displayName(): Internal.Component
        set statusMessage(message: Internal.Component_)
        get name(): Internal.Component
    }
    type MessageSenderKJS_ = MessageSenderKJS;
    class ChatVisiblity extends Internal.Enum<Internal.ChatVisiblity> implements Internal.OptionEnum {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        getKey(): string;
        toString(): string;
        notifyAll(): void;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.ChatVisiblity>>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        "compareTo(net.minecraft.world.entity.player.ChatVisiblity)"(arg0: Internal.ChatVisiblity_): number;
        static values(): Internal.ChatVisiblity[];
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        getDeclaringClass(): typeof Internal.ChatVisiblity;
        static byId(arg0: number): Internal.ChatVisiblity;
        compareTo(arg0: Internal.ChatVisiblity_): number;
        ordinal(): number;
        wait(): void;
        static valueOf(arg0: string): Internal.ChatVisiblity;
        wait(arg0: number): void;
        getCaption(): Internal.Component;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        getId(): number;
        get class(): typeof any
        get key(): string
        get declaringClass(): typeof Internal.ChatVisiblity
        get caption(): Internal.Component
        get id(): number
        static readonly HIDDEN: (Internal.ChatVisiblity) & (Internal.ChatVisiblity);
        static readonly FULL: (Internal.ChatVisiblity) & (Internal.ChatVisiblity);
        static readonly SYSTEM: (Internal.ChatVisiblity) & (Internal.ChatVisiblity);
    }
    type ChatVisiblity_ = "system" | "full" | "hidden" | ChatVisiblity;
    abstract class BiomeSource implements Internal.BiomeResolver {
        getClass(): typeof any;
        findClosestBiome3d(arg0: BlockPos_, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Holder<Internal.Biome>>, arg5: Internal.Climate$Sampler_, arg6: Internal.LevelReader_): com.mojang.datafixers.util.Pair<BlockPos, Internal.Holder<Internal.Biome>>;
        getBiomesWithin(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Climate$Sampler_): Internal.Set<Internal.Holder<Internal.Biome>>;
        possibleBiomes(): Internal.Set<Internal.Holder<Internal.Biome>>;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        findBiomeHorizontal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Predicate_<Internal.Holder<Internal.Biome>>, arg5: Internal.RandomSource_, arg6: Internal.Climate$Sampler_): com.mojang.datafixers.util.Pair<BlockPos, Internal.Holder<Internal.Biome>>;
        wait(): void;
        wait(arg0: number): void;
        addDebugInfo(arg0: Internal.List_<string>, arg1: BlockPos_, arg2: Internal.Climate$Sampler_): void;
        equals(arg0: any): boolean;
        abstract getNoiseBiome(arg0: number, arg1: number, arg2: number, arg3: Internal.Climate$Sampler_): Internal.Holder<Internal.Biome>;
        findBiomeHorizontal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.Predicate_<Internal.Holder<Internal.Biome>>, arg6: Internal.RandomSource_, arg7: boolean, arg8: Internal.Climate$Sampler_): com.mojang.datafixers.util.Pair<BlockPos, Internal.Holder<Internal.Biome>>;
        get class(): typeof any
        static readonly CODEC: Internal.Codec<Internal.BiomeSource>;
    }
    type BiomeSource_ = BiomeSource;
    interface ISerializable {
        abstract writeToBuffer(arg0: Internal.FriendlyByteBuf_): void;
        abstract readFromBuffer(arg0: Internal.FriendlyByteBuf_): void;
    }
    type ISerializable_ = ISerializable;
    class RenderStateShard$CullStateShard extends Internal.RenderStateShard$BooleanStateShard {
        constructor(arg0: boolean)
        getClass(): typeof any;
        clearRenderState(): void;
        hashCode(): number;
        toString(): string;
        setupRenderState(): void;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type RenderStateShard$CullStateShard_ = RenderStateShard$CullStateShard;
    class BlockPileFeature extends Internal.Feature<Internal.BlockPileConfiguration> {
        constructor(arg0: Internal.Codec_<Internal.BlockPileConfiguration>)
        getClass(): typeof any;
        toString(): string;
        place(arg0: Internal.BlockPileConfiguration_, arg1: Internal.WorldGenLevel_, arg2: Internal.ChunkGenerator_, arg3: Internal.RandomSource_, arg4: BlockPos_): boolean;
        static checkNeighbors(arg0: Internal.Function_<BlockPos, Internal.BlockState>, arg1: BlockPos_, arg2: Internal.Predicate_<Internal.BlockState>): boolean;
        notifyAll(): void;
        place(arg0: Internal.FeaturePlaceContext_<Internal.BlockPileConfiguration>): boolean;
        configuredCodec(): Internal.Codec<Internal.ConfiguredFeature<Internal.BlockPileConfiguration, Internal.Feature<Internal.BlockPileConfiguration>>>;
        notify(): void;
        static isAdjacentToAir(arg0: Internal.Function_<BlockPos, Internal.BlockState>, arg1: BlockPos_): boolean;
        wait(arg0: number, arg1: number): void;
        static isGrassOrDirt(arg0: Internal.LevelSimulatedReader_, arg1: BlockPos_): boolean;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        static isDirt(arg0: Internal.BlockState_): boolean;
        equals(arg0: any): boolean;
        static isReplaceable(arg0: Internal.TagKey_<Internal.Block>): Internal.Predicate<Internal.BlockState>;
        get class(): typeof any
    }
    type BlockPileFeature_ = BlockPileFeature;
    class ClassInfo {
        getFieldInfo(): Internal.List<Internal.FieldInfo>;
        getClass(): typeof any;
        getClazzRaw(): typeof any;
        getAnnotations(): Internal.List<Internal.Annotation>;
        isAbstract(): boolean;
        toString(): string;
        static getOrCache(clazz: typeof any): Internal.ClassInfo;
        notifyAll(): void;
        isInterface(): boolean;
        getInterfaceTypes(): Internal.List<Internal.ITypeInfo>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getSuperClassType(): Internal.ITypeInfo;
        getInterfaces(): Internal.List<Internal.ClassInfo>;
        getSuperClass(): this;
        getParameters(): Internal.List<Internal.ITypeInfo>;
        hashCode(): number;
        wait(): void;
        getName(): string;
        isEnum(): boolean;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        getConstructorInfo(): Internal.List<Internal.ConstructorInfo>;
        getMethodInfo(): Internal.List<Internal.MethodInfo>;
        get fieldInfo(): Internal.List<Internal.FieldInfo>
        get class(): typeof any
        get clazzRaw(): typeof any
        get annotations(): Internal.List<Internal.Annotation>
        get "abstract"(): boolean
        get "interface"(): boolean
        get interfaceTypes(): Internal.List<Internal.ITypeInfo>
        get superClassType(): Internal.ITypeInfo
        get interfaces(): Internal.List<Internal.ClassInfo>
        get superClass(): Internal.ClassInfo
        get parameters(): Internal.List<Internal.ITypeInfo>
        get name(): string
        get enum(): boolean
        get constructorInfo(): Internal.List<Internal.ConstructorInfo>
        get methodInfo(): Internal.List<Internal.MethodInfo>
        static readonly CLASS_CACHE: ({[key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo, [key: typeof any]: Internal.ClassInfo}) & (Internal.Map<typeof any, Internal.ClassInfo>);
        static readonly CLASS_NAME_CACHE: ({"net.minecraft.world.level.Level$ExplosionInteraction": Internal.ClassInfo, "com.mojang.serialization.codecs.BaseMapCodec": Internal.ClassInfo, "net.minecraft.network.protocol.status.ServerStatus$Players": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceOrTagArgument$Info": Internal.ClassInfo, "net.minecraft.world.level.levelgen.SurfaceRules$Context": Internal.ClassInfo, "java.util.ImmutableCollections$AbstractImmutableMap": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainerRO$PackedData": Internal.ClassInfo, "net.minecraft.network.FriendlyByteBuf$Reader": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SculkPatchFeature": Internal.ClassInfo, "net.minecraft.world.entity.monster.Zombie": Internal.ClassInfo, "top.theillusivec4.curios.api.event.CurioAttributeModifierEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.properties.RemoveOresProperties": Internal.ClassInfo, "net.minecraft.world.level.block.LadderBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2BooleanFunction": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootContext$VisitedEntry": Internal.ClassInfo, "net.minecraft.world.level.block.CrossCollisionBlock": Internal.ClassInfo, "dev.latvian.mods.rhino.ConstProperties": Internal.ClassInfo, "java.lang.CharSequence": Internal.ClassInfo, "net.minecraft.world.level.block.ChainBlock": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgePoseStack": Internal.ClassInfo, "net.minecraft.world.item.enchantment.Enchantment$Rarity": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.FileConfigBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.ShipwreckStructure": Internal.ClassInfo, "net.minecraft.world.level.levelgen.VerticalAnchor$BelowTop": Internal.ClassInfo, "net.minecraft.world.level.BaseSpawner": Internal.ClassInfo, "com.google.gson.internal.Excluder": Internal.ClassInfo, "io.redspace.ironsspellbooks.player.SpinAttackType": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedEntityTypeExtension": Internal.ClassInfo, "net.minecraft.world.level.block.FrostedIceBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Markings": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortListIterator": Internal.ClassInfo, "io.redspace.ironsspellbooks.capabilities.magic.RecastResult": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerLookAtPacket": Internal.ClassInfo, "com.mojang.blaze3d.shaders.Shader": Internal.ClassInfo, "net.minecraftforge.fml.event.config.ModConfigEvent$Loading": Internal.ClassInfo, "net.minecraft.world.level.levelgen.synth.NormalNoise$NoiseParameters": Internal.ClassInfo, "net.minecraftforge.client.gui.overlay.IGuiOverlay": Internal.ClassInfo, "java.util.Currency": Internal.ClassInfo, "net.minecraft.core.HolderGetter": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoublePredicate": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetActionBarTextPacket": Internal.ClassInfo, "java.util.LinkedHashMap": Internal.ClassInfo, "java.nio.channels.InterruptibleChannel": Internal.ClassInfo, "net.minecraftforge.common.crafting.ConditionalRecipe$Serializer": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.DummySensor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoRemovePacket": Internal.ClassInfo, "net.minecraft.client.multiplayer.ServerData": Internal.ClassInfo, "net.minecraft.world.food.FoodProperties": Internal.ClassInfo, "net.minecraft.world.level.block.CauldronBlock": Internal.ClassInfo, "net.minecraft.network.chat.ChatType$Bound": Internal.ClassInfo, "java.util.function.ToIntFunction": Internal.ClassInfo, "net.minecraft.core.Holder$Kind": Internal.ClassInfo, "com.mojang.blaze3d.shaders.BlendMode": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.AmethystRapierItem": Internal.ClassInfo, "net.minecraft.world.level.block.piston.MovingPistonBlock": Internal.ClassInfo, "java.lang.Module": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.LakeFeature$Configuration": Internal.ClassInfo, "net.minecraft.world.level.block.WallSkullBlock": Internal.ClassInfo, "net.minecraft.world.level.block.ConduitBlock": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.ModelCuboidAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.minecraft.ShapedRecipeSchema$ShapedRecipeJS": Internal.ClassInfo, "net.minecraft.world.level.block.entity.RandomizableContainerBlockEntity": Internal.ClassInfo, "net.minecraft.world.damagesource.DamageSources": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BellBlockEntity": Internal.ClassInfo, "io.netty.buffer.ByteBufAllocator": Internal.ClassInfo, "net.minecraft.world.item.Item$Properties": Internal.ClassInfo, "net.minecraft.client.InputType": Internal.ClassInfo, "mezz.jei.api.recipe.IFocusGroup": Internal.ClassInfo, "java.nio.channels.AsynchronousChannel": Internal.ClassInfo, "mezz.jei.api.gui.widgets.ISlottedWidgetFactory": Internal.ClassInfo, "net.minecraft.world.entity.npc.Villager": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2IntFunction": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.TemptingSensor": Internal.ClassInfo, "top.theillusivec4.curios.api.type.capability.ICurio$DropRule": Internal.ClassInfo, "mezz.jei.api.gui.inputs.IJeiGuiEventListener": Internal.ClassInfo, "net.minecraft.world.level.block.CandleCakeBlock": Internal.ClassInfo, "com.mojang.datafixers.DSL$TypeReference": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.DescriptionContext": Internal.ClassInfo, "net.minecraft.client.gui.screens.social.PlayerSocialManager": Internal.ClassInfo, "dev.latvian.mods.kubejs.net.NetworkEventJS": Internal.ClassInfo, "net.minecraft.commands.CommandBuildContext$MissingTagAccessPolicy": Internal.ClassInfo, "com.mojang.serialization.MapCodec$MapCodecCodec": Internal.ClassInfo, "net.minecraft.world.item.SnowballItem": Internal.ClassInfo, "net.minecraft.server.ServerScoreboard$Method": Internal.ClassInfo, "net.minecraft.advancements.CriterionTriggerInstance": Internal.ClassInfo, "net.minecraft.world.entity.animal.Fox$Type": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatPredicate": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.CompostableRecipesEventJS": Internal.ClassInfo, "net.minecraft.client.resources.DownloadedPackSource": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeManager$CachedCheck": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Exports": Internal.ClassInfo, "net.minecraft.world.level.material.WaterFluid$Source": Internal.ClassInfo, "net.minecraft.world.item.BowItem": Internal.ClassInfo, "dev.latvian.mods.unit.UnitContext": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.StringComponent": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Llama": Internal.ClassInfo, "net.minecraft.world.level.block.JigsawBlock": Internal.ClassInfo, "net.minecraft.client.gui.navigation.ScreenRectangle": Internal.ClassInfo, "net.minecraftforge.client.event.RenderTooltipEvent": Internal.ClassInfo, "net.minecraft.world.level.block.entity.TickingBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.validation.DirectoryValidator": Internal.ClassInfo, "net.minecraft.advancements.DisplayInfo": Internal.ClassInfo, "org.lwjgl.system.Pointer": Internal.ClassInfo, "com.mojang.math.OctahedralGroup": Internal.ClassInfo, "net.minecraft.nbt.FloatTag": Internal.ClassInfo, "com.mojang.blaze3d.shaders.Program": Internal.ClassInfo, "java.lang.AbstractStringBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.stages.StageChangeEvent": Internal.ClassInfo, "java.lang.ref.WeakReference": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$ItemSmeltedEvent": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.BloodStaffItem": Internal.ClassInfo, "net.minecraft.commands.synchronization.ArgumentTypeInfo$Template": Internal.ClassInfo, "net.minecraft.world.item.SwordItem": Internal.ClassInfo, "net.minecraft.world.level.chunk.UpgradeData": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityLeaveLevelEvent": Internal.ClassInfo, "java.nio.file.attribute.BasicFileAttributes": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.StructureMode": Internal.ClassInfo, "io.netty.channel.Channel$Unsafe": Internal.ClassInfo, "net.minecraftforge.common.IPlantable": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.RemoveWorldgenEventJS": Internal.ClassInfo, "com.google.common.collect.HashBiMap": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.functions.LootItemFunction": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageValidator": Internal.ClassInfo, "net.minecraft.world.level.block.CommandBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundContainerSetDataPacket": Internal.ClassInfo, "net.minecraft.world.level.block.Block": Internal.ClassInfo, "java.util.BitSet": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.RuleTestType": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrowableItemProjectile": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.Path": Internal.ClassInfo, "net.minecraft.world.level.block.SeagrassBlock": Internal.ClassInfo, "java.nio.file.attribute.FileTime": Internal.ClassInfo, "journeymap.client.api.display.Context$MapType": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetChunkCacheRadiusPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.ClientInitEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.PacketFlow": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.entity.BlockEntityCallback": Internal.ClassInfo, "net.minecraft.world.entity.RelativeMovement": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundResourcePackPacket$Action": Internal.ClassInfo, "mezz.jei.api.runtime.IJeiKeyMapping": Internal.ClassInfo, "net.minecraft.client.searchtree.SearchRegistry$Key": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeMinecraft": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.immediate.model.ModelCuboid": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRecipePacket": Internal.ClassInfo, "net.minecraft.world.entity.ai.navigation.PathNavigation": Internal.ClassInfo, "net.minecraftforge.eventbus.api.EventPriority": Internal.ClassInfo, "com.mojang.authlib.Agent": Internal.ClassInfo, "net.minecraft.world.level.LightLayer": Internal.ClassInfo, "net.minecraft.world.item.SpectralArrowItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerGamePacketListener": Internal.ClassInfo, "net.minecraft.world.item.crafting.FireworkRocketRecipe": Internal.ClassInfo, "net.minecraft.server.TickTask": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.RandomSpreadStructurePlacement": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.FeaturePlaceContext": Internal.ClassInfo, "net.minecraft.client.renderer.texture.Stitcher$Entry": Internal.ClassInfo, "net.minecraft.server.players.IpBanList": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Horse": Internal.ClassInfo, "net.minecraft.client.renderer.texture.SpriteContents": Internal.ClassInfo, "net.minecraft.world.level.block.SimpleWaterloggedBlock": Internal.ClassInfo, "dev.latvian.mods.rhino.util.CustomJavaToJsWrapper": Internal.ClassInfo, "net.minecraft.world.item.enchantment.SwiftSneakEnchantment": Internal.ClassInfo, "io.netty.channel.ChannelPipeline": Internal.ClassInfo, "net.minecraft.world.level.levelgen.LegacyRandomSource": Internal.ClassInfo, "net.minecraftforge.event.server.ServerStartedEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectCollection": Internal.ClassInfo, "net.minecraft.nbt.NbtAccounter": Internal.ClassInfo, "net.minecraft.world.level.block.KelpPlantBlock": Internal.ClassInfo, "net.minecraft.world.entity.Display": Internal.ClassInfo, "software.bernie.geckolib.core.state.BoneSnapshot": Internal.ClassInfo, "net.minecraft.world.level.SignalGetter": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.FoodBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.VariantBlockStateGenerator$Model": Internal.ClassInfo, "net.minecraft.world.item.context.BlockPlaceContext": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ShortFunction": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseDragged$Pre": Internal.ClassInfo, "com.mojang.brigadier.arguments.IntegerArgumentType": Internal.ClassInfo, "net.minecraftforge.registries.RegistryManager": Internal.ClassInfo, "net.minecraft.world.item.Rarity": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$ParameterList": Internal.ClassInfo, "net.minecraft.world.level.levelgen.ThreadSafeLegacyRandomSource": Internal.ClassInfo, "dev.architectury.event.events.common.ChatEvent$ChatComponent": Internal.ClassInfo, "net.minecraft.util.profiling.ProfileResults": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlaceRecipePacket": Internal.ClassInfo, "java.security.SignatureSpi": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CarvingContext": Internal.ClassInfo, "net.minecraft.world.level.block.CandleBlock": Internal.ClassInfo, "net.minecraft.world.level.block.PiglinWallSkullBlock": Internal.ClassInfo, "com.mojang.serialization.ListBuilder": Internal.ClassInfo, "java.time.format.FormatStyle": Internal.ClassInfo, "com.google.gson.ReflectionAccessFilter$FilterResult": Internal.ClassInfo, "net.minecraft.world.level.block.LightBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2ByteFunction": Internal.ClassInfo, "net.minecraft.world.level.block.SupportType": Internal.ClassInfo, "net.minecraft.client.GameNarrator": Internal.ClassInfo, "com.mojang.brigadier.tree.ArgumentCommandNode": Internal.ClassInfo, "com.google.common.collect.ImmutableSetMultimap$Builder": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2LongFunction": Internal.ClassInfo, "java.util.stream.DoubleStream$Builder": Internal.ClassInfo, "net.minecraft.world.entity.monster.Stray": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.FossilFeatureConfiguration": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.AtlasSpriteRegistryEventJS": Internal.ClassInfo, "net.minecraft.world.entity.ambient.AmbientCreature": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ingredientaction.IngredientActionFilter": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.EndIslandFeature": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.ServicesKeyType": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectList": Internal.ClassInfo, "org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout": Internal.ClassInfo, "java.util.stream.LongStream": Internal.ClassInfo, "java.util.Properties": Internal.ClassInfo, "java.util.concurrent.Executor": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.AbstractDragonSittingPhase": Internal.ClassInfo, "io.netty.util.ByteProcessor": Internal.ClassInfo, "net.minecraft.world.level.block.SculkCatalystBlock": Internal.ClassInfo, "net.minecraft.network.syncher.SynchedEntityData": Internal.ClassInfo, "net.minecraft.world.level.block.MultifaceSpreader": Internal.ClassInfo, "java.time.temporal.ChronoUnit": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventJS": Internal.ClassInfo, "java.nio.LongBuffer": Internal.ClassInfo, "net.minecraftforge.forgespi.language.ModFileScanData": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkEvent$Unload": Internal.ClassInfo, "net.minecraft.world.entity.monster.ElderGuardian": Internal.ClassInfo, "dev.latvian.mods.rhino.util.SpecialEquality": Internal.ClassInfo, "net.minecraft.core.Direction": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder$ReleaseUsingCallback": Internal.ClassInfo, "java.nio.file.WatchKey": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ServerPlayerKJS": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerContainerEvent$Open": Internal.ClassInfo, "net.minecraft.world.level.block.Rotation": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingAttackEvent": Internal.ClassInfo, "net.minecraft.network.protocol.status.ServerStatus": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceArgument": Internal.ClassInfo, "net.minecraftforge.network.PlayMessages$SpawnEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.FeaturePoolElement": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.ChargeEffect": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.color.Color": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeMap": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetHealthPacket": Internal.ClassInfo, "mezz.jei.api.gui.placement.HorizontalAlignment": Internal.ClassInfo, "java.util.function.Predicate": Internal.ClassInfo, "java.nio.file.attribute.FileAttributeView": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction$FunctionContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.NopProcessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.RandomTickCallbackJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemModificationEventJS": Internal.ClassInfo, "java.awt.Dimension": Internal.ClassInfo, "java.security.cert.Certificate": Internal.ClassInfo, "java.util.SortedMap": Internal.ClassInfo, "net.minecraft.world.level.block.StainedGlassPaneBlock": Internal.ClassInfo, "dev.kosmx.playerAnim.api.TransformType": Internal.ClassInfo, "net.minecraft.world.level.block.CocoaBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongList": Internal.ClassInfo, "net.minecraft.world.level.block.PitcherCropBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2ObjectFunction": Internal.ClassInfo, "java.util.concurrent.atomic.AtomicReference": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.SerializerType": Internal.ClassInfo, "net.minecraft.client.renderer.block.BlockRenderDispatcher": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BlueIceFeature": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.PickaxeItemBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.JEISubtypesEventJS": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$Type": Internal.ClassInfo, "net.minecraft.world.level.WorldGenLevel": Internal.ClassInfo, "io.netty.buffer.ByteBuf": Internal.ClassInfo, "net.minecraft.world.level.ClipContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CarverDebugSettings": Internal.ClassInfo, "net.minecraft.world.entity.decoration.PaintingVariant": Internal.ClassInfo, "net.minecraft.world.level.border.WorldBorder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.TrapezoidHeight": Internal.ClassInfo, "org.apache.maven.artifact.repository.ArtifactRepository": Internal.ClassInfo, "net.minecraft.world.entity.monster.PatrollingMonster": Internal.ClassInfo, "net.minecraftforge.client.event.CustomizeGuiOverlayEvent": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.ChestType": Internal.ClassInfo, "net.minecraft.client.gui.screens.recipebook.RecipeCollection": Internal.ClassInfo, "java.io.OutputStream": Internal.ClassInfo, "net.minecraft.world.entity.animal.Wolf": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.AttachedData": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.EndCrystal": Internal.ClassInfo, "dev.latvian.mods.rhino.ExternalArrayData": Internal.ClassInfo, "net.minecraft.client.ParticleStatus": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetBorderWarningDistancePacket": Internal.ClassInfo, "net.minecraftforge.client.model.geometry.IGeometryLoader": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.RailShape": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.Passthrough": Internal.ClassInfo, "net.minecraft.world.entity.Display$ItemDisplay": Internal.ClassInfo, "io.redspace.ironsspellbooks.block.ArmorPileBlock": Internal.ClassInfo, "net.minecraft.server.packs.repository.PackSource": Internal.ClassInfo, "software.bernie.geckolib.core.animation.Animation$LoopType": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay$Align": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.FireworkRocketEntityKJS": Internal.ClassInfo, "com.mojang.blaze3d.platform.Monitor": Internal.ClassInfo, "net.minecraft.world.inventory.StackedContentsCompatible": Internal.ClassInfo, "net.minecraft.stats.ServerStatsCounter": Internal.ClassInfo, "net.minecraft.world.level.block.NetherPortalBlock": Internal.ClassInfo, "net.minecraft.server.players.GameProfileCache$GameProfileInfo": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.AcaciaFoliagePlacer": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.PresetEditor": Internal.ClassInfo, "net.minecraft.world.item.PlaceOnWaterBlockItem": Internal.ClassInfo, "com.mojang.blaze3d.preprocessor.GlslPreprocessor": Internal.ClassInfo, "io.redspace.ironsspellbooks.block.BloodCauldronBlock": Internal.ClassInfo, "net.minecraft.network.chat.HoverEvent$ItemStackInfo": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2IntFunction": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetCameraPacket": Internal.ClassInfo, "com.electronwill.nightconfig.core.UnmodifiableConfig$Entry": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.PlayerChatDecorateEventJS": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BeehiveBlockEntity": Internal.ClassInfo, "java.util.EnumSet": Internal.ClassInfo, "mezz.jei.api.gui.inputs.RecipeSlotUnderMouse": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Boots": Internal.ClassInfo, "com.mojang.datafixers.types.Type$FieldNotFoundException": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingHealEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.RuleBlockEntityModifierType": Internal.ClassInfo, "net.minecraft.util.profiling.ProfilerFiller": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleList": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootTable$Builder": Internal.ClassInfo, "net.minecraft.client.renderer.GpuWarnlistManager": Internal.ClassInfo, "it.unimi.dsi.fastutil.Stack": Internal.ClassInfo, "net.minecraft.network.chat.Style": Internal.ClassInfo, "net.minecraft.world.item.crafting.BlastingRecipe": Internal.ClassInfo, "com.mojang.datafixers.types.templates.TypeTemplate": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmithingTrimRecipe$Serializer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlockStateMatchTest": Internal.ClassInfo, "java.util.EventListener": Internal.ClassInfo, "net.minecraftforge.event.TagsUpdatedEvent": Internal.ClassInfo, "net.minecraft.world.level.block.TargetBlock": Internal.ClassInfo, "com.mojang.brigadier.builder.ArgumentBuilder": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundHorseScreenOpenPacket": Internal.ClassInfo, "net.minecraftforge.network.PacketDistributor$PacketTarget": Internal.ClassInfo, "java.io.FilenameFilter": Internal.ClassInfo, "net.minecraft.commands.arguments.TimeArgument$Info$Template": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetExperiencePacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.NumberComponent": Internal.ClassInfo, "net.minecraft.world.level.block.LeverBlock": Internal.ClassInfo, "net.minecraftforge.client.event.ModelEvent$ModifyBakingResult": Internal.ClassInfo, "net.minecraft.world.level.block.entity.LecternBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.block.NetherSproutsBlock": Internal.ClassInfo, "net.minecraft.server.players.UserBanList": Internal.ClassInfo, "net.minecraft.world.level.dimension.end.EndDragonFight": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeBlockAndTintGetter": Internal.ClassInfo, "net.minecraft.world.entity.animal.Dolphin": Internal.ClassInfo, "net.minecraft.client.MouseHandler": Internal.ClassInfo, "net.minecraft.world.entity.npc.VillagerProfession": Internal.ClassInfo, "java.lang.StackTraceElement": Internal.ClassInfo, "net.minecraft.world.level.block.RedstoneLampBlock": Internal.ClassInfo, "journeymap.client.api.model.WrappedEntity": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2DoubleFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.LakeFeature": Internal.ClassInfo, "net.minecraft.world.effect.MobEffectInstance": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBlockEventPacket": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableStructureInfo": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.SpringConfiguration": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.predicate.BlockPredicate": Internal.ClassInfo, "net.minecraft.world.entity.animal.TropicalFish": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkGenerator": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ClientLevelKJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool$Projection": Internal.ClassInfo, "com.mojang.brigadier.context.ParsedCommandNode": Internal.ClassInfo, "net.minecraft.world.level.block.AmethystClusterBlock": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BaseContainerBlockEntity": Internal.ClassInfo, "net.minecraft.world.entity.animal.Bucketable": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseScrolled": Internal.ClassInfo, "net.minecraft.world.level.gameevent.BlockPositionSource": Internal.ClassInfo, "mezz.jei.api.gui.builder.ITooltipBuilder": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.magic.SpellSelectionManager$SelectionOption": Internal.ClassInfo, "mezz.jei.api.gui.widgets.ITextWidget": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyInput": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.FrogAttackablesSensor": Internal.ClassInfo, "net.minecraft.client.OptionInstance$TooltipSupplier": Internal.ClassInfo, "org.apache.maven.artifact.repository.ArtifactRepositoryPolicy": Internal.ClassInfo, "io.netty.channel.MessageSizeEstimator": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.InstantManaEffect": Internal.ClassInfo, "com.mojang.serialization.DynamicOps": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BlockColumnFeature": Internal.ClassInfo, "org.lwjgl.system.Struct": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.RemoveJEIRecipesEvent": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeManager": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundAddPlayerPacket": Internal.ClassInfo, "net.minecraft.world.inventory.SmithingMenu": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShulkerBoxColoring": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.BasicBlockJS$Builder": Internal.ClassInfo, "net.minecraft.world.level.block.SculkSpreader$ChargeCursor": Internal.ClassInfo, "journeymap.client.api.display.IWaypointDisplay": Internal.ClassInfo, "java.util.UUID": Internal.ClassInfo, "net.minecraft.world.level.block.entity.CommandBlockEntity$Mode": Internal.ClassInfo, "net.minecraftforge.server.command.EnumArgument": Internal.ClassInfo, "java.lang.constant.DynamicConstantDesc": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2LongFunction": Internal.ClassInfo, "net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.HitherThitherWand": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceArgument$Info$Template": Internal.ClassInfo, "net.minecraft.tags.TagEntry": Internal.ClassInfo, "com.google.common.collect.Maps$IteratorBasedAbstractMap": Internal.ClassInfo, "net.minecraftforge.event.level.ExplosionEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.EmptyPoolElement": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeCommandSourceStack": Internal.ClassInfo, "net.minecraft.world.item.crafting.SimpleCraftingRecipeSerializer": Internal.ClassInfo, "net.minecraft.client.sounds.SoundBufferLibrary": Internal.ClassInfo, "net.minecraft.client.gui.components.toasts.ToastComponent$ToastInstance": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyReleased$Pre": Internal.ClassInfo, "net.minecraft.world.inventory.PlayerEnderChestContainer": Internal.ClassInfo, "net.minecraft.world.level.block.WoolCarpetBlock": Internal.ClassInfo, "net.minecraft.core.HolderSet": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.TraderLlama": Internal.ClassInfo, "journeymap.client.api.model.IFullscreen": Internal.ClassInfo, "com.google.common.reflect.TypeToken": Internal.ClassInfo, "net.minecraftforge.network.ICustomPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProviderType": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.vertex.buffer.SodiumBufferBuilder": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartFurnace": Internal.ClassInfo, "com.probejs.jdoc.property.AbstractProperty": Internal.ClassInfo, "com.google.common.collect.ForwardingCollection": Internal.ClassInfo, "net.minecraft.world.level.block.entity.Hopper": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.DeltaFeatureConfiguration": Internal.ClassInfo, "net.minecraft.resources.HolderSetCodec": Internal.ClassInfo, "com.mojang.blaze3d.font.GlyphInfo": Internal.ClassInfo, "net.minecraft.util.TaskChainer$DelayedTask": Internal.ClassInfo, "io.netty.util.concurrent.GenericFutureListener": Internal.ClassInfo, "net.minecraft.world.level.block.SaplingBlock": Internal.ClassInfo, "javax.security.auth.Subject": Internal.ClassInfo, "net.minecraft.client.telemetry.WorldSessionTelemetryManager": Internal.ClassInfo, "net.minecraft.server.network.ServerGamePacketListenerImpl": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntBinaryOperator": Internal.ClassInfo, "net.minecraft.world.level.block.entity.CommandBlockEntity": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.RecordItemJS$Builder": Internal.ClassInfo, "net.minecraft.world.entity.monster.SpellcasterIllager": Internal.ClassInfo, "net.minecraft.stats.StatsCounter": Internal.ClassInfo, "net.minecraft.data.DataProvider": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.NoiseThresholdProvider": Internal.ClassInfo, "net.minecraft.world.entity.monster.Slime": Internal.ClassInfo, "net.minecraft.world.entity.animal.Sheep": Internal.ClassInfo, "net.minecraft.world.item.FishingRodItem": Internal.ClassInfo, "io.netty.util.AttributeKey": Internal.ClassInfo, "net.minecraft.world.item.crafting.TippedArrowRecipe": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.SpellBook": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.OceanRuinStructure": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlockRotProcessor": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.LootItemConditionType": Internal.ClassInfo, "net.minecraft.network.chat.LastSeenMessages$Packed": Internal.ClassInfo, "net.minecraft.client.OptionInstance$CaptionBasedToString": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.ExtendedArmorItem": Internal.ClassInfo, "net.minecraft.util.valueproviders.TrapezoidFloat": Internal.ClassInfo, "com.google.gson.TypeAdapter": Internal.ClassInfo, "dev.kosmx.playerAnim.api.layered.IAnimation": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientGamePacketListener": Internal.ClassInfo, "net.minecraft.world.level.ClipContext$Fluid": Internal.ClassInfo, "net.minecraft.world.item.enchantment.EnchantmentCategory": Internal.ClassInfo, "net.minecraft.world.item.BedItem": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseScrolled$Post": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetBorderWarningDelayPacket": Internal.ClassInfo, "org.joml.Quaternionfc": Internal.ClassInfo, "java.io.PrintWriter": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.CustomDescriptionMobEffect": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectMap$FastEntrySet": Internal.ClassInfo, "io.redspace.ironsspellbooks.entity.mobs.goals.WizardRecoverGoal": Internal.ClassInfo, "net.minecraft.world.entity.ExperienceOrb": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPaddleBoatPacket": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BlockEntity": Internal.ClassInfo, "net.minecraftforge.event.ServerChatEvent": Internal.ClassInfo, "net.minecraft.world.item.enchantment.DiggingEnchantment": Internal.ClassInfo, "java.util.RegularEnumSet": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectBidirectionalIterator": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.FireworksJS$Shape": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.ModLifecycleEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ItemFrameEntityKJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundInteractPacket": Internal.ClassInfo, "net.minecraft.world.level.block.MushroomBlock": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEventListener": Internal.ClassInfo, "java.security.Guard": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.WoodType": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.texture.SpriteContentsExtended": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.HideCustomJEIEventJS": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2ReferenceFunction": Internal.ClassInfo, "net.minecraft.world.entity.Shearable": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.AppendStatic": Internal.ClassInfo, "net.minecraft.world.level.block.InfestedBlock": Internal.ClassInfo, "net.minecraft.client.renderer.item.ItemPropertyFunction": Internal.ClassInfo, "net.minecraft.world.level.block.BedBlock": Internal.ClassInfo, "org.apache.maven.artifact.versioning.Restriction": Internal.ClassInfo, "java.lang.module.ModuleReader": Internal.ClassInfo, "net.minecraft.world.item.GlowInkSacItem": Internal.ClassInfo, "net.minecraft.world.ticks.TickAccess": Internal.ClassInfo, "net.minecraftforge.registries.NewRegistryEvent": Internal.ClassInfo, "net.minecraft.world.level.timers.TimerQueue": Internal.ClassInfo, "dev.architectury.event.Event": Internal.ClassInfo, "org.joml.Quaterniondc": Internal.ClassInfo, "net.minecraft.network.syncher.EntityDataSerializer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.SurfaceRules$SurfaceRule": Internal.ClassInfo, "net.minecraft.core.RegistryAccess$ImmutableRegistryAccess": Internal.ClassInfo, "io.redspace.ironsspellbooks.capabilities.magic.SyncedSpellData": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.MatchingFluidsPredicate": Internal.ClassInfo, "net.minecraft.client.gui.layouts.LayoutElement": Internal.ClassInfo, "net.minecraftforge.common.world.BiomeModifier": Internal.ClassInfo, "net.minecraft.world.level.block.PumpkinBlock": Internal.ClassInfo, "net.minecraft.client.renderer.texture.TextureManager": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectSet": Internal.ClassInfo, "net.minecraft.world.item.FireworkStarItem": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryPropertyMap$Builder": Internal.ClassInfo, "net.minecraft.world.level.block.GrowingPlantBodyBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.DesertPyramidStructure": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$YClampedGradient": Internal.ClassInfo, "java.nio.file.attribute.FileStoreAttributeView": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2IntFunction": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$TransparencyStateShard": Internal.ClassInfo, "net.minecraft.world.level.block.NetherrackBlock": Internal.ClassInfo, "net.minecraft.world.item.trading.MerchantOffers": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartChest": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.RegistryInfo": Internal.ClassInfo, "net.minecraft.world.level.block.MangroveRootsBlock": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.util.AnimationHolder": Internal.ClassInfo, "net.minecraft.network.chat.FormattedText$StyledContentConsumer": Internal.ClassInfo, "java.lang.AutoCloseable": Internal.ClassInfo, "java.nio.ByteBuffer": Internal.ClassInfo, "net.minecraft.core.Registry": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundClientInformationPacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2ByteFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.filter.mob.MobFilter": Internal.ClassInfo, "java.util.stream.IntStream$Builder": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SpawnerBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.block.DaylightDetectorBlock": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServerPlayerList": Internal.ClassInfo, "net.minecraft.world.level.portal.PortalForcer": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2ObjectFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemTooltipEventJS": Internal.ClassInfo, "net.minecraft.client.KeyboardHandler": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.RandomFeatureConfiguration": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.ISpellContainer": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2ShortFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.BlockStateMirrorCallbackJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateMobEffectPacket": Internal.ClassInfo, "net.minecraft.world.phys.shapes.CubeVoxelShape": Internal.ClassInfo, "net.minecraft.world.entity.animal.axolotl.Axolotl$Variant": Internal.ClassInfo, "com.google.common.reflect.TypeCapture": Internal.ClassInfo, "net.minecraft.world.level.block.entity.DecoratedPotBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.lighting.LevelLightEngine": Internal.ClassInfo, "net.minecraft.core.BlockPos": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ItemToolTierRegistryEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundOpenSignEditorPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.state.BlockStatePredicate": Internal.ClassInfo, "io.netty.channel.WriteBufferWaterMark": Internal.ClassInfo, "net.minecraft.world.level.block.HugeMushroomBlock": Internal.ClassInfo, "net.minecraftforge.event.server.ServerLifecycleEvent": Internal.ClassInfo, "net.minecraft.world.level.storage.ServerLevelData": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.TypeDescJS": Internal.ClassInfo, "com.squoshi.irons_spells_js.util.ISSKJSUtils$AttributeHolder": Internal.ClassInfo, "net.minecraftforge.network.NetworkDirection": Internal.ClassInfo, "net.minecraft.world.item.HoeItem": Internal.ClassInfo, "net.minecraft.world.level.ServerLevelAccessor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetCommandMinecartPacket": Internal.ClassInfo, "java.util.function.DoubleBinaryOperator": Internal.ClassInfo, "net.minecraft.tags.TagManager": Internal.ClassInfo, "net.minecraft.world.level.block.CaveVines": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.data.SoundKeyframeData": Internal.ClassInfo, "net.minecraft.client.renderer.PostChain": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonHoverPhase": Internal.ClassInfo, "net.minecraftforge.client.event.ClientPlayerNetworkEvent$LoggingOut": Internal.ClassInfo, "net.minecraft.world.level.block.StemBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2DoubleFunction": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.AnyOfCondition$Builder": Internal.ClassInfo, "com.mojang.blaze3d.font.GlyphProvider": Internal.ClassInfo, "me.flashyreese.mods.sodiumextra.mixin.optimizations.beacon_beam_rendering.WorldRendererAccessor": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Modifier": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.minecraft.ShapelessRecipeSchema$ShapelessRecipeJS": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonPressed$Pre": Internal.ClassInfo, "net.minecraft.BlockUtil$FoundRectangle": Internal.ClassInfo, "io.netty.util.concurrent.EventExecutorGroup": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.consumables.SimpleElixir": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceOrTagArgument$Result": Internal.ClassInfo, "com.mojang.blaze3d.shaders.Program$Type": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.ImbuableChestplateArmorItem": Internal.ClassInfo, "com.google.gson.JsonDeserializer": Internal.ClassInfo, "net.minecraft.world.entity.EntitySelector": Internal.ClassInfo, "net.minecraft.core.AxisCycle": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractChestBlock": Internal.ClassInfo, "com.google.common.base.Suppliers$NonSerializableMemoizingSupplier": Internal.ClassInfo, "net.minecraft.world.level.biome.Biome$ClimateSettings": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.request.AbuseReportRequest": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.WaywardCompass": Internal.ClassInfo, "javax.sound.sampled.AudioFormat": Internal.ClassInfo, "net.minecraftforge.fluids.FluidType": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$RightClickItem": Internal.ClassInfo, "net.minecraft.world.item.enchantment.SoulSpeedEnchantment": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2ByteFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.BlockWrapper": Internal.ClassInfo, "net.minecraftforge.network.ServerStatusPing": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.util.sorting.VertexSorters$SortByDistance": Internal.ClassInfo, "com.mojang.blaze3d.shaders.EffectProgram": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldOpenFlows": Internal.ClassInfo, "java.util.Spliterator$OfLong": Internal.ClassInfo, "top.theillusivec4.curios.api.type.capability.ICurio": Internal.ClassInfo, "net.minecraftforge.event.RegisterCommandsEvent": Internal.ClassInfo, "net.minecraft.client.resources.metadata.animation.AnimationMetadataSection": Internal.ClassInfo, "java.time.zone.ZoneOffsetTransitionRule": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration": Internal.ClassInfo, "net.minecraft.world.level.biome.AmbientMoodSettings": Internal.ClassInfo, "net.minecraft.advancements.critereon.SerializationContext": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.AirborneEffect": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.SpellModificationBuilder": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelVersion": Internal.ClassInfo, "cpw.mods.jarhandling.impl.SimpleJarMetadata": Internal.ClassInfo, "java.util.ImmutableCollections$Set12": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrownEnderpearl": Internal.ClassInfo, "net.minecraft.world.entity.animal.Parrot$Variant": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.forge.ItemDestroyedEventJS": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.ContainerEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlockIgnoreProcessor": Internal.ClassInfo, "net.minecraftforge.client.model.ForgeFaceData": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapDecoration": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundKeepAlivePacket": Internal.ClassInfo, "io.netty.buffer.PooledByteBufAllocator": Internal.ClassInfo, "net.minecraft.world.level.storage.DimensionDataStorage": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2LongFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.RecipesEventJS": Internal.ClassInfo, "com.mojang.brigadier.exceptions.DynamicCommandExceptionType": Internal.ClassInfo, "dev.architectury.registry.menu.MenuRegistry$ScreenFactory": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.BlockStateKJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundMoveEntityPacket": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent$BreakEvent": Internal.ClassInfo, "com.squoshi.irons_spells_js.util.AlchemistCauldronKubeJSRecipes$AlchemistCauldronRecipeBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.Heightmap$Types": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.nbt.NbtProvider": Internal.ClassInfo, "net.minecraft.server.ServerFunctionManager$TraceCallbacks": Internal.ClassInfo, "net.minecraft.network.TickablePacketListener": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$PureTransformer": Internal.ClassInfo, "net.minecraft.world.level.chunk.LevelChunk": Internal.ClassInfo, "net.minecraft.core.Direction$Plane": Internal.ClassInfo, "net.minecraft.client.User$Type": Internal.ClassInfo, "net.minecraftforge.common.util.MutableHashedLinkedMap": Internal.ClassInfo, "io.redspace.ironsspellbooks.block.arcane_anvil.ArcaneAnvilBlock": Internal.ClassInfo, "net.minecraft.world.level.block.entity.EnchantmentTableBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.block.RedstoneWallTorchBlock": Internal.ClassInfo, "net.minecraft.client.gui.Gui": Internal.ClassInfo, "java.nio.file.attribute.UserPrincipal": Internal.ClassInfo, "net.minecraft.world.item.enchantment.DigDurabilityEnchantment": Internal.ClassInfo, "net.minecraft.world.level.LevelSimulatedReader": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonReleased$Post": Internal.ClassInfo, "net.minecraft.world.entity.animal.Turtle": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ArrayRecipeComponent": Internal.ClassInfo, "net.minecraft.world.ticks.SerializableTickContainer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate": Internal.ClassInfo, "net.minecraft.world.entity.projectile.LargeFireball": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.AbstractIntSet": Internal.ClassInfo, "net.minecraft.client.resources.language.LanguageManager": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortList": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.GiantTrunkPlacer": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeAbstractMinecart": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.PlayerAdvancementEventJS": Internal.ClassInfo, "net.minecraft.world.level.dimension.DimensionType$MonsterSettings": Internal.ClassInfo, "java.util.stream.Collector$Characteristics": Internal.ClassInfo, "net.minecraft.data.CachedOutput": Internal.ClassInfo, "net.minecraftforge.common.IForgeShearable": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkEvent$Load": Internal.ClassInfo, "net.minecraft.world.entity.Display$FloatInterpolator": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ServerLevelKJS": Internal.ClassInfo, "java.security.Provider$Service": Internal.ClassInfo, "com.google.gson.JsonNull": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseSettings": Internal.ClassInfo, "net.minecraft.world.item.crafting.RepairItemRecipe": Internal.ClassInfo, "net.minecraft.client.sounds.AudioStream": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelResource": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.animations.upload.SpriteContentsAccessor": Internal.ClassInfo, "net.minecraft.world.level.block.FungusBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.WoodlandMansionStructure": Internal.ClassInfo, "net.minecraft.world.entity.monster.Shulker": Internal.ClassInfo, "io.redspace.ironsspellbooks.block.FireflyJar": Internal.ClassInfo, "net.minecraftforge.event.level.ExplosionEvent$Start": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.SpikeConfiguration": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrownExperienceBottle": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlaceGhostRecipePacket": Internal.ClassInfo, "net.minecraft.world.item.ArmorItem": Internal.ClassInfo, "net.minecraft.world.item.ItemDisplayContext": Internal.ClassInfo, "net.minecraft.advancements.AdvancementList$Listener": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.PointedDripstoneFeature": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingExperienceDropEvent": Internal.ClassInfo, "net.minecraft.client.renderer.texture.Tickable": Internal.ClassInfo, "java.util.concurrent.atomic.AtomicInteger": Internal.ClassInfo, "net.minecraft.world.entity.VariantHolder": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundMoveVehiclePacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration$CanyonShapeConfiguration": Internal.ClassInfo, "net.minecraft.world.item.WritableBookItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetPassengersPacket": Internal.ClassInfo, "net.minecraft.client.color.block.BlockColor": Internal.ClassInfo, "net.minecraft.stats.Stat": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.ConsoleLine$SourceLine": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2ObjectFunction": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$CharacterTyped$Post": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2ObjectMap": Internal.ClassInfo, "net.minecraft.server.level.progress.ChunkProgressListener": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.world.WorldRendererExtended": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureCheckResult": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundClientCommandPacket": Internal.ClassInfo, "net.minecraft.world.level.block.WitherRoseBlock": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.chunk.map.ClientChunkEventListener": Internal.ClassInfo, "net.minecraft.world.item.BoneMealItem": Internal.ClassInfo, "java.time.chrono.Era": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetDefaultSpawnPositionPacket": Internal.ClassInfo, "java.security.Key": Internal.ClassInfo, "com.google.common.collect.ForwardingSet": Internal.ClassInfo, "net.minecraft.world.level.chunk.Palette": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.PlayerStatsJS": Internal.ClassInfo, "net.minecraft.nbt.CollectionTag": Internal.ClassInfo, "mezz.jei.api.gui.builder.IRecipeLayoutBuilder": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2BooleanFunction": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetStructureBlockPacket": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.Boat$Type": Internal.ClassInfo, "net.minecraft.world.item.BrushItem": Internal.ClassInfo, "java.time.temporal.TemporalUnit": Internal.ClassInfo, "java.util.Spliterator$OfDouble": Internal.ClassInfo, "net.minecraft.client.gui.screens.inventory.AbstractContainerScreen": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2ShortFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2DoubleFunction": Internal.ClassInfo, "net.minecraft.world.entity.Display$RenderState": Internal.ClassInfo, "it.unimi.dsi.fastutil.BidirectionalIterator": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeModifier": Internal.ClassInfo, "java.util.stream.Stream$Builder": Internal.ClassInfo, "net.minecraftforge.data.event.GatherDataEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeConstructor": Internal.ClassInfo, "net.minecraftforge.common.capabilities.CapabilityProvider": Internal.ClassInfo, "net.minecraft.client.model.HumanoidModel": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.nbt.LootNbtProviderType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.Aquifer": Internal.ClassInfo, "net.minecraft.client.StringSplitter$LinePosConsumer": Internal.ClassInfo, "net.minecraft.util.SignatureUpdater": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageBody": Internal.ClassInfo, "net.minecraftforge.forgespi.language.ILifecycleEvent": Internal.ClassInfo, "java.time.Period": Internal.ClassInfo, "net.minecraft.world.level.border.WorldBorder$Settings": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.NetheriteMageArmorItem": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$RightClickEmpty": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.EntityArrayList": Internal.ClassInfo, "net.minecraft.world.phys.Vec2": Internal.ClassInfo, "net.minecraft.world.phys.Vec3": Internal.ClassInfo, "com.eliotlash.mclib.math.IValue": Internal.ClassInfo, "net.minecraft.core.HolderGetter$Provider": Internal.ClassInfo, "dev.kosmx.playerAnim.core.util.Pair": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.KMath": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.JsonRecipeJS": Internal.ClassInfo, "net.minecraft.world.item.Equipable": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.JsonSerializable": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.AxisAlignedLinearPosTest": Internal.ClassInfo, "net.minecraft.util.valueproviders.ConstantFloat": Internal.ClassInfo, "com.mojang.serialization.CompressorHolder": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryEventType": Internal.ClassInfo, "net.minecraft.server.packs.metadata.MetadataSectionSerializer": Internal.ClassInfo, "net.minecraft.data.DataProvider$Factory": Internal.ClassInfo, "net.minecraftforge.event.AddReloadListenerEvent": Internal.ClassInfo, "com.mojang.datafixers.OpticFinder": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.RangedAttribute": Internal.ClassInfo, "dev.kosmx.playerAnim.core.impl.AnimationProcessor": Internal.ClassInfo, "net.caffeinemc.mods.sodium.api.vertex.buffer.VertexBufferWriter": Internal.ClassInfo, "net.minecraftforge.event.entity.player.FillBucketEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortBidirectionalIterator": Internal.ClassInfo, "java.lang.invoke.TypeDescriptor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SeaPickleFeature": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCommandsPacket": Internal.ClassInfo, "net.minecraftforge.client.model.geometry.BlockGeometryBakingContext$VisibilityData": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.PlatformWrapper$ModInfo": Internal.ClassInfo, "it.unimi.dsi.fastutil.Function": Internal.ClassInfo, "net.minecraft.world.level.block.ChestBlock": Internal.ClassInfo, "java.time.chrono.ChronoLocalDateTime": Internal.ClassInfo, "net.minecraft.world.item.BowlFoodItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.HugeMushroomFeatureConfiguration": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.StairBlockBuilder": Internal.ClassInfo, "net.minecraft.world.entity.ai.behavior.BehaviorControl": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhaseManager": Internal.ClassInfo, "net.minecraft.world.entity.schedule.Schedule": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapDecoration$Type": Internal.ClassInfo, "io.redspace.ironsspellbooks.capabilities.magic.PlayerCooldowns": Internal.ClassInfo, "net.minecraft.world.level.block.TintedGlassBlock": Internal.ClassInfo, "net.minecraft.world.entity.ai.goal.WrappedGoal": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeMenuType": Internal.ClassInfo, "dev.architectury.fluid.FluidStack": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundDamageEventPacket": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainer$CountConsumer": Internal.ClassInfo, "com.mojang.brigadier.SingleRedirectModifier": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventResult": Internal.ClassInfo, "net.minecraft.world.entity.animal.Ocelot": Internal.ClassInfo, "net.minecraft.world.level.gameevent.PositionSourceType": Internal.ClassInfo, "yalter.mousetweaks.mixin.AbstractContainerScreenAccessor": Internal.ClassInfo, "net.minecraft.world.inventory.BrewingStandMenu": Internal.ClassInfo, "com.mojang.datafixers.types.families.TypeFamily": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ModifiableItemKJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.KubeJSInventoryListener": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.item.IScroll": Internal.ClassInfo, "net.minecraft.world.entity.player.ProfileKeyPair": Internal.ClassInfo, "net.minecraft.world.phys.shapes.DiscreteVoxelShape$IntLineConsumer": Internal.ClassInfo, "io.redspace.ironsspellbooks.entity.mobs.goals.WizardSupportGoal": Internal.ClassInfo, "net.minecraft.client.Minecraft$ChatStatus": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.ShadowwalkerArmorItem": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.MetricCategory": Internal.ClassInfo, "io.redspace.ironsspellbooks.registries.ParticleRegistry$3": Internal.ClassInfo, "java.util.ImmutableCollections$MapN": Internal.ClassInfo, "io.redspace.ironsspellbooks.registries.ParticleRegistry$2": Internal.ClassInfo, "net.minecraft.util.StringRepresentable$EnumCodec": Internal.ClassInfo, "io.redspace.ironsspellbooks.registries.ParticleRegistry$1": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.NetherWorldCarver": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.CubeDeformation": Internal.ClassInfo, "net.minecraft.world.Difficulty": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.EntityLootEventJS": Internal.ClassInfo, "io.redspace.ironsspellbooks.registries.ParticleRegistry$5": Internal.ClassInfo, "net.minecraftforge.client.textures.ForgeTextureMetadata$Serializer": Internal.ClassInfo, "io.redspace.ironsspellbooks.registries.ParticleRegistry$4": Internal.ClassInfo, "net.minecraft.client.OptionInstance$Enum": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemTransforms": Internal.ClassInfo, "net.minecraft.core.particles.ParticleType": Internal.ClassInfo, "net.minecraft.client.renderer.RenderType": Internal.ClassInfo, "net.minecraft.client.renderer.ChunkBufferBuilderPack": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormat$Mode": Internal.ClassInfo, "net.minecraftforge.fml.ModLoadingStage": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundOpenScreenPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.PlacedFeature": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModInfo$ModVersion": Internal.ClassInfo, "net.minecraft.world.scores.criteria.ObjectiveCriteria$RenderType": Internal.ClassInfo, "java.lang.invoke.TypeDescriptor$OfMethod": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.poi.PoiManager": Internal.ClassInfo, "com.mojang.datafixers.optics.Optic": Internal.ClassInfo, "net.minecraft.world.level.block.PinkPetalsBlock": Internal.ClassInfo, "journeymap.client.api.event.forge.EntityRadarUpdateEvent": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$RightClickBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.player.AdvancementEvent": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$InteractionKeyMappingTriggered": Internal.ClassInfo, "net.minecraft.world.level.block.SweetBerryBushBlock": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$LineStateShard": Internal.ClassInfo, "software.bernie.geckolib.core.animation.Animation": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2FloatFunction": Internal.ClassInfo, "dev.latvian.mods.unit.token.UnitTokenStream": Internal.ClassInfo, "net.minecraft.util.valueproviders.FloatProvider": Internal.ClassInfo, "net.minecraftforge.client.textures.ForgeTextureMetadata": Internal.ClassInfo, "net.minecraftforge.eventbus.api.Event": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SmokerBlockEntity": Internal.ClassInfo, "net.minecraft.world.inventory.MerchantMenu": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundEntityTagQuery": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.FenceGateBlockBuilder": Internal.ClassInfo, "net.minecraft.client.model.geom.ModelPart": Internal.ClassInfo, "com.google.common.base.Function": Internal.ClassInfo, "net.minecraft.advancements.AdvancementProgress": Internal.ClassInfo, "net.minecraft.world.level.storage.DataVersion": Internal.ClassInfo, "com.google.common.collect.ImmutableMap": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.properties.RemoveSpawnsProperties": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket$Action": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ObjectFunction": Internal.ClassInfo, "net.minecraft.client.renderer.RenderType$OutlineProperty": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.RotationAxis": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.SimplePlayerEventJS": Internal.ClassInfo, "com.mojang.datafixers.kinds.App": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBlockEntityDataPacket": Internal.ClassInfo, "net.minecraft.client.gui.components.TabOrderedElement": Internal.ClassInfo, "java.util.AbstractSequentialList": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.LoggedChatEvent": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistryInternal": Internal.ClassInfo, "net.minecraftforge.event.LootTableLoadEvent": Internal.ClassInfo, "net.minecraft.world.entity.animal.Bee": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ComponentRole": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientAdvancements$Listener": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.color.NoColor": Internal.ClassInfo, "java.text.ParsePosition": Internal.ClassInfo, "net.minecraft.world.level.block.DetectorRailBlock": Internal.ClassInfo, "java.util.Deque": Internal.ClassInfo, "net.minecraftforge.event.server.ServerStartingEvent": Internal.ClassInfo, "com.probejs.jdoc.java.MethodInfo": Internal.ClassInfo, "net.minecraftforge.client.event.sound.SoundEvent$SoundSourceEvent": Internal.ClassInfo, "net.minecraft.advancements.FrameType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlackstoneReplaceProcessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeComponentFactory": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.IEventHandler": Internal.ClassInfo, "io.redspace.ironsspellbooks.capabilities.magic.PlayerRecasts": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$EntityInteractSpecific": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShapelessRecipe": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.parameters.LootContextParam": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainer$Strategy": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.StateTestingPredicate": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ItemEntityKJS": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.HeartstopEffect": Internal.ClassInfo, "com.mojang.authlib.minecraft.BanDetails": Internal.ClassInfo, "org.embeddedt.embeddium.model.EpsilonizableBlockElement": Internal.ClassInfo, "net.minecraft.world.level.GameRules$Type": Internal.ClassInfo, "net.minecraftforge.registries.DeferredRegister": Internal.ClassInfo, "io.netty.channel.ChannelFuture": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BeeDebugRenderer": Internal.ClassInfo, "net.minecraft.world.phys.HitResult": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2ObjectFunction": Internal.ClassInfo, "java.text.DateFormatSymbols": Internal.ClassInfo, "net.minecraft.world.level.block.StonecutterBlock": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$TabVisibility": Internal.ClassInfo, "net.minecraft.world.level.block.DirectionalBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.EntryGroup$Builder": Internal.ClassInfo, "net.minecraft.world.entity.npc.VillagerDataHolder": Internal.ClassInfo, "net.minecraft.world.item.enchantment.MultiShotEnchantment": Internal.ClassInfo, "net.minecraft.network.chat.LastSeenMessages$Update": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket": Internal.ClassInfo, "net.minecraft.network.chat.SignableCommand$Argument": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2BooleanFunction": Internal.ClassInfo, "java.time.ZonedDateTime": Internal.ClassInfo, "java.lang.Record": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeGuiGraphics": Internal.ClassInfo, "net.minecraftforge.client.event.ModelEvent": Internal.ClassInfo, "net.minecraft.world.level.block.BeehiveBlock": Internal.ClassInfo, "net.minecraft.world.item.DoubleHighBlockItem": Internal.ClassInfo, "net.minecraft.world.level.block.SpreadingSnowyDirtBlock": Internal.ClassInfo, "net.minecraft.data.PackOutput": Internal.ClassInfo, "software.bernie.geckolib.renderer.layer.GeoRenderLayer": Internal.ClassInfo, "net.minecraft.world.level.block.SuspiciousEffectHolder": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.RegistryEventJS": Internal.ClassInfo, "io.netty.util.concurrent.AbstractEventExecutorGroup": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2ShortFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.ScriptTypeHolder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction$ContextProvider": Internal.ClassInfo, "net.minecraft.world.item.DyeableHorseArmorItem": Internal.ClassInfo, "net.minecraft.server.players.BanListEntry": Internal.ClassInfo, "java.math.MathContext": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyReleased": Internal.ClassInfo, "journeymap.client.api.display.Waypoint": Internal.ClassInfo, "net.minecraft.network.syncher.EntityDataAccessor": Internal.ClassInfo, "net.minecraft.world.item.alchemy.Potion": Internal.ClassInfo, "java.time.ZoneId": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.DoubleBlockHalf": Internal.ClassInfo, "net.minecraft.client.gui.components.PlayerTabOverlay": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.GolemSensor": Internal.ClassInfo, "net.minecraft.world.level.block.BambooStalkBlock": Internal.ClassInfo, "java.security.Permission": Internal.ClassInfo, "net.minecraftforge.event.entity.player.ItemTooltipEvent": Internal.ClassInfo, "net.minecraft.world.level.entity.EntityInLevelCallback": Internal.ClassInfo, "net.minecraft.network.protocol.Packet": Internal.ClassInfo, "java.lang.StringBuilder": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundForgetLevelChunkPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.Structure$GenerationStub": Internal.ClassInfo, "net.minecraftforge.fml.event.config.ModConfigEvent$Reloading": Internal.ClassInfo, "net.minecraft.world.level.BaseCommandBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLevelChunkWithLightPacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2IntFunction": Internal.ClassInfo, "io.redspace.ironsspellbooks.entity.mobs.goals.WispAttackGoal": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.MutableArmorTier": Internal.ClassInfo, "net.minecraft.nbt.StreamTagVisitor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetCarriedItemPacket": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.UpgradeOrbItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.CombiningPredicate": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BambooLeaves": Internal.ClassInfo, "com.mojang.serialization.codecs.SimpleMapCodec": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationController$CustomKeyframeHandler": Internal.ClassInfo, "net.minecraft.world.item.CompassItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.Blender$DistanceGetter": Internal.ClassInfo, "net.minecraft.data.worldgen.BootstapContext": Internal.ClassInfo, "net.minecraft.client.CameraType": Internal.ClassInfo, "journeymap.client.api.model.WaypointBase": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetBorderSizePacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2LongFunction": Internal.ClassInfo, "com.mojang.datafixers.types.families.RecursiveTypeFamily": Internal.ClassInfo, "java.lang.constant.DirectMethodHandleDesc": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.util.sorting.VertexSorters$AbstractVertexSorter": Internal.ClassInfo, "net.minecraft.client.renderer.texture.TextureAtlasSprite": Internal.ClassInfo, "net.minecraftforge.fml.IExtensionPoint$DisplayTest": Internal.ClassInfo, "com.electronwill.nightconfig.core.UnmodifiableCommentedConfig$CommentNode": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.VinesFeature": Internal.ClassInfo, "com.mojang.math.Transformation": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.BoneAnimationQueue": Internal.ClassInfo, "net.minecraft.world.entity.player.StackedContents": Internal.ClassInfo, "net.minecraft.world.level.chunk.StructureAccess": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.WorldCarver": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.Sensor": Internal.ClassInfo, "net.minecraftforge.event.level.ExplosionEvent$Detonate": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPongPacket": Internal.ClassInfo, "net.minecraft.client.Options": Internal.ClassInfo, "net.minecraft.client.sounds.Weighted": Internal.ClassInfo, "dev.latvian.mods.kubejs.server.CustomCommandEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.Heightmap": Internal.ClassInfo, "com.mojang.realmsclient.gui.task.RepeatedDelayStrategy": Internal.ClassInfo, "net.minecraft.client.gui.components.AbstractWidget": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityEvent": Internal.ClassInfo, "net.minecraft.network.protocol.game.VecDeltaCodec": Internal.ClassInfo, "net.minecraft.resources.ResourceLocation": Internal.ClassInfo, "net.minecraft.client.Realms32BitWarningStatus": Internal.ClassInfo, "net.minecraft.world.item.Items": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.quad.properties.ModelQuadFacing": Internal.ClassInfo, "net.minecraft.world.InteractionResultHolder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.CherryFoliagePlacer": Internal.ClassInfo, "net.minecraft.server.level.progress.StoringChunkProgressListener": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.BuilderType": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.BlockContainerJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSignUpdatePacket": Internal.ClassInfo, "net.minecraft.world.level.biome.AmbientParticleSettings": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.EnderDragon": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.NBTIOWrapper": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.data.KeyFrameData": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Render$Pre": Internal.ClassInfo, "java.util.concurrent.Delayed": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.MagicMobEffect": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuInventoryClickEvent": Internal.ClassInfo, "io.redspace.ironsspellbooks.block.inscription_table.InscriptionTableBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2FloatFunction": Internal.ClassInfo, "java.security.DomainCombiner": Internal.ClassInfo, "net.minecraft.network.chat.FilterMask": Internal.ClassInfo, "net.minecraft.world.level.material.LavaFluid$Flowing": Internal.ClassInfo, "net.minecraft.client.player.inventory.Hotbar": Internal.ClassInfo, "net.minecraft.world.level.GameRules": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.CraftingContainerKJS": Internal.ClassInfo, "java.time.Instant": Internal.ClassInfo, "com.mojang.brigadier.ImmutableStringReader": Internal.ClassInfo, "java.nio.channels.SeekableByteChannel": Internal.ClassInfo, "net.minecraft.client.renderer.texture.AbstractTexture": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortSpliterator": Internal.ClassInfo, "net.minecraft.world.level.block.GrowingPlantHeadBlock": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableBiomeInfo$BiomeInfo$Builder": Internal.ClassInfo, "com.squoshi.irons_spells_js.events.EntitySpellCastEventJS": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.CountingMap": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsNotification": Internal.ClassInfo, "net.minecraftforge.client.event.EntityRenderersEvent": Internal.ClassInfo, "net.minecraft.util.KeyDispatchDataCodec": Internal.ClassInfo, "mezz.jei.api.gui.drawable.IDrawable": Internal.ClassInfo, "net.minecraft.world.level.block.BucketPickup": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.AbyssalShroudEffect": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.consumables.DrinkableItem": Internal.ClassInfo, "com.electronwill.nightconfig.core.EnumGetMethod": Internal.ClassInfo, "net.minecraftforge.eventbus.api.IEventBus": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeSpecialEffects$GrassColorModifier$ColorModifier": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2FloatOpenHashMap": Internal.ClassInfo, "io.redspace.ironsspellbooks.block.scroll_forge.ScrollForgeBlock": Internal.ClassInfo, "com.mojang.datafixers.kinds.K2": Internal.ClassInfo, "net.minecraft.world.level.block.CarvedPumpkinBlock": Internal.ClassInfo, "com.mojang.datafixers.kinds.K1": Internal.ClassInfo, "java.net.Proxy$Type": Internal.ClassInfo, "net.minecraft.world.inventory.ShulkerBoxMenu": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityAttributeCreationEvent": Internal.ClassInfo, "net.minecraft.world.entity.MobCategory": Internal.ClassInfo, "dev.latvian.mods.rhino.BaseFunction": Internal.ClassInfo, "net.minecraftforge.client.extensions.common.IClientMobEffectExtensions": Internal.ClassInfo, "java.lang.constant.DirectMethodHandleDesc$Kind": Internal.ClassInfo, "net.minecraft.data.DataGenerator": Internal.ClassInfo, "net.raphimc.immediatelyfast.injection.interfaces.IBufferBuilder": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Provides": Internal.ClassInfo, "java.lang.Appendable": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2ShortFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.BlockPredicateFilter": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.AbstractSpell": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$ItemCraftedEvent": Internal.ClassInfo, "net.minecraft.nbt.StreamTagVisitor$EntryResult": Internal.ClassInfo, "net.minecraft.world.level.block.DispenserBlock": Internal.ClassInfo, "com.mojang.blaze3d.shaders.FogShape": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.DataSenderKJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetCarriedItemPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.OceanRuinStructure$Type": Internal.ClassInfo, "net.minecraft.world.level.block.entity.CampfireBlockEntity": Internal.ClassInfo, "net.minecraft.nbt.TagVisitor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.GeodeLayerSettings": Internal.ClassInfo, "java.lang.Object": Internal.ClassInfo, "java.util.function.DoublePredicate": Internal.ClassInfo, "dev.architectury.registry.registries.RegistrySupplier": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.MetricSampler$MetricSamplerBuilder": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$PlayerRespawnEvent": Internal.ClassInfo, "com.mojang.brigadier.ResultConsumer": Internal.ClassInfo, "net.minecraft.world.level.block.TripWireBlock": Internal.ClassInfo, "net.minecraft.commands.CommandBuildContext$Configurable": Internal.ClassInfo, "net.minecraft.world.item.crafting.DecoratedPotRecipe": Internal.ClassInfo, "net.minecraftforge.event.entity.ProjectileImpactEvent": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Exports$Modifier": Internal.ClassInfo, "net.minecraft.world.item.Item": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.DynamicRecipeComponent": Internal.ClassInfo, "java.awt.geom.Rectangle2D": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.score.ScoreboardNameProvider": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ItemSupplier": Internal.ClassInfo, "mezz.jei.api.recipe.RecipeType": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuInventoryClickEvent$Callback": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2ObjectFunction": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapBanner": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.HoeItemBuilder": Internal.ClassInfo, "com.squoshi.irons_spells_js.util.ISSKJSUtils$ResourceHolder": Internal.ClassInfo, "net.minecraft.server.ServerAdvancementManager": Internal.ClassInfo, "net.minecraft.world.level.block.WitherWallSkullBlock": Internal.ClassInfo, "net.minecraft.network.chat.HoverEvent$Action": Internal.ClassInfo, "net.minecraft.world.item.HangingSignItem": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.InterModProcessEvent": Internal.ClassInfo, "net.minecraft.world.entity.decoration.HangingEntity": Internal.ClassInfo, "net.minecraft.client.renderer.debug.GoalSelectorDebugRenderer$DebugGoal": Internal.ClassInfo, "net.minecraft.network.protocol.BundleDelimiterPacket": Internal.ClassInfo, "net.minecraft.world.level.block.SoundType": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.GiftLootEventJS": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageChain$Decoder": Internal.ClassInfo, "com.probejs.jdoc.java.type.ITypeInfo": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormatElement$Type": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.SequentialEntry$Builder": Internal.ClassInfo, "dev.latvian.mods.kubejs.server.ServerEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction$NoiseHolder": Internal.ClassInfo, "net.minecraft.world.entity.LerpingModel": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterClientCommandsEvent": Internal.ClassInfo, "java.time.format.ResolverStyle": Internal.ClassInfo, "net.minecraft.world.entity.projectile.FishingHook": Internal.ClassInfo, "java.util.function.ObjIntConsumer": Internal.ClassInfo, "net.minecraft.world.item.EmptyMapItem": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BellAttachType": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidStackJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.LootTableEntry": Internal.ClassInfo, "net.minecraftforge.client.extensions.common.IClientItemExtensions": Internal.ClassInfo, "net.minecraft.world.level.block.ComposterBlock": Internal.ClassInfo, "net.minecraft.world.level.block.CherryLeavesBlock": Internal.ClassInfo, "com.squoshi.irons_spells_js.util.ServerPlayerISSKJS": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.LootItemCondition$Builder": Internal.ClassInfo, "net.minecraft.client.resources.model.BakedModel": Internal.ClassInfo, "net.minecraft.client.gui.navigation.ScreenAxis": Internal.ClassInfo, "net.minecraftforge.forgespi.locating.IModFile$Type": Internal.ClassInfo, "net.minecraft.world.level.block.VineBlock": Internal.ClassInfo, "net.raphimc.immediatelyfast.injection.interfaces.IMapRenderer": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.ParticleTypeBuilder": Internal.ClassInfo, "net.minecraft.network.PacketListener": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootParams": Internal.ClassInfo, "io.netty.channel.DefaultEventLoopGroup": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2CharFunction": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Llama$Variant": Internal.ClassInfo, "net.minecraft.world.entity.monster.Guardian": Internal.ClassInfo, "net.minecraft.world.item.ItemFrameItem": Internal.ClassInfo, "net.minecraft.client.resources.sounds.SoundInstance$Attenuation": Internal.ClassInfo, "net.minecraft.world.entity.EquipmentSlot": Internal.ClassInfo, "net.minecraft.world.entity.ai.Brain": Internal.ClassInfo, "net.minecraft.world.level.dimension.LevelStem": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.CustomSpell$CastContext": Internal.ClassInfo, "net.minecraft.nbt.ListTag": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkGeneratorStructureState": Internal.ClassInfo, "net.minecraft.world.entity.GlowSquid": Internal.ClassInfo, "net.minecraft.world.level.block.TrappedChestBlock": Internal.ClassInfo, "java.net.URL": Internal.ClassInfo, "java.io.ObjectOutput": Internal.ClassInfo, "java.util.regex.MatchResult": Internal.ClassInfo, "net.minecraft.world.scores.Score": Internal.ClassInfo, "org.objectweb.asm.Type": Internal.ClassInfo, "dev.latvian.mods.rhino.ClassShutter": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.AnyOfPredicate": Internal.ClassInfo, "java.lang.Enum": Internal.ClassInfo, "net.minecraft.world.level.block.HayBlock": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationProcessor": Internal.ClassInfo, "net.minecraft.world.item.DyeableArmorItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseGeneratorSettings": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BambooFeature": Internal.ClassInfo, "java.nio.file.PathMatcher": Internal.ClassInfo, "net.minecraft.util.BitStorage": Internal.ClassInfo, "net.minecraftforge.registries.IdMappingEvent$IdRemapping": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.attribute.MagicRangedAttribute": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.curios.SimpleDescriptiveCurio": Internal.ClassInfo, "java.net.URI": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay$LineSplitter": Internal.ClassInfo, "net.minecraft.client.resources.metadata.animation.AnimationMetadataSectionSerializer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.NoiseBasedStateProvider": Internal.ClassInfo, "com.mojang.datafixers.kinds.Functor$Mu": Internal.ClassInfo, "io.netty.buffer.AbstractByteBuf": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.FancyFoliagePlacer": Internal.ClassInfo, "net.minecraft.client.renderer.block.ModelBlockRenderer": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedItemPropertiesExtension": Internal.ClassInfo, "net.minecraft.world.level.levelgen.BitRandomSource": Internal.ClassInfo, "net.minecraft.world.inventory.InventoryMenu": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ReportEnvironment$Server": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.MegaPineFoliagePlacer": Internal.ClassInfo, "java.net.URLStreamHandler": Internal.ClassInfo, "net.minecraft.network.chat.PlayerChatMessage": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.JungleTempleStructure": Internal.ClassInfo, "java.util.Optional": Internal.ClassInfo, "dev.latvian.mods.rhino.WrappedExecutable": Internal.ClassInfo, "net.minecraft.server.ReloadableServerResources": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeOptional": Internal.ClassInfo, "net.minecraft.network.chat.ChatDecorator": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.AdvancementJS": Internal.ClassInfo, "java.net.ContentHandlerFactory": Internal.ClassInfo, "net.minecraft.world.level.block.ObserverBlock": Internal.ClassInfo, "net.minecraft.world.level.block.BlastFurnaceBlock": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterKeyMappingsEvent": Internal.ClassInfo, "dev.architectury.core.fluid.ArchitecturyFluidAttributes": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.BasicItemJS$Builder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.RandomPatchFeature": Internal.ClassInfo, "com.probejs.features.plugin.VSCodeFileSavedEventJS": Internal.ClassInfo, "software.bernie.geckolib.cache.object.BakedGeoModel": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootTable": Internal.ClassInfo, "net.minecraft.world.item.EggItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SignBlockEntity": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.ExplosionEventJS": Internal.ClassInfo, "java.util.Hashtable": Internal.ClassInfo, "net.minecraft.world.level.block.BaseFireBlock": Internal.ClassInfo, "net.minecraft.network.chat.ComponentContents": Internal.ClassInfo, "com.mojang.blaze3d.platform.VideoMode": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.AscensionEffect": Internal.ClassInfo, "net.minecraft.client.CloudStatus": Internal.ClassInfo, "net.minecraftforge.common.world.StructureModifier$Phase": Internal.ClassInfo, "net.minecraft.world.item.AxeItem": Internal.ClassInfo, "net.minecraft.world.item.crafting.FireworkStarRecipe": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuClickHandler": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.NumberComponent$LongRange": Internal.ClassInfo, "net.minecraft.client.resources.model.UnbakedModel": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.AddWorldgenEventJS": Internal.ClassInfo, "net.minecraft.world.entity.monster.Silverfish": Internal.ClassInfo, "net.minecraft.SystemReport": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.LangEventJS$Key": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryEventSender": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.PoiTypeBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ItemStackKJS": Internal.ClassInfo, "net.minecraft.world.inventory.RecipeBookMenu": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeFriendlyByteBuf": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.IPresetSpellContainer": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundRecipeBookSeenRecipePacket": Internal.ClassInfo, "net.minecraft.world.entity.monster.Husk": Internal.ClassInfo, "com.google.gson.JsonDeserializationContext": Internal.ClassInfo, "net.minecraftforge.api.distmarker.Dist": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.RarityFilter": Internal.ClassInfo, "com.probejs.jdoc.java.MethodInfo$ParamInfo": Internal.ClassInfo, "net.minecraft.world.level.LevelSimulatedRW": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeType": Internal.ClassInfo, "java.nio.file.Path": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.WeightedPlacedFeature": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerCombatKillPacket": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartHopper": Internal.ClassInfo, "net.minecraft.world.RandomSequences": Internal.ClassInfo, "net.minecraft.client.resources.sounds.SoundInstance": Internal.ClassInfo, "java.time.temporal.TemporalField": Internal.ClassInfo, "net.minecraft.commands.arguments.EntityArgument$Info": Internal.ClassInfo, "net.minecraft.world.level.block.BarrelBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSectionBlocksUpdatePacket": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.Keyframe": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrownPotion": Internal.ClassInfo, "net.minecraft.commands.arguments.ArgumentSignatures$Signer": Internal.ClassInfo, "net.minecraft.util.FormattedCharSink": Internal.ClassInfo, "java.util.function.ToDoubleFunction": Internal.ClassInfo, "net.minecraft.world.level.block.piston.PistonBaseBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.FallingBlockBuilder": Internal.ClassInfo, "net.minecraft.client.renderer.debug.StructureRenderer": Internal.ClassInfo, "net.minecraft.world.level.GameType": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer$Builder": Internal.ClassInfo, "net.minecraft.server.packs.resources.CloseableResourceManager": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.RendEffect": Internal.ClassInfo, "net.minecraft.world.entity.ai.goal.GoalSelector": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.SodiumWorldRenderer": Internal.ClassInfo, "net.minecraftforge.common.capabilities.ICapabilityProvider": Internal.ClassInfo, "net.minecraft.core.particles.DustParticleOptions": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetTitleTextPacket": Internal.ClassInfo, "dev.latvian.mods.rhino.Script": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceOrTagArgument": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBlockUpdatePacket": Internal.ClassInfo, "java.text.AttributedCharacterIterator$Attribute": Internal.ClassInfo, "java.util.Calendar": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockBuilder": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeInstance": Internal.ClassInfo, "net.minecraft.world.level.block.Mirror": Internal.ClassInfo, "java.util.concurrent.ScheduledExecutorService": Internal.ClassInfo, "net.minecraft.stats.Stats": Internal.ClassInfo, "org.lwjgl.system.StructBuffer": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay": Internal.ClassInfo, "net.minecraft.world.level.BlockAndTintGetter": Internal.ClassInfo, "net.minecraft.server.level.BlockDestructionProgress": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.registry.SchoolRegistry": Internal.ClassInfo, "net.minecraft.world.entity.LightningBolt": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeModifier$Operation": Internal.ClassInfo, "java.time.format.TextStyle": Internal.ClassInfo, "net.minecraft.world.item.ComplexItem": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.AbstractMinecart": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ObjectFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.CreativeModeTabKJS": Internal.ClassInfo, "net.minecraft.world.entity.monster.warden.Warden": Internal.ClassInfo, "net.minecraft.world.item.enchantment.WaterWorkerEnchantment": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.JEISubtypesEventJS$Interpreter": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ThornsEnchantment": Internal.ClassInfo, "com.electronwill.nightconfig.core.CommentedConfig": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.ChatLog": Internal.ClassInfo, "dev.architectury.hooks.level.biome.EffectsProperties": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationContext$OptionsModifier": Internal.ClassInfo, "net.minecraft.util.random.Weight": Internal.ClassInfo, "software.bernie.geckolib.core.animatable.model.CoreGeoModel": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$EntityInteract": Internal.ClassInfo, "net.minecraft.world.WorldlyContainerHolder": Internal.ClassInfo, "net.minecraft.nbt.TagType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecoratorType": Internal.ClassInfo, "net.minecraft.world.inventory.AbstractFurnaceMenu": Internal.ClassInfo, "io.netty.channel.MultithreadEventLoopGroup": Internal.ClassInfo, "java.time.InstantSource": Internal.ClassInfo, "net.minecraft.world.entity.projectile.SmallFireball": Internal.ClassInfo, "com.google.common.collect.ImmutableEnumMap": Internal.ClassInfo, "net.minecraft.server.packs.repository.Pack$Info": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.MinecraftServerKJS": Internal.ClassInfo, "net.minecraft.world.level.GameRules$Category": Internal.ClassInfo, "net.minecraft.world.level.ClipBlockStateContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.PlacementModifierType": Internal.ClassInfo, "com.mojang.serialization.MapEncoder": Internal.ClassInfo, "net.minecraftforge.fml.config.ConfigFileTypeHandler": Internal.ClassInfo, "java.util.function.LongToDoubleFunction": Internal.ClassInfo, "net.minecraft.commands.synchronization.brigadier.StringArgumentSerializer": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2FloatMap$Entry": Internal.ClassInfo, "net.minecraftforge.common.world.ClimateSettingsBuilder": Internal.ClassInfo, "net.minecraft.core.Holder$Reference$Type": Internal.ClassInfo, "net.minecraft.core.HolderSet$Direct": Internal.ClassInfo, "net.minecraft.world.inventory.RecipeHolder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.UnderwaterMagmaConfiguration": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBossEventPacket$Handler": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundMerchantOffersPacket": Internal.ClassInfo, "net.minecraft.advancements.AdvancementList": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmokingRecipe": Internal.ClassInfo, "net.minecraft.client.searchtree.RefreshableSearchTree": Internal.ClassInfo, "java.nio.charset.CharsetEncoder": Internal.ClassInfo, "com.google.common.reflect.Invokable": Internal.ClassInfo, "net.minecraftforge.client.gui.overlay.NamedGuiOverlay": Internal.ClassInfo, "net.minecraft.world.item.SimpleFoiledItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.ReplaceSphereConfiguration": Internal.ClassInfo, "journeymap.client.api.display.Displayable": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.VariantBlockStateGenerator": Internal.ClassInfo, "com.google.common.base.Supplier": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.magic.MagicData": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.AbstractSpellWrapper$SpellStatus": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetScorePacket": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBlockState": Internal.ClassInfo, "net.minecraft.world.level.ColorResolver": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.RenderChunkRegion": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.TrunkVineDecorator": Internal.ClassInfo, "io.netty.channel.ChannelHandlerContext": Internal.ClassInfo, "io.redspace.ironsspellbooks.block.BloodCauldronBlock$CookExecution": Internal.ClassInfo, "net.minecraft.world.entity.ai.behavior.PositionTracker": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockElementFace": Internal.ClassInfo, "net.minecraft.world.level.chunk.storage.SectionStorage": Internal.ClassInfo, "net.minecraft.world.level.block.SoulSandBlock": Internal.ClassInfo, "net.minecraft.network.chat.TextColor": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterColorHandlersEvent$Block": Internal.ClassInfo, "java.util.Locale$Category": Internal.ClassInfo, "net.minecraft.world.entity.player.PlayerModelPart": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLevelStageEvent$Stage": Internal.ClassInfo, "software.bernie.geckolib.renderer.GeoRenderer": Internal.ClassInfo, "net.minecraft.server.bossevents.CustomBossEvent": Internal.ClassInfo, "net.minecraft.world.level.block.WitherSkullBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.ProbabilityFeatureConfiguration": Internal.ClassInfo, "java.lang.Package": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2LongFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldDimensions$Complete": Internal.ClassInfo, "net.minecraft.world.phys.EntityHitResult": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundHurtAnimationPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.PlayerEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundAnimatePacket": Internal.ClassInfo, "java.util.function.Consumer": Internal.ClassInfo, "software.bernie.geckolib.loading.json.raw.ModelProperties": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.BlockStateModifyCallbackJS": Internal.ClassInfo, "net.minecraft.world.level.block.entity.DropperBlockEntity": Internal.ClassInfo, "java.time.format.DateTimeFormatter": Internal.ClassInfo, "java.util.concurrent.ConcurrentHashMap$CollectionView": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.DirectionProperty": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ReplacementMatch": Internal.ClassInfo, "net.minecraft.world.level.block.BonemealableBlock": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.chunk.map.ChunkTrackerHolder": Internal.ClassInfo, "java.security.KeyPair": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemCraftedEventJS": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiEvent$Post": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterGuiOverlaysEvent": Internal.ClassInfo, "net.minecraft.world.entity.monster.Vex": Internal.ClassInfo, "dev.latvian.mods.rhino.util.wrap.TypeWrapperFactory$Simple": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info$Template": Internal.ClassInfo, "net.minecraft.world.level.block.FurnaceBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.DualNoiseProvider": Internal.ClassInfo, "net.minecraft.world.entity.SpawnPlacements$SpawnPredicate": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityJoinLevelEvent": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BooleanProperty": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.ForkingTrunkPlacer": Internal.ClassInfo, "mezz.jei.api.gui.widgets.IScrollGridWidget": Internal.ClassInfo, "java.nio.file.Watchable": Internal.ClassInfo, "net.minecraft.world.entity.animal.Cat": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.special.ShapelessKubeJSRecipe$SerializerKJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.BlockBuilderProvider": Internal.ClassInfo, "net.minecraft.world.inventory.tooltip.TooltipComponent": Internal.ClassInfo, "net.minecraft.server.level.FullChunkStatus": Internal.ClassInfo, "net.minecraft.world.level.biome.Biome$Precipitation": Internal.ClassInfo, "net.minecraft.world.item.EnderpearlItem": Internal.ClassInfo, "org.apache.logging.log4j.MarkerManager$Log4jMarker": Internal.ClassInfo, "net.minecraftforge.fml.LogicalSide": Internal.ClassInfo, "net.minecraft.world.level.ExplosionDamageCalculator": Internal.ClassInfo, "com.mojang.realmsclient.dto.ValueObject": Internal.ClassInfo, "java.util.EnumMap": Internal.ClassInfo, "net.minecraft.client.sounds.WeighedSoundEvents": Internal.ClassInfo, "java.lang.reflect.AnnotatedType": Internal.ClassInfo, "net.minecraft.world.level.block.StainedGlassBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2ObjectFunction": Internal.ClassInfo, "dev.latvian.mods.rhino.WrapFactory": Internal.ClassInfo, "net.minecraft.client.gui.navigation.FocusNavigationEvent": Internal.ClassInfo, "java.time.chrono.Chronology": Internal.ClassInfo, "java.awt.geom.RectangularShape": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$Action": Internal.ClassInfo, "dev.architectury.event.EventResult": Internal.ClassInfo, "net.minecraftforge.client.event.ViewportEvent$ComputeFogColor": Internal.ClassInfo, "net.minecraft.world.entity.npc.VillagerTrades$ItemListing": Internal.ClassInfo, "com.mojang.blaze3d.platform.InputConstants$Type": Internal.ClassInfo, "net.minecraft.world.item.armortrim.TrimPattern": Internal.ClassInfo, "net.minecraft.world.level.block.BigDripleafBlock": Internal.ClassInfo, "net.minecraft.world.level.block.ChorusPlantBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntCollection": Internal.ClassInfo, "net.minecraft.server.packs.resources.IoSupplier": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.properties.AddLakeProperties": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BlastFurnaceBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.BlobFoliagePlacer": Internal.ClassInfo, "net.minecraft.tags.TagKey": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyPressed$Pre": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntIterator": Internal.ClassInfo, "java.util.function.ToIntBiFunction": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$Key": Internal.ClassInfo, "dev.latvian.mods.rhino.util.wrap.TypeWrappers": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.AxolotlAttackablesSensor": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerDestroyItemEvent": Internal.ClassInfo, "com.mojang.serialization.DataResult": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.SurfaceRelativeThresholdFilter": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongConsumer": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.FileConfig": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity$AnimationStatus": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.CultistArmorItem": Internal.ClassInfo, "net.minecraftforge.client.event.EntityRenderersEvent$RegisterLayerDefinitions": Internal.ClassInfo, "io.netty.util.ByteProcessor$IndexOfProcessor": Internal.ClassInfo, "net.minecraft.network.chat.MessageSignature$Packed": Internal.ClassInfo, "net.minecraft.util.valueproviders.ConstantInt": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.HeightProviderType": Internal.ClassInfo, "net.minecraft.world.level.dimension.end.EndDragonFight$Data": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartTNT": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.RuleBasedBlockStateProvider": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer": Internal.ClassInfo, "com.mojang.brigadier.AmbiguityConsumer": Internal.ClassInfo, "net.minecraft.world.level.timers.TimerCallback": Internal.ClassInfo, "org.slf4j.Marker": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.StructurePoolElement": Internal.ClassInfo, "net.minecraft.client.color.item.ItemColor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.RuinedPortalStructure": Internal.ClassInfo, "java.util.concurrent.ScheduledFuture": Internal.ClassInfo, "org.joml.Matrix4x3d": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetChunkCacheCenterPacket": Internal.ClassInfo, "com.mojang.serialization.codecs.ListCodec": Internal.ClassInfo, "net.minecraft.world.level.block.BeaconBlock": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent$ClientCustomPayloadEvent": Internal.ClassInfo, "org.joml.Matrix4x3f": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.GenerateClientAssetsEventJS": Internal.ClassInfo, "net.minecraft.world.entity.player.Inventory": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.RecipeComponentValue": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractCandleBlock": Internal.ClassInfo, "net.minecraft.world.item.ChorusFruitItem": Internal.ClassInfo, "com.squoshi.irons_spells_js.util.ISSKJSUtils$DamageTypeHolder": Internal.ClassInfo, "net.minecraft.world.entity.player.Player$BedSleepingProblem": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleBidirectionalIterator": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsWorldOptions": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterClientReloadListenersEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.BendingTrunkPlacer": Internal.ClassInfo, "dev.latvian.mods.unit.UnitVariables": Internal.ClassInfo, "net.minecraft.world.DifficultyInstance": Internal.ClassInfo, "com.mojang.serialization.codecs.UnboundedMapCodec": Internal.ClassInfo, "net.minecraft.client.User": Internal.ClassInfo, "java.time.OffsetTime": Internal.ClassInfo, "software.bernie.geckolib.core.animation.RawAnimation": Internal.ClassInfo, "com.mojang.brigadier.suggestion.Suggestions": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.SimpleRandomFeatureConfiguration": Internal.ClassInfo, "java.nio.CharBuffer": Internal.ClassInfo, "top.theillusivec4.curios.api.type.capability.ICurio$SoundInfo": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryProperty": Internal.ClassInfo, "com.mojang.serialization.Codec$ResultFunction": Internal.ClassInfo, "com.mojang.blaze3d.shaders.Uniform": Internal.ClassInfo, "net.minecraft.world.item.enchantment.EnchantmentInstance": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.LootPoolEntryType": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRecipePacket$State": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.RandomState": Internal.ClassInfo, "com.squoshi.irons_spells_js.util.ISSKJSUtils$SpellHolder": Internal.ClassInfo, "net.minecraft.world.entity.animal.MushroomCow": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBlockDestructionPacket": Internal.ClassInfo, "net.minecraft.world.level.block.StairBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.HugeRedMushroomFeature": Internal.ClassInfo, "net.minecraft.world.item.enchantment.LootBonusEnchantment": Internal.ClassInfo, "net.minecraft.client.renderer.debug.LightSectionDebugRenderer": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Helmet": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$WriteMaskStateShard": Internal.ClassInfo, "net.minecraft.world.level.block.ChangeOverTimeBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.CherryTrunkPlacer": Internal.ClassInfo, "com.mojang.datafixers.util.Unit": Internal.ClassInfo, "it.unimi.dsi.fastutil.Hash": Internal.ClassInfo, "java.util.AbstractSet": Internal.ClassInfo, "net.minecraft.client.gui.components.toasts.Toast$Visibility": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientPacketListener": Internal.ClassInfo, "net.minecraft.util.valueproviders.ClampedInt": Internal.ClassInfo, "net.minecraft.world.level.block.CalibratedSculkSensorBlock": Internal.ClassInfo, "net.minecraft.world.level.block.SculkBlock": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.util.UpdateClient": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObjectCollection": Internal.ClassInfo, "net.minecraft.client.model.HumanoidModel$ArmPose": Internal.ClassInfo, "com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2DoubleFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ModifyRecipeCraftingGrid": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.AbstractMinecartContainer": Internal.ClassInfo, "com.probejs.jdoc.document.DocumentMethod": Internal.ClassInfo, "net.minecraftforge.client.event.RenderTooltipEvent$Color": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.EnchantmentBuilder$DamageBonusFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.Clear": Internal.ClassInfo, "io.redspace.ironsspellbooks.spells.NoneSpell": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ObjectFunction": Internal.ClassInfo, "dev.kosmx.playerAnim.api.layered.AnimationStack": Internal.ClassInfo, "com.mojang.authlib.minecraft.TelemetryPropertyContainer": Internal.ClassInfo, "net.minecraft.world.level.block.Fallable": Internal.ClassInfo, "journeymap.client.api.display.Context$UI": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.PotionBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Chestplate": Internal.ClassInfo, "net.minecraft.client.model.geom.ModelLayerLocation": Internal.ClassInfo, "dev.kosmx.playerAnim.impl.IUpperPartHelper": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.Attribute": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ArrowInfiniteEnchantment": Internal.ClassInfo, "dev.kosmx.playerAnim.core.util.Vec3d": Internal.ClassInfo, "java.nio.file.WatchService": Internal.ClassInfo, "dev.kosmx.playerAnim.core.util.Vec3f": Internal.ClassInfo, "net.minecraft.world.level.block.MudBlock": Internal.ClassInfo, "java.lang.constant.ClassDesc": Internal.ClassInfo, "net.minecraft.world.entity.animal.AbstractSchoolingFish": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.AnimationPointQueue": Internal.ClassInfo, "net.minecraft.world.level.block.HangingRootsBlock": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$OverlayStateShard": Internal.ClassInfo, "net.minecraft.world.level.block.EquipableCarvedPumpkinBlock": Internal.ClassInfo, "net.minecraftforge.fml.event.config.ModConfigEvent": Internal.ClassInfo, "net.minecraft.world.level.block.MultifaceSpreader$SpreadPredicate": Internal.ClassInfo, "java.nio.channels.GatheringByteChannel": Internal.ClassInfo, "java.util.jar.Manifest": Internal.ClassInfo, "net.minecraft.commands.synchronization.SingletonArgumentInfo$Template": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLevelChunkPacketData": Internal.ClassInfo, "io.netty.util.AttributeMap": Internal.ClassInfo, "com.mojang.authlib.minecraft.MinecraftProfileTexture$Type": Internal.ClassInfo, "io.netty.util.concurrent.ScheduledFuture": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.RandomBooleanFeatureConfiguration": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundContainerClickPacket": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.curios.LurkerRing": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.NumberComponent$IntRange": Internal.ClassInfo, "net.minecraft.core.Holder": Internal.ClassInfo, "org.apache.commons.lang3.tuple.Pair": Internal.ClassInfo, "net.minecraft.world.level.block.TorchflowerCropBlock": Internal.ClassInfo, "java.time.Duration": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiOverlayEvent": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundJigsawGeneratePacket": Internal.ClassInfo, "com.electronwill.nightconfig.core.UnmodifiableCommentedConfig$Entry": Internal.ClassInfo, "net.minecraft.core.HolderSet$ListBacked": Internal.ClassInfo, "java.time.ZoneOffset": Internal.ClassInfo, "net.minecraft.util.random.WeightedEntry": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$PlayerLoggedInEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$RangeChoice": Internal.ClassInfo, "net.minecraft.world.level.block.CakeBlock": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Version": Internal.ClassInfo, "net.minecraft.world.entity.monster.Ravager": Internal.ClassInfo, "com.mojang.serialization.MapCodec": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ShortFunction": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableStructureInfo$StructureInfo": Internal.ClassInfo, "org.apache.maven.repository.legacy.metadata.ArtifactMetadata": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BakedQuad": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCustomChatCompletionsPacket$Action": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemTransform": Internal.ClassInfo, "dev.latvian.mods.rhino.UniqueTag": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacer": Internal.ClassInfo, "net.minecraft.world.level.block.WallHangingSignBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2CharFunction": Internal.ClassInfo, "com.mojang.brigadier.arguments.DoubleArgumentType": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.Half": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntSpliterator": Internal.ClassInfo, "io.netty.util.concurrent.EventExecutor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.CaveSurface": Internal.ClassInfo, "io.netty.channel.ChannelOption": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormat$IndexType": Internal.ClassInfo, "net.minecraft.world.entity.EntityType": Internal.ClassInfo, "dev.latvian.mods.kubejs.command.CommandRegistryEventJS": Internal.ClassInfo, "java.util.function.DoubleFunction": Internal.ClassInfo, "net.minecraft.world.item.crafting.ArmorDyeRecipe": Internal.ClassInfo, "net.minecraft.advancements.Criterion": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLevelEventPacket": Internal.ClassInfo, "java.util.Locale$IsoCountryCode": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.GeodeConfiguration": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.special.KubeJSCraftingRecipe": Internal.ClassInfo, "net.minecraft.world.level.block.TripWireHookBlock": Internal.ClassInfo, "net.minecraft.client.searchtree.SearchTree": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.BlockKJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ShovelItemBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.SnowLayerBlock": Internal.ClassInfo, "net.minecraft.world.level.block.ChorusFlowerBlock": Internal.ClassInfo, "net.minecraft.client.renderer.blockentity.BlockEntityRendererProvider$Context": Internal.ClassInfo, "net.minecraftforge.server.permission.events.PermissionGatherEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.creativetab.CreativeTabIconSupplier": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction$Visitor": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.properties.AddOreProperties": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundKeepAlivePacket": Internal.ClassInfo, "java.lang.invoke.VarHandle$VarHandleDesc": Internal.ClassInfo, "net.minecraft.client.renderer.entity.layers.RenderLayer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CanyonCarverConfiguration": Internal.ClassInfo, "net.minecraft.world.level.chunk.DataLayer": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetEquipmentPacket": Internal.ClassInfo, "net.minecraft.world.entity.player.Abilities": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatCollection": Internal.ClassInfo, "net.minecraft.client.server.IntegratedServer": Internal.ClassInfo, "java.util.function.LongUnaryOperator": Internal.ClassInfo, "net.minecraft.world.level.block.SmallDripleafBlock": Internal.ClassInfo, "java.time.DayOfWeek": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLevelChunkPacketData$BlockEntityTagOutput": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.WrappedJS": Internal.ClassInfo, "com.mojang.brigadier.context.StringRange": Internal.ClassInfo, "net.minecraft.client.sounds.SoundEventListener": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.EnvironmentScanPlacement": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatConsumer": Internal.ClassInfo, "net.minecraft.world.level.block.FireBlock": Internal.ClassInfo, "java.util.ListIterator": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Donkey": Internal.ClassInfo, "io.netty.channel.ChannelId": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.events.SpellPreCastEvent": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.item.ISpellbook": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.data.ParticleKeyframeData": Internal.ClassInfo, "net.minecraft.client.gui.navigation.ScreenDirection": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCommandSuggestionsPacket": Internal.ClassInfo, "net.minecraft.client.resources.SkinManager": Internal.ClassInfo, "net.minecraft.world.item.HoneyBottleItem": Internal.ClassInfo, "net.minecraft.world.entity.animal.FlyingAnimal": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistryModifiable": Internal.ClassInfo, "com.mojang.realmsclient.gui.task.DataFetcher": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundMovePlayerPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseChunk": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.FancyTrunkPlacer": Internal.ClassInfo, "java.nio.file.FileSystem": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2CharFunction": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.SculkSensorPhase": Internal.ClassInfo, "mezz.jei.api.gui.builder.IRecipeSlotBuilder": Internal.ClassInfo, "java.text.AttributedCharacterIterator": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeManager": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.color.interop.BlockColorsExtended": Internal.ClassInfo, "java.io.ObjectInput": Internal.ClassInfo, "net.minecraftforge.common.ForgeSpawnEggItem": Internal.ClassInfo, "net.minecraft.world.level.block.BeaconBeamBlock": Internal.ClassInfo, "java.util.Spliterator": Internal.ClassInfo, "net.minecraft.world.level.block.FlowerPotBlock": Internal.ClassInfo, "net.minecraftforge.fml.InterModComms$IMCMessage": Internal.ClassInfo, "com.mojang.authlib.minecraft.report.ReportEvidence": Internal.ClassInfo, "net.minecraft.world.entity.monster.Strider": Internal.ClassInfo, "net.minecraft.client.resources.language.LanguageInfo": Internal.ClassInfo, "net.minecraft.client.renderer.debug.RaidDebugRenderer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.LegacySinglePoolElement": Internal.ClassInfo, "net.minecraft.world.entity.MobSpawnType": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeFluid": Internal.ClassInfo, "net.minecraftforge.event.entity.living.MobSpawnEvent": Internal.ClassInfo, "net.minecraft.world.damagesource.DamageType": Internal.ClassInfo, "java.util.function.DoubleUnaryOperator": Internal.ClassInfo, "net.minecraft.client.particle.TextureSheetParticle": Internal.ClassInfo, "java.util.Stack": Internal.ClassInfo, "net.minecraft.world.level.block.BasePressurePlateBlock": Internal.ClassInfo, "net.minecraftforge.client.event.RenderTooltipEvent$Pre": Internal.ClassInfo, "java.util.concurrent.ConcurrentMap": Internal.ClassInfo, "net.minecraft.world.item.enchantment.TridentImpalerEnchantment": Internal.ClassInfo, "net.minecraft.client.renderer.entity.LivingEntityRenderer": Internal.ClassInfo, "java.lang.Thread$UncaughtExceptionHandler": Internal.ClassInfo, "net.minecraftforge.event.CommandEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.CheckLivingEntitySpawnEventJS": Internal.ClassInfo, "com.squoshi.irons_spells_js.events.SpellPreCastEventJS": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLivingEvent$Post": Internal.ClassInfo, "net.minecraft.world.level.block.PipeBlock": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$ServerTickEvent": Internal.ClassInfo, "net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities": Internal.ClassInfo, "dev.latvian.mods.rhino.RhinoException": Internal.ClassInfo, "java.time.chrono.ChronoLocalDate": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.ChestLootEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundChatCommandPacket": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceOrTagArgument$Info$Template": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundAddEntityPacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2LongFunction": Internal.ClassInfo, "java.util.stream.IntStream$IntMapMultiConsumer": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.OutputItem": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.MinecraftRemapper": Internal.ClassInfo, "net.minecraft.world.entity.decoration.LeashFenceKnotEntity": Internal.ClassInfo, "net.minecraft.network.chat.ChatType$BoundNetwork": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntMap$FastEntrySet": Internal.ClassInfo, "java.util.Comparator": Internal.ClassInfo, "net.minecraft.commands.arguments.ScoreHolderArgument": Internal.ClassInfo, "java.lang.constant.MethodHandleDesc": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.TestClaymoreItem": Internal.ClassInfo, "net.minecraft.world.entity.boss.wither.WitherBoss": Internal.ClassInfo, "java.util.function.UnaryOperator": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainer": Internal.ClassInfo, "java.util.DoubleSummaryStatistics": Internal.ClassInfo, "net.minecraft.world.item.PickaxeItem": Internal.ClassInfo, "net.minecraft.client.Camera$NearPlane": Internal.ClassInfo, "net.minecraft.world.entity.animal.CatVariant": Internal.ClassInfo, "net.minecraft.stats.StatFormatter": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgePotion": Internal.ClassInfo, "net.minecraft.server.level.ChunkHolder$ChunkLoadingFailure": Internal.ClassInfo, "net.minecraft.world.level.block.WeatheringCopperFullBlock": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ArrowFireEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.SimpleBlockConfiguration": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldgenRandom$Algorithm": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceKeyArgument": Internal.ClassInfo, "java.net.InterfaceAddress": Internal.ClassInfo, "java.text.CharacterIterator": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.immediate.model.ModelPartData": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundBlockEntityTagQuery": Internal.ClassInfo, "java.security.PrivilegedExceptionAction": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry": Internal.ClassInfo, "net.minecraft.world.level.block.NoteBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.CoralMushroomFeature": Internal.ClassInfo, "com.squoshi.irons_spells_js.events.SpellOnCastEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.WouldSurvivePredicate": Internal.ClassInfo, "net.minecraftforge.network.HandshakeMessages$LoginIndexedMessage": Internal.ClassInfo, "org.embeddedt.embeddium.api.model.EmbeddiumBakedModelExtension": Internal.ClassInfo, "com.squoshi.irons_spells_js.util.ISpellModify": Internal.ClassInfo, "net.minecraft.world.level.block.PoweredRailBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerPacketListener": Internal.ClassInfo, "net.minecraft.nbt.StreamTagVisitor$ValueResult": Internal.ClassInfo, "net.minecraft.world.level.block.InfestedRotatedPillarBlock": Internal.ClassInfo, "net.minecraft.world.entity.MoverType": Internal.ClassInfo, "net.minecraft.client.GuiMessageTag$Icon": Internal.ClassInfo, "net.minecraftforge.fml.ModContainer": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ShortFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidWrapper": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ReferenceFunction": Internal.ClassInfo, "net.minecraft.world.item.DispensibleContainerItem": Internal.ClassInfo, "net.minecraft.client.gui.font.FontSet": Internal.ClassInfo, "net.minecraft.world.phys.shapes.DiscreteVoxelShape$IntFaceConsumer": Internal.ClassInfo, "java.nio.file.attribute.GroupPrincipal": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.RandomSpreadFoliagePlacer": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundChunksBiomesPacket": Internal.ClassInfo, "com.mojang.blaze3d.vertex.BufferBuilder$RenderedBuffer": Internal.ClassInfo, "java.util.RandomAccess": Internal.ClassInfo, "net.minecraft.world.inventory.ContainerListener": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.GameRulesKJS": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmithingTransformRecipe$Serializer": Internal.ClassInfo, "journeymap.client.api.event.forge.PopupMenuEvent$Layer": Internal.ClassInfo, "net.minecraft.client.gui.components.spectator.SpectatorGui": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.UpwardsBranchingTrunkPlacer": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.InputItem": Internal.ClassInfo, "io.netty.util.concurrent.Promise": Internal.ClassInfo, "net.minecraft.client.particle.SpriteSet": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongComparator": Internal.ClassInfo, "net.minecraft.world.level.block.ChiseledBookShelfBlock": Internal.ClassInfo, "net.minecraft.client.renderer.ItemModelShaper": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelStorageSource$LevelDirectory": Internal.ClassInfo, "net.minecraft.util.valueproviders.UniformFloat": Internal.ClassInfo, "java.io.File": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkEvent": Internal.ClassInfo, "net.minecraft.core.dispenser.DispenseItemBehavior": Internal.ClassInfo, "net.minecraft.world.level.block.WeepingVinesPlantBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundLockDifficultyPacket": Internal.ClassInfo, "net.minecraft.core.RegistryAccess$Frozen": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerActionPacket$Action": Internal.ClassInfo, "net.minecraft.client.gui.components.Renderable": Internal.ClassInfo, "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipComponent": Internal.ClassInfo, "java.time.format.DecimalStyle": Internal.ClassInfo, "net.minecraft.util.OptionEnum": Internal.ClassInfo, "net.minecraft.server.players.GameProfileCache": Internal.ClassInfo, "com.mojang.blaze3d.font.SheetGlyphInfo": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.OrderedCompoundTag": Internal.ClassInfo, "net.minecraft.world.entity.ambient.Bat": Internal.ClassInfo, "net.minecraft.network.chat.ChatTypeDecoration$Parameter": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$OutputStateShard": Internal.ClassInfo, "net.minecraft.server.network.ServerPlayerConnection": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ArrowDamageEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.CoralTreeFeature": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent$PacketDispatcher": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.EldritchManuscript": Internal.ClassInfo, "com.mojang.datafixers.util.Pair$Mu": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerInputPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.DripstoneClusterConfiguration": Internal.ClassInfo, "net.minecraftforge.client.settings.IKeyConflictContext": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeLivingEntity": Internal.ClassInfo, "net.minecraft.client.GuiMessageTag": Internal.ClassInfo, "com.mojang.authlib.minecraft.UserApiService$UserFlag": Internal.ClassInfo, "net.minecraft.world.level.block.BaseCoralPlantTypeBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2BooleanFunction": Internal.ClassInfo, "net.minecraft.client.HotbarManager": Internal.ClassInfo, "net.minecraft.client.renderer.debug.GameTestDebugRenderer": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.VillagerBabiesSensor": Internal.ClassInfo, "com.mojang.serialization.DataResult$Mu": Internal.ClassInfo, "net.minecraft.client.sounds.MusicManager": Internal.ClassInfo, "net.minecraft.world.level.block.RedStoneOreBlock": Internal.ClassInfo, "java.lang.Byte": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.LootBuilder": Internal.ClassInfo, "net.minecraft.world.level.GameRules$Key": Internal.ClassInfo, "dev.latvian.mods.kubejs.generator.DataJsonGenerator": Internal.ClassInfo, "net.minecraft.commands.Commands": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ReportEnvironment": Internal.ClassInfo, "net.minecraft.world.inventory.StonecutterMenu": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.LargeDripstoneFeature": Internal.ClassInfo, "net.minecraft.world.item.InkSacItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.PlayerSelector": Internal.ClassInfo, "net.minecraft.world.entity.projectile.AbstractHurtingProjectile": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingKnockBackEvent": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundDisconnectPacket": Internal.ClassInfo, "dev.latvian.mods.rhino.Symbol": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateAdvancementsPacket": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$MouseButton": Internal.ClassInfo, "io.netty.buffer.CompositeByteBuf": Internal.ClassInfo, "java.time.OffsetDateTime": Internal.ClassInfo, "com.electronwill.nightconfig.core.UnmodifiableConfig": Internal.ClassInfo, "net.minecraft.world.BossEvent": Internal.ClassInfo, "net.minecraft.world.entity.animal.sniffer.Sniffer$State": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.RandomSelectorFeature": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CarverConfiguration": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BasaltColumnsFeature": Internal.ClassInfo, "io.redspace.ironsspellbooks.particle.ShockwaveParticleOptions": Internal.ClassInfo, "net.minecraft.world.level.block.LiquidBlockContainer": Internal.ClassInfo, "com.mojang.brigadier.Command": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.viewport.ViewportProvider": Internal.ClassInfo, "com.electronwill.nightconfig.core.io.WritingMode": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BeeDebugRenderer$HiveInfo": Internal.ClassInfo, "net.minecraft.world.level.block.RedStoneWireBlock": Internal.ClassInfo, "java.util.HashMap": Internal.ClassInfo, "net.minecraft.world.item.enchantment.QuickChargeEnchantment": Internal.ClassInfo, "com.google.common.collect.Multimap": Internal.ClassInfo, "net.minecraft.client.gui.components.events.ContainerEventHandler": Internal.ClassInfo, "dev.latvian.mods.rhino.EvaluatorException": Internal.ClassInfo, "com.google.gson.JsonElement": Internal.ClassInfo, "net.minecraft.world.level.block.TallFlowerBlock": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ComparatorBlockEntity": Internal.ClassInfo, "net.minecraft.world.damagesource.DamageSource": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.PlayerKJS": Internal.ClassInfo, "mezz.jei.api.recipe.category.IRecipeCategory": Internal.ClassInfo, "dev.latvian.mods.kubejs.command.ArgumentTypeWrappers": Internal.ClassInfo, "com.probejs.jdoc.property.PropertyParam": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiEvent": Internal.ClassInfo, "net.minecraft.util.valueproviders.BiasedToBottomInt": Internal.ClassInfo, "net.minecraft.world.level.block.BellBlock": Internal.ClassInfo, "net.minecraftforge.registries.DataPackRegistryEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.DebugInfoEventJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemTooltipEventJS$StaticTooltipHandlerFromJS": Internal.ClassInfo, "com.mojang.authlib.UserType": Internal.ClassInfo, "net.minecraft.world.level.block.WallTorchBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$BreakSpeed": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundContainerClosePacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.AllOfPredicate": Internal.ClassInfo, "dev.latvian.mods.rhino.util.wrap.TypeWrapperFactory": Internal.ClassInfo, "net.minecraft.core.HolderLookup": Internal.ClassInfo, "dev.architectury.registry.registries.options.RegistrarOption": Internal.ClassInfo, "net.minecraft.nbt.NumericTag": Internal.ClassInfo, "net.minecraft.world.level.LevelSettings": Internal.ClassInfo, "net.minecraft.network.protocol.BundlerInfo$Provider": Internal.ClassInfo, "net.minecraft.server.level.ServerPlayerGameMode": Internal.ClassInfo, "net.minecraft.world.level.block.PlayerHeadBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetEntityDataPacket": Internal.ClassInfo, "com.llamalad7.mixinextras.injector.wrapoperation.Operation": Internal.ClassInfo, "net.minecraftforge.common.world.StructureSettingsBuilder$StructureSpawnOverrideBuilder": Internal.ClassInfo, "net.minecraft.commands.CommandFunction": Internal.ClassInfo, "net.minecraftforge.client.event.ClientPlayerNetworkEvent$Clone": Internal.ClassInfo, "net.minecraft.world.effect.MobEffect": Internal.ClassInfo, "java.nio.MappedByteBuffer": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelState": Internal.ClassInfo, "net.minecraft.client.gui.Font": Internal.ClassInfo, "net.minecraft.client.tutorial.TutorialStepInstance": Internal.ClassInfo, "net.minecraft.util.StringRepresentable": Internal.ClassInfo, "net.minecraft.world.item.ArmorStandItem": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.wrapper.ColorWrapper": Internal.ClassInfo, "net.minecraft.world.SimpleContainer": Internal.ClassInfo, "net.minecraftforge.client.extensions.common.IClientBlockExtensions": Internal.ClassInfo, "net.minecraft.server.level.WorldGenRegion": Internal.ClassInfo, "net.minecraftforge.event.village.VillagerTradesEvent": Internal.ClassInfo, "com.mojang.realmsclient.dto.ReflectionBasedSerialization": Internal.ClassInfo, "net.minecraft.tags.TagManager$LoadResult": Internal.ClassInfo, "net.minecraft.world.entity.Interaction": Internal.ClassInfo, "com.mojang.blaze3d.platform.WindowEventHandler": Internal.ClassInfo, "java.util.concurrent.Future": Internal.ClassInfo, "net.minecraft.world.entity.ai.control.JumpControl": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModLanguageProvider": Internal.ClassInfo, "java.lang.Thread": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SkullBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.Serializer": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLivingEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder$UseCallback": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.core.render.MinecraftAccessor": Internal.ClassInfo, "net.minecraft.world.entity.projectile.Projectile": Internal.ClassInfo, "net.minecraft.client.renderer.entity.EntityRenderDispatcher": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemOverride": Internal.ClassInfo, "dev.architectury.event.forge.EventHandlerImplCommon$LevelEventAttachment": Internal.ClassInfo, "net.minecraft.world.level.block.RodBlock": Internal.ClassInfo, "net.minecraft.world.level.block.CeilingHangingSignBlock": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$MouseScrollingEvent": Internal.ClassInfo, "net.minecraft.world.entity.ai.memory.MemoryModuleType": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.ScheduledEvents": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SculkShriekerBlockEntity": Internal.ClassInfo, "java.nio.charset.CharsetDecoder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.RotatedBlockProvider": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortIterable": Internal.ClassInfo, "net.minecraft.world.entity.monster.warden.AngerManagement": Internal.ClassInfo, "com.google.gson.LongSerializationPolicy": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEventListener$DeliveryMode": Internal.ClassInfo, "net.minecraft.CrashReport": Internal.ClassInfo, "java.util.random.RandomGenerator": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructurePieceAccessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.JsonIO": Internal.ClassInfo, "net.minecraft.world.item.SignApplicator": Internal.ClassInfo, "java.lang.invoke.MethodHandle": Internal.ClassInfo, "dev.latvian.mods.rhino.IdEnumerationIterator": Internal.ClassInfo, "net.minecraft.advancements.CriterionProgress": Internal.ClassInfo, "net.minecraft.client.resources.MobEffectTextureManager": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.ArcaneSalvageItem": Internal.ClassInfo, "java.time.zone.ZoneRules": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleIterator": Internal.ClassInfo, "net.minecraft.world.level.material.LavaFluid$Source": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ClientPlayerKJS": Internal.ClassInfo, "net.minecraft.server.players.UserBanListEntry": Internal.ClassInfo, "net.minecraft.world.item.SignItem": Internal.ClassInfo, "net.minecraft.util.ProgressListener": Internal.ClassInfo, "net.minecraftforge.eventbus.ListenerList": Internal.ClassInfo, "net.minecraft.world.inventory.ClickAction": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BeehiveBlockEntity$BeeReleaseStatus": Internal.ClassInfo, "net.minecraft.network.chat.SignableCommand": Internal.ClassInfo, "net.minecraftforge.common.world.BiomeSpecialEffectsBuilder": Internal.ClassInfo, "com.mojang.datafixers.DataFixer": Internal.ClassInfo, "net.minecraftforge.network.IContainerFactory": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarratedElementType": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.MutableToolTier": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelStorageSource$LevelCandidates": Internal.ClassInfo, "io.netty.channel.SimpleChannelInboundHandler": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.FurledMapItem": Internal.ClassInfo, "net.minecraftforge.client.ChunkRenderTypeSet": Internal.ClassInfo, "net.minecraft.network.chat.RemoteChatSession$Data": Internal.ClassInfo, "com.google.common.collect.ImmutableCollection": Internal.ClassInfo, "org.lwjgl.CLongBuffer": Internal.ClassInfo, "net.minecraft.world.item.crafting.CustomRecipe": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$Clamp": Internal.ClassInfo, "io.netty.channel.ChannelProgressiveFuture": Internal.ClassInfo, "net.minecraft.util.valueproviders.IntProvider": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonLandingPhase": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BrainDebugRenderer$PoiInfo": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ConduitBlockEntity": Internal.ClassInfo, "net.minecraft.client.resources.sounds.Sound$Type": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModFileInfo$LanguageSpec": Internal.ClassInfo, "java.lang.reflect.Method": Internal.ClassInfo, "net.minecraft.world.entity.projectile.SpectralArrow": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.AnimationPoint": Internal.ClassInfo, "com.mojang.serialization.Decoder$Terminal": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ReferenceMap": Internal.ClassInfo, "java.util.ImmutableCollections$SetN": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ingredientaction.CustomIngredientActionCallback": Internal.ClassInfo, "java.util.Locale$LanguageRange": Internal.ClassInfo, "org.apache.maven.artifact.versioning.ArtifactVersion": Internal.ClassInfo, "com.mojang.brigadier.arguments.ArgumentType": Internal.ClassInfo, "net.minecraftforge.common.capabilities.Capability": Internal.ClassInfo, "net.minecraft.world.item.ItemCooldowns": Internal.ClassInfo, "net.minecraft.world.item.crafting.StonecutterRecipe": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.data.DataPackEventJS": Internal.ClassInfo, "cpw.mods.jarhandling.SecureJar": Internal.ClassInfo, "net.minecraft.world.entity.monster.piglin.PiglinBrute": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$BakeCallback": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.events.SpellOnCastEvent": Internal.ClassInfo, "dev.latvian.mods.rhino.Callable": Internal.ClassInfo, "net.minecraft.world.level.Level": Internal.ClassInfo, "net.minecraft.world.level.block.LanternBlock": Internal.ClassInfo, "net.minecraft.world.scores.Objective": Internal.ClassInfo, "net.minecraft.world.item.Tier": Internal.ClassInfo, "net.minecraft.world.level.block.SporeBlossomBlock": Internal.ClassInfo, "cpw.mods.jarhandling.SecureJar$Provider": Internal.ClassInfo, "net.minecraft.client.renderer.PostPass": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationController$SoundKeyframeHandler": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundTagQueryPacket": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Init": Internal.ClassInfo, "dev.latvian.mods.kubejs.command.ArgumentTypeWrapper": Internal.ClassInfo, "net.minecraft.world.item.enchantment.BindingCurseEnchantment": Internal.ClassInfo, "net.minecraft.world.phys.HitResult$Type": Internal.ClassInfo, "net.minecraft.network.syncher.SynchedEntityData$DataValue": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.RepeatingPlacement": Internal.ClassInfo, "net.minecraft.world.entity.Display$BlockDisplay": Internal.ClassInfo, "dev.latvian.mods.kubejs.platform.forge.IngredientForgeHelper": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetBorderLerpSizePacket": Internal.ClassInfo, "net.minecraftforge.common.capabilities.ICapabilityProviderImpl": Internal.ClassInfo, "com.google.common.collect.ImmutableList": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.JavaWrapper": Internal.ClassInfo, "java.nio.charset.CodingErrorAction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.UniformHeight": Internal.ClassInfo, "net.minecraft.world.entity.PowerableMob": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongBidirectionalIterator": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.CreateWorldScreen": Internal.ClassInfo, "net.minecraft.client.model.geom.ModelPart$Cube": Internal.ClassInfo, "net.minecraft.server.packs.resources.ResourceManagerReloadListener": Internal.ClassInfo, "java.nio.DoubleBuffer": Internal.ClassInfo, "java.text.DecimalFormat": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelResourceLocation": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.featuresize.TwoLayersFeatureSize": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.ConfiguredFeature": Internal.ClassInfo, "dev.latvian.mods.rhino.Function": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.JigsawReplacementProcessor": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceArgument$Info": Internal.ClassInfo, "net.minecraft.world.level.block.SpongeBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.Parrot": Internal.ClassInfo, "com.mojang.brigadier.ParseResults": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.item.weapons.ExtendedSwordItem": Internal.ClassInfo, "net.minecraft.server.MinecraftServer$ReloadableResources": Internal.ClassInfo, "net.minecraft.world.entity.animal.Salmon": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.GlowstoneFeature": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.SimpleMappingRecipeComponent": Internal.ClassInfo, "net.minecraft.server.packs.repository.RepositorySource": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeSchema": Internal.ClassInfo, "com.mojang.authlib.GameProfileRepository": Internal.ClassInfo, "java.nio.channels.FileChannel$MapMode": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModInfo$DependencySide": Internal.ClassInfo, "net.minecraftforge.event.level.LevelEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap": Internal.ClassInfo, "net.minecraft.world.item.ThrowablePotionItem": Internal.ClassInfo, "com.probejs.jdoc.property.PropertyValue": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$Row": Internal.ClassInfo, "net.minecraft.util.random.WeightedEntry$Wrapper": Internal.ClassInfo, "com.google.gson.ExclusionStrategy": Internal.ClassInfo, "com.mojang.brigadier.tree.RootCommandNode": Internal.ClassInfo, "net.minecraft.world.damagesource.DamageScaling": Internal.ClassInfo, "java.text.NumberFormat$Style": Internal.ClassInfo, "net.minecraft.world.level.block.WaterlilyBlock": Internal.ClassInfo, "net.minecraft.world.level.material.FogType": Internal.ClassInfo, "net.minecraft.world.item.BottleItem": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeType$1": Internal.ClassInfo, "dev.latvian.mods.rhino.Scriptable": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.GenericLootEventJS": Internal.ClassInfo, "net.minecraftforge.client.event.ContainerScreenEvent": Internal.ClassInfo, "com.mojang.serialization.MapDecoder": Internal.ClassInfo, "java.lang.Exception": Internal.ClassInfo, "net.minecraftforge.eventbus.api.IGenericEvent": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarrationThunk": Internal.ClassInfo, "com.google.gson.JsonArray": Internal.ClassInfo, "net.minecraft.world.level.levelgen.flat.FlatLayerInfo": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeAdvancementBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.DeadBushBlock": Internal.ClassInfo, "net.minecraft.world.level.block.GravelBlock": Internal.ClassInfo, "io.netty.util.concurrent.ProgressivePromise": Internal.ClassInfo, "net.minecraft.world.MenuProvider": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShapedRecipe": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.featuresize.FeatureSizeType": Internal.ClassInfo, "java.lang.reflect.AnnotatedElement": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootDataType": Internal.ClassInfo, "com.google.common.cache.CacheStats": Internal.ClassInfo, "net.minecraft.world.level.block.CoralWallFanBlock": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Info": Internal.ClassInfo, "com.mojang.authlib.minecraft.report.ReportChatMessage": Internal.ClassInfo, "net.minecraft.world.level.block.BannerBlock": Internal.ClassInfo, "java.util.concurrent.Callable": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.predicate.BlockEntityPredicate": Internal.ClassInfo, "net.minecraft.world.level.block.CartographyTableBlock": Internal.ClassInfo, "net.minecraft.world.level.block.FenceBlock": Internal.ClassInfo, "java.util.ArrayList": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShapelessRecipe$Serializer": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootParams$DynamicDrop": Internal.ClassInfo, "com.mojang.blaze3d.audio.SoundBuffer": Internal.ClassInfo, "java.lang.module.ResolvedModule": Internal.ClassInfo, "net.minecraft.core.Rotations": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntIterable": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.InputReplacementTransformer$Replacement": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidBlockBuilder": Internal.ClassInfo, "com.mojang.authlib.properties.Property": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.BlockStateComponent": Internal.ClassInfo, "net.minecraft.client.gui.spectator.SpectatorMenuListener": Internal.ClassInfo, "net.minecraft.world.ticks.TickContainerAccess": Internal.ClassInfo, "net.minecraft.world.entity.decoration.Painting": Internal.ClassInfo, "net.minecraftforge.common.data.ExistingFileHelper$IResourceType": Internal.ClassInfo, "net.minecraftforge.common.util.BrainBuilder": Internal.ClassInfo, "dev.latvian.mods.rhino.GeneratedClassLoader": Internal.ClassInfo, "net.minecraft.world.level.NoiseColumn": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.TarnishedCrownArmorItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2ReferenceFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.ReplaceBlobsFeature": Internal.ClassInfo, "net.minecraft.world.level.ChunkPos": Internal.ClassInfo, "net.minecraft.world.level.block.SkullBlock$Type": Internal.ClassInfo, "net.minecraft.world.level.block.PotatoBlock": Internal.ClassInfo, "net.minecraft.client.searchtree.SearchRegistry": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntMap": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction$SimpleFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.PosAlwaysTrueTest": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2ByteFunction": Internal.ClassInfo, "net.minecraft.world.entity.monster.CrossbowAttackMob": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageLink": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.PaintEventJS": Internal.ClassInfo, "net.minecraft.client.particle.ParticleEngine": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexSorting$DistanceFunction": Internal.ClassInfo, "net.minecraft.world.level.block.SpawnerBlock": Internal.ClassInfo, "com.mojang.datafixers.kinds.Kind1": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingChangeTargetEvent$ILivingTargetType": Internal.ClassInfo, "net.minecraft.world.entity.LivingEntity": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.AbstractSpellWrapper": Internal.ClassInfo, "net.minecraft.world.level.block.entity.HangingSignBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.biome.AmbientAdditionsSettings": Internal.ClassInfo, "net.minecraft.world.item.SaddleItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundExplodePacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.ListPoolElement": Internal.ClassInfo, "net.minecraft.commands.synchronization.brigadier.IntegerArgumentInfo": Internal.ClassInfo, "net.minecraft.world.item.TippedArrowItem": Internal.ClassInfo, "net.minecraft.network.FriendlyByteBuf$Writer": Internal.ClassInfo, "net.minecraft.client.gui.components.CycleButton$ValueListSupplier": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonStrafePlayerPhase": Internal.ClassInfo, "io.netty.channel.ChannelPromise": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.AfterRecipesLoadedEventJS": Internal.ClassInfo, "net.minecraftforge.fml.config.IConfigEvent$ConfigConfig": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModInfo$Ordering": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.AlternativesEntry$Builder": Internal.ClassInfo, "java.lang.invoke.MethodHandleInfo": Internal.ClassInfo, "net.minecraft.client.renderer.LightTexture": Internal.ClassInfo, "java.text.DateFormat": Internal.ClassInfo, "net.minecraft.world.level.storage.PrimaryLevelData$SpecialWorldProperty": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Opens": Internal.ClassInfo, "org.apache.maven.repository.Proxy": Internal.ClassInfo, "net.minecraft.advancements.RequirementsStrategy": Internal.ClassInfo, "net.minecraft.world.item.crafting.CraftingBookCategory": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator": Internal.ClassInfo, "net.minecraftforge.client.event.ContainerScreenEvent$Render$Foreground": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BarrelBlockEntity": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmeltingRecipe": Internal.ClassInfo, "net.minecraft.world.phys.BlockHitResult": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.MinecraftClientKJS": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntBidirectionalIterator": Internal.ClassInfo, "net.minecraftforge.common.util.MutableHashedLinkedMap$IdentityStrategy": Internal.ClassInfo, "net.minecraft.world.entity.ai.gossip.GossipContainer": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceOrTagKeyArgument$Result": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntListIterator": Internal.ClassInfo, "io.netty.buffer.PoolChunkMetric": Internal.ClassInfo, "java.time.chrono.IsoEra": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.LivingEntityKJS": Internal.ClassInfo, "software.bernie.geckolib.core.animatable.GeoAnimatable": Internal.ClassInfo, "com.probejs.features.plugin.DocGenerationEventJS": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.PlaguedArmorItem": Internal.ClassInfo, "java.util.regex.Pattern": Internal.ClassInfo, "net.minecraft.world.level.StructureManager": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRemoveMobEffectPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.special.ShapedKubeJSRecipe": Internal.ClassInfo, "java.awt.Rectangle": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.ScheduledEvents$Callback": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeKeyMapping": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.RecipeComponent": Internal.ClassInfo, "net.minecraft.world.entity.Display$BillboardConstraints": Internal.ClassInfo, "mezz.jei.api.gui.widgets.ISlottedRecipeWidget": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BrainDebugRenderer$BrainDump": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.IRecipeSlotDrawable": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.BlockPredicateType": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ChatReportBuilder$ChatReport": Internal.ClassInfo, "net.minecraftforge.common.world.BiomeModifier$Phase": Internal.ClassInfo, "me.flashyreese.mods.sodiumextra.mixin.gui.MinecraftClientAccessor": Internal.ClassInfo, "net.minecraft.client.resources.SkinManager$SkinTextureCallback": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.HeightmapPlacement": Internal.ClassInfo, "net.minecraft.world.level.material.Fluid": Internal.ClassInfo, "java.util.LongSummaryStatistics": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.PlatformWrapper": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.color.SimpleColor": Internal.ClassInfo, "java.awt.geom.Line2D": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedBucketItemExtension": Internal.ClassInfo, "net.minecraftforge.event.AnvilUpdateEvent": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryProperty$GameMode": Internal.ClassInfo, "net.minecraft.network.chat.OutgoingChatMessage": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundClearTitlesPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.TagMatchTest": Internal.ClassInfo, "net.minecraft.world.entity.Targeting": Internal.ClassInfo, "net.minecraft.resources.ResourceKey": Internal.ClassInfo, "net.minecraft.world.item.crafting.Recipe": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.LootTablesKJS": Internal.ClassInfo, "com.mojang.serialization.Keyable": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundInteractPacket$Handler": Internal.ClassInfo, "java.io.InputStream": Internal.ClassInfo, "net.minecraft.world.ticks.ScheduledTick": Internal.ClassInfo, "net.minecraft.world.level.LevelHeightAccessor": Internal.ClassInfo, "net.minecraft.world.level.block.FenceGateBlock": Internal.ClassInfo, "net.minecraft.world.phys.AABB": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventExit": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectMap": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerInfoUpdatePacket$Entry": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSwingPacket": Internal.ClassInfo, "net.minecraft.world.entity.animal.goat.Goat": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.LavaSubmergedBlockProcessor": Internal.ClassInfo, "java.util.function.DoubleConsumer": Internal.ClassInfo, "net.minecraft.world.item.GameMasterBlockItem": Internal.ClassInfo, "java.util.Map": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.ConcentricRingsStructurePlacement": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.ColumnFeatureConfiguration": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.BuilderBase": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.UniqueItem": Internal.ClassInfo, "net.minecraft.client.renderer.entity.EntityRenderer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.PosRuleTest": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.ReplaceBlockFeature": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBaseRailBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.frog.Frog": Internal.ClassInfo, "net.minecraftforge.common.SoundAction": Internal.ClassInfo, "net.minecraft.world.inventory.RecipeBookType": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerActionPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.AttachedToLeavesDecorator": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedGameEventExtension": Internal.ClassInfo, "net.minecraft.world.level.block.ShulkerBoxBlock": Internal.ClassInfo, "java.util.stream.Stream": Internal.ClassInfo, "net.minecraft.world.entity.Marker": Internal.ClassInfo, "net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner": Internal.ClassInfo, "java.lang.ClassLoader": Internal.ClassInfo, "software.bernie.geckolib.core.object.DataTicket": Internal.ClassInfo, "com.blamejared.controlling.mixin.AccessScreen": Internal.ClassInfo, "net.minecraft.world.level.block.MangroveLeavesBlock": Internal.ClassInfo, "com.mojang.datafixers.util.Function8": Internal.ClassInfo, "net.minecraft.commands.CommandSourceStack": Internal.ClassInfo, "com.mojang.datafixers.util.Function9": Internal.ClassInfo, "com.mojang.datafixers.util.Function4": Internal.ClassInfo, "com.mojang.datafixers.util.Function5": Internal.ClassInfo, "com.mojang.datafixers.util.Function6": Internal.ClassInfo, "dev.latvian.mods.kubejs.platform.IngredientPlatformHelper": Internal.ClassInfo, "com.mojang.datafixers.util.Function7": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectFunction": Internal.ClassInfo, "com.mojang.datafixers.util.Function3": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelData": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ComponentValueMap": Internal.ClassInfo, "org.lwjgl.system.NativeResource": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.MetricSampler": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay$CachedLine": Internal.ClassInfo, "org.embeddedt.embeddium.render.matrix_stack.CachingPoseStack": Internal.ClassInfo, "net.minecraft.world.level.levelgen.Aquifer$FluidPicker": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureSet$StructureSelectionEntry": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetDisplayObjectivePacket": Internal.ClassInfo, "net.minecraft.world.level.block.IceBlock": Internal.ClassInfo, "net.minecraft.world.level.block.TntBlock": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$Type": Internal.ClassInfo, "net.minecraft.world.inventory.ClickType": Internal.ClassInfo, "com.mojang.brigadier.context.CommandContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.RandomizedIntStateProvider": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.CappedProcessor": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService": Internal.ClassInfo, "net.minecraft.commands.arguments.ScoreHolderArgument$Info$Template": Internal.ClassInfo, "net.minecraft.client.resources.TextureAtlasHolder": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationInfo": Internal.ClassInfo, "com.mojang.serialization.Lifecycle": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.RayTraceResultJS": Internal.ClassInfo, "net.minecraftforge.client.event.ModelEvent$RegisterAdditional": Internal.ClassInfo, "net.minecraft.world.level.block.DoorBlock": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BrewingStandBlockEntity": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.ShapedBlockBuilder": Internal.ClassInfo, "net.minecraft.world.entity.HasCustomInventoryScreen": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ObjectMap": Internal.ClassInfo, "com.probejs.jdoc.ISerde": Internal.ClassInfo, "java.security.ProtectionDomain": Internal.ClassInfo, "java.nio.channels.WritableByteChannel": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingDropsEvent": Internal.ClassInfo, "net.minecraft.client.gui.font.glyphs.BakedGlyph$Effect": Internal.ClassInfo, "net.minecraft.world.item.EnderEyeItem": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.vertex.buffer.ExtendedBufferBuilder": Internal.ClassInfo, "io.netty.buffer.ByteBufAllocatorMetricProvider": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleCollection": Internal.ClassInfo, "java.nio.FloatBuffer": Internal.ClassInfo, "net.minecraft.world.level.block.entity.StructureBlockEntity$UpdateType": Internal.ClassInfo, "net.minecraft.world.entity.schedule.Activity": Internal.ClassInfo, "io.netty.util.AbstractConstant": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2DoubleFunction": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerCombatEnterPacket": Internal.ClassInfo, "net.minecraftforge.client.IArmPoseTransformer": Internal.ClassInfo, "com.mojang.datafixers.util.Either$Mu": Internal.ClassInfo, "dev.latvian.mods.kubejs.platform.forge.ingredient.KubeJSIngredient": Internal.ClassInfo, "org.apache.maven.artifact.Artifact": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.BlockLootEventJS": Internal.ClassInfo, "net.minecraft.world.level.block.entity.HopperBlockEntity": Internal.ClassInfo, "net.minecraft.world.entity.raid.Raid": Internal.ClassInfo, "com.probejs.jdoc.java.ConstructorInfo": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ByteFunction": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeSupplier": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootContext$EntityTarget": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$StartTracking": Internal.ClassInfo, "java.util.concurrent.ConcurrentHashMap": Internal.ClassInfo, "net.minecraft.util.profiling.ResultField": Internal.ClassInfo, "net.minecraft.world.entity.animal.Cow": Internal.ClassInfo, "net.minecraftforge.client.settings.KeyModifier": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.creativetab.CreativeTabEvent": Internal.ClassInfo, "net.minecraft.world.inventory.Slot": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.Blender": Internal.ClassInfo, "net.minecraft.util.valueproviders.FloatProviderType": Internal.ClassInfo, "net.minecraftforge.client.model.geometry.BlockGeometryBakingContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.synth.BlendedNoise": Internal.ClassInfo, "net.minecraft.world.entity.animal.Cod": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.BoundingBox": Internal.ClassInfo, "com.mojang.authlib.AuthenticationService": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundRecipeBookChangeSettingsPacket": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationUiState$SelectedGameMode": Internal.ClassInfo, "net.minecraft.world.entity.ai.gossip.GossipType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.BelowZeroRetrogen": Internal.ClassInfo, "java.time.chrono.ChronoPeriod": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.SoundKeyframeEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ObjectMap$Entry": Internal.ClassInfo, "com.mojang.blaze3d.vertex.BufferBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.KelpFeature": Internal.ClassInfo, "java.util.concurrent.CompletableFuture": Internal.ClassInfo, "net.minecraftforge.common.crafting.AbstractIngredient": Internal.ClassInfo, "net.minecraft.world.item.PotionItem": Internal.ClassInfo, "javax.crypto.Cipher": Internal.ClassInfo, "com.mojang.blaze3d.platform.IconSet": Internal.ClassInfo, "java.util.PrimitiveIterator$OfDouble": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.VeryBiasedToBottomHeight": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.FillLayerFeature": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundServerDataPacket": Internal.ClassInfo, "net.minecraft.world.entity.projectile.EyeOfEnder": Internal.ClassInfo, "java.util.function.IntSupplier": Internal.ClassInfo, "net.minecraft.world.level.PathNavigationRegion": Internal.ClassInfo, "org.slf4j.Logger": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateTagsPacket": Internal.ClassInfo, "net.minecraft.world.item.crafting.RecipeSerializer": Internal.ClassInfo, "top.theillusivec4.curios.api.event.CurioChangeEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldgenRandom": Internal.ClassInfo, "net.minecraftforge.entity.PartEntity": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.response.Response": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterColorHandlersEvent$Item": Internal.ClassInfo, "net.minecraft.advancements.AdvancementRewards$Builder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.featuresize.FeatureSize": Internal.ClassInfo, "net.minecraft.world.level.block.AnvilBlock": Internal.ClassInfo, "com.google.common.collect.ImmutableMap$Builder": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectListIterator": Internal.ClassInfo, "net.minecraft.world.entity.PlayerRideable": Internal.ClassInfo, "net.minecraft.world.item.ItemStack$TooltipPart": Internal.ClassInfo, "com.mojang.authlib.minecraft.MinecraftProfileTexture": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarratableEntry$NarrationPriority": Internal.ClassInfo, "software.bernie.geckolib.core.object.PlayState": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.attribute.IMagicAttribute": Internal.ClassInfo, "net.minecraft.world.level.block.EndGatewayBlock": Internal.ClassInfo, "net.minecraft.server.Services": Internal.ClassInfo, "com.mojang.blaze3d.platform.InputConstants$Key": Internal.ClassInfo, "net.minecraft.client.renderer.MultiBufferSource$BufferSource": Internal.ClassInfo, "net.minecraft.world.level.block.CactusBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCustomChatCompletionsPacket": Internal.ClassInfo, "net.minecraft.commands.arguments.ArgumentSignatures$Entry": Internal.ClassInfo, "net.minecraft.server.packs.PackType": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.PainterObjectStorage": Internal.ClassInfo, "net.minecraft.server.MinecraftServer": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseDragged": Internal.ClassInfo, "java.util.regex.Matcher": Internal.ClassInfo, "java.text.FieldPosition": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.WithAttachedData": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.StructurePoolElementType": Internal.ClassInfo, "net.minecraft.world.level.block.TallGrassBlock": Internal.ClassInfo, "dev.kosmx.playerAnim.impl.IMutableModel": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.EnchantmentBuilder$PostFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.PositionalRandomFactory": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.BlockColumnConfiguration": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.AppendLoot": Internal.ClassInfo, "net.minecraft.client.renderer.RenderType$CompositeRenderType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.LinearPosTest": Internal.ClassInfo, "net.minecraft.client.renderer.LevelRenderer": Internal.ClassInfo, "com.mojang.datafixers.types.Type$TypeError": Internal.ClassInfo, "java.io.Reader": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$Output": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.ICastData": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleListIterator": Internal.ClassInfo, "java.security.PrivateKey": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent$Context": Internal.ClassInfo, "net.minecraftforge.fml.config.ModConfig": Internal.ClassInfo, "net.minecraft.client.renderer.entity.EntityRendererProvider$Context": Internal.ClassInfo, "net.minecraft.network.protocol.status.ServerStatus$Version": Internal.ClassInfo, "net.minecraft.commands.arguments.TimeArgument": Internal.ClassInfo, "net.minecraftforge.registries.RegisterEvent": Internal.ClassInfo, "net.minecraftforge.fml.loading.progress.Message": Internal.ClassInfo, "net.minecraft.commands.synchronization.brigadier.FloatArgumentInfo$Template": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.ZombieHorse": Internal.ClassInfo, "net.minecraft.world.entity.projectile.EvokerFangs": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$OffsetType": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ChestBlockEntity": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBlockChangedAckPacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.Hash$Strategy": Internal.ClassInfo, "net.minecraftforge.server.command.EnumArgument$Info$Template": Internal.ClassInfo, "java.nio.file.spi.FileSystemProvider": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventHandlerContainer": Internal.ClassInfo, "journeymap.client.api.event.forge.PopupMenuEvent$FullscreenPopupMenuEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.ItemWrapper": Internal.ClassInfo, "net.minecraft.server.ServerScoreboard": Internal.ClassInfo, "net.minecraft.world.level.GameRules$Value": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.LayerConfiguration": Internal.ClassInfo, "net.minecraft.world.entity.ReputationEventHandler": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2LongFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.StructurePlacement": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.OceanMonumentStructure": Internal.ClassInfo, "java.lang.Number": Internal.ClassInfo, "net.minecraft.client.resources.sounds.Sound": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.NativeImageAccessor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundClientCommandPacket$Action": Internal.ClassInfo, "java.util.zip.ZipConstants": Internal.ClassInfo, "net.minecraft.world.level.block.CarrotBlock": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModFileInfo": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.util.Utils": Internal.ClassInfo, "io.redspace.ironsspellbooks.block.alchemist_cauldron.AlchemistCauldronRecipe": Internal.ClassInfo, "net.minecraftforge.event.entity.SpawnPlacementRegisterEvent$Operation": Internal.ClassInfo, "net.minecraft.network.chat.Component": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2ReferenceFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.TagKeyComponent": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.VariantBlockStateGenerator$Variant": Internal.ClassInfo, "dev.latvian.mods.kubejs.generator.AssetJsonGenerator": Internal.ClassInfo, "javax.sound.sampled.AudioFormat$Encoding": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$LeftClickEmpty": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.LevelKJS": Internal.ClassInfo, "java.time.chrono.ChronoZonedDateTime": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.BuriedTreasureStructure": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeSpecialEffects$GrassColorModifier": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityAttributeModificationEvent": Internal.ClassInfo, "com.mojang.brigadier.exceptions.CommandSyntaxException": Internal.ClassInfo, "net.minecraft.world.entity.FlyingMob": Internal.ClassInfo, "net.minecraft.util.valueproviders.SampledFloat": Internal.ClassInfo, "com.mojang.brigadier.context.SuggestionContext": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServer$WorldType": Internal.ClassInfo, "com.squoshi.irons_spells_js.events.EntitySpellPreCastEventJS": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.SecondaryPoiSensor": Internal.ClassInfo, "net.minecraft.world.level.block.DragonEggBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.PlacementFilter": Internal.ClassInfo, "net.minecraft.world.damagesource.DamageEffects": Internal.ClassInfo, "net.minecraft.client.OptionInstance$CycleableValueSet$ValueSetter": Internal.ClassInfo, "com.mojang.serialization.OptionalDynamic": Internal.ClassInfo, "net.minecraft.world.level.GameRules$IntegerValue": Internal.ClassInfo, "java.math.RoundingMode": Internal.ClassInfo, "java.awt.Shape": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.DarkOakTrunkPlacer": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.RecipeKey": Internal.ClassInfo, "net.minecraft.util.RandomSource": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.MonsterRoomFeature": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.AndRecipeComponent": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeSpecialEffects$Builder": Internal.ClassInfo, "com.mojang.blaze3d.shaders.Effect": Internal.ClassInfo, "net.minecraft.world.inventory.CraftingContainer": Internal.ClassInfo, "org.lwjgl.system.CustomBuffer": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.AbuseReportSender": Internal.ClassInfo, "net.minecraftforge.network.ServerStatusPing$ChannelData": Internal.ClassInfo, "com.mojang.authlib.UserAuthentication": Internal.ClassInfo, "net.minecraftforge.common.ForgeMod$3": Internal.ClassInfo, "net.minecraftforge.common.ForgeMod$4": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.PumpkinArmorItem": Internal.ClassInfo, "net.minecraftforge.common.ForgeMod$1": Internal.ClassInfo, "net.minecraftforge.common.ForgeMod$2": Internal.ClassInfo, "org.embeddedt.embeddium.render.entity.ModelPartExtended": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$TextureStateShard": Internal.ClassInfo, "net.minecraft.world.inventory.GrindstoneMenu": Internal.ClassInfo, "net.minecraftforge.client.extensions.common.IClientFluidTypeExtensions": Internal.ClassInfo, "software.bernie.geckolib.core.animatable.model.CoreGeoBone": Internal.ClassInfo, "com.google.common.collect.ForwardingObject": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.GluttonyEffect": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.world.ReadableContainerExtended": Internal.ClassInfo, "net.minecraft.world.inventory.MenuType$MenuSupplier": Internal.ClassInfo, "net.minecraft.core.cauldron.CauldronInteraction": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$LeftClickBlock$Action": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.FenceBlockBuilder": Internal.ClassInfo, "net.minecraft.network.chat.ClickEvent$Action": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.chunk.map.ChunkTracker": Internal.ClassInfo, "com.google.common.reflect.Parameter": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.StringComponent$1": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelSummary": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.functions.CopyNameFunction$NameSource": Internal.ClassInfo, "java.util.Iterator": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLightUpdatePacketData": Internal.ClassInfo, "net.minecraft.world.inventory.ContainerSynchronizer": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemClickedEventJS": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.LoggedChatEvent$Type": Internal.ClassInfo, "net.minecraft.world.effect.MobEffectCategory": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetObjectivePacket": Internal.ClassInfo, "mezz.jei.api.gui.placement.IPlaceable": Internal.ClassInfo, "net.minecraft.world.entity.projectile.AbstractArrow": Internal.ClassInfo, "net.minecraft.world.inventory.SmokerMenu": Internal.ClassInfo, "net.minecraft.util.valueproviders.ClampedNormalFloat": Internal.ClassInfo, "io.netty.buffer.PoolChunkListMetric": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.HoglinSpecificSensor": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2ObjectFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.screen.PaintScreenEventJS": Internal.ClassInfo, "mezz.jei.api.ingredients.ITypedIngredient": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemOverrides$BakedOverride": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.ReputationEventType": Internal.ClassInfo, "net.minecraft.world.item.FireworkRocketItem": Internal.ClassInfo, "net.minecraft.world.level.block.LightningRodBlock": Internal.ClassInfo, "java.util.function.IntUnaryOperator": Internal.ClassInfo, "io.netty.channel.ChannelInboundHandlerAdapter": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.color.interop.ItemColorsExtended": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeSchemaType": Internal.ClassInfo, "net.minecraftforge.common.util.NonNullSupplier": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexBuffer": Internal.ClassInfo, "com.electronwill.nightconfig.core.Config$Entry": Internal.ClassInfo, "java.lang.Integer": Internal.ClassInfo, "net.minecraft.client.searchtree.SearchRegistry$TreeBuilderSupplier": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.IngredientKJS": Internal.ClassInfo, "com.mojang.realmsclient.gui.RealmsNewsManager": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ByteFunction": Internal.ClassInfo, "java.util.Vector": Internal.ClassInfo, "io.redspace.ironsspellbooks.entity.mobs.goals.GustDefenseGoal": Internal.ClassInfo, "io.redspace.ironsspellbooks.util.ParticleHelper": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.Target": Internal.ClassInfo, "org.joml.Vector3i": Internal.ClassInfo, "org.joml.Vector3f": Internal.ClassInfo, "net.minecraft.world.level.block.entity.DaylightDetectorBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.NetherForestVegetationFeature": Internal.ClassInfo, "org.joml.Vector3d": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2IntFunction": Internal.ClassInfo, "com.squoshi.irons_spells_js.events.SpellSelectionEventJS": Internal.ClassInfo, "net.minecraft.world.level.block.TallSeagrassBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.ConstantHeight": Internal.ClassInfo, "com.google.common.collect.RegularImmutableMap": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.BlockColumnConfiguration$Layer": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2ByteFunction": Internal.ClassInfo, "net.minecraft.server.packs.resources.ResourceManager": Internal.ClassInfo, "io.netty.channel.ChannelOutboundBuffer$MessageProcessor": Internal.ClassInfo, "net.minecraftforge.client.model.data.ModelData$Builder": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.PlayerRespawnedEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetEntityMotionPacket": Internal.ClassInfo, "java.io.Serializable": Internal.ClassInfo, "net.minecraft.world.entity.monster.piglin.Piglin": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2FloatFunction": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.Object2LongEntry": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuData": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.NoiseThresholdCountPlacement": Internal.ClassInfo, "org.joml.Vector2i": Internal.ClassInfo, "net.minecraft.world.entity.animal.Panda$Gene": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortIterator": Internal.ClassInfo, "net.minecraftforge.client.textures.ITextureAtlasSpriteLoader": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.item.weapons.MagicSwordItem": Internal.ClassInfo, "org.joml.Vector2f": Internal.ClassInfo, "org.joml.Vector2d": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootParams$Builder": Internal.ClassInfo, "net.minecraft.world.scores.Team$Visibility": Internal.ClassInfo, "net.minecraft.world.phys.shapes.VoxelShape": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerContainerEvent": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.functions.LootItemFunctionType": Internal.ClassInfo, "net.minecraft.world.inventory.AbstractContainerMenu": Internal.ClassInfo, "net.minecraft.world.item.crafting.MapCloningRecipe": Internal.ClassInfo, "net.minecraft.world.entity.ai.behavior.Behavior$Status": Internal.ClassInfo, "java.time.LocalDateTime": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent$LeftClickBlock": Internal.ClassInfo, "net.minecraft.world.level.block.LiquidBlock": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeHolderSet": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetSubtitleTextPacket": Internal.ClassInfo, "java.util.function.Supplier": Internal.ClassInfo, "net.minecraft.core.RegistryAccess$1FrozenAccess": Internal.ClassInfo, "net.minecraft.server.level.ServerPlayer": Internal.ClassInfo, "software.bernie.geckolib.renderer.GeoArmorRenderer": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleIterable": Internal.ClassInfo, "net.minecraft.client.renderer.FogRenderer$FogMode": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeFluidState": Internal.ClassInfo, "java.lang.StringBuffer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.Structure$StructureSettings": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.InterModEnqueueEvent": Internal.ClassInfo, "net.minecraft.world.item.crafting.BookCloningRecipe": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.SpellbreakerItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetSimulationDistancePacket": Internal.ClassInfo, "com.mojang.authlib.minecraft.report.AbuseReport": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.EntityPotionEffectsJS": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.curios.InvisibiltyRing": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2FloatFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.MappingRecipeComponent": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Init$Post": Internal.ClassInfo, "net.minecraft.world.level.chunk.BlockColumn": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationSystem$User": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.ScriptType": Internal.ClassInfo, "net.minecraftforge.server.permission.nodes.PermissionType": Internal.ClassInfo, "net.minecraft.world.level.block.WeightedPressurePlateBlock": Internal.ClassInfo, "org.joml.Vector4i": Internal.ClassInfo, "net.minecraft.server.ServerFunctionLibrary": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.BlockComponent": Internal.ClassInfo, "net.minecraft.world.level.block.DecoratedPotBlock": Internal.ClassInfo, "java.nio.file.attribute.UserPrincipalLookupService": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntSet": Internal.ClassInfo, "org.joml.Vector4f": Internal.ClassInfo, "org.joml.Vector4d": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.ChatListener": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.NearestItemSensor": Internal.ClassInfo, "net.minecraft.client.gui.font.glyphs.BakedGlyph": Internal.ClassInfo, "net.minecraft.nbt.IntTag": Internal.ClassInfo, "dev.architectury.hooks.level.biome.GenerationProperties": Internal.ClassInfo, "net.minecraft.world.level.block.WeepingVinesBlock": Internal.ClassInfo, "net.minecraft.advancements.Advancement$Builder": Internal.ClassInfo, "net.minecraft.world.entity.raid.Raider": Internal.ClassInfo, "net.minecraftforge.registries.tags.IReverseTag": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.SinglePoolElement": Internal.ClassInfo, "net.minecraft.util.TaskChainer": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyReleased$Post": Internal.ClassInfo, "dev.kosmx.playerAnim.impl.animation.AnimationApplier": Internal.ClassInfo, "com.mojang.datafixers.types.templates.TaggedChoice$TaggedChoiceType": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractGlassBlock": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.WanderingMagicianArmorItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.CarvingMaskPlacement": Internal.ClassInfo, "com.mojang.serialization.Dynamic": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectIterable": Internal.ClassInfo, "net.minecraft.core.Direction8": Internal.ClassInfo, "io.netty.buffer.AbstractByteBufAllocator": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$ItemPickupEvent": Internal.ClassInfo, "java.util.function.DoubleToIntFunction": Internal.ClassInfo, "java.util.stream.DoubleStream": Internal.ClassInfo, "net.minecraft.network.protocol.BundlePacket": Internal.ClassInfo, "net.minecraft.world.level.block.TwistingVinesPlantBlock": Internal.ClassInfo, "com.mojang.datafixers.kinds.App2": Internal.ClassInfo, "net.minecraftforge.client.event.ViewportEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.ScatteredOreFeature": Internal.ClassInfo, "net.minecraftforge.fml.config.ModConfig$Type": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.FileNotFoundAction": Internal.ClassInfo, "java.time.LocalDate": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.SpiderAspectEffect": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.CastResult": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.EndGatewayFeature": Internal.ClassInfo, "net.minecraft.world.level.levelgen.VerticalAnchor": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationController$State": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.curios.AffinityRing": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.FeatureConfiguration": Internal.ClassInfo, "net.minecraft.client.renderer.texture.DynamicTexture": Internal.ClassInfo, "com.probejs.jdoc.document.AbstractDocument": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$ValidateCallback": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.CustomInstructionKeyframeEvent": Internal.ClassInfo, "net.minecraft.commands.SharedSuggestionProvider": Internal.ClassInfo, "java.util.OptionalDouble": Internal.ClassInfo, "java.nio.channels.AsynchronousFileChannel": Internal.ClassInfo, "net.minecraft.network.FriendlyByteBuf": Internal.ClassInfo, "net.minecraft.world.level.block.CoralBlock": Internal.ClassInfo, "net.minecraft.world.level.block.CropBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.Rabbit": Internal.ClassInfo, "net.minecraft.server.players.ServerOpListEntry": Internal.ClassInfo, "com.google.gson.FieldNamingPolicy": Internal.ClassInfo, "java.nio.charset.Charset": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEntityUseItemEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemTintFunction": Internal.ClassInfo, "net.minecraft.world.entity.animal.camel.Camel": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SnowAndFreezeFeature": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.predicate.BlockEntityPredicateDataCheck": Internal.ClassInfo, "java.io.PrintStream": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.CastingItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemEntityInteractedEventJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemStackSet": Internal.ClassInfo, "com.google.common.collect.ForwardingList": Internal.ClassInfo, "dev.architectury.hooks.level.biome.BiomeProperties": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Builder": Internal.ClassInfo, "net.minecraft.world.entity.ai.memory.ExpirableValue": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortPredicate": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.CropBlockBuilder": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEventListener$Holder": Internal.ClassInfo, "net.minecraft.commands.CommandBuildContext": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockBrokenEventJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.stages.Stages": Internal.ClassInfo, "com.mojang.blaze3d.vertex.Tesselator": Internal.ClassInfo, "net.minecraft.world.level.block.GlassBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.AbstractHorse": Internal.ClassInfo, "mezz.jei.api.ingredients.rendering.BatchRenderElement": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$RenderChunk$ChunkCompileTask": Internal.ClassInfo, "com.mojang.realmsclient.gui.RealmsDataFetcher": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.chunk.map.ChunkTracker$ChunkEventHandler": Internal.ClassInfo, "net.minecraftforge.registries.MissingMappingsEvent": Internal.ClassInfo, "java.lang.Float": Internal.ClassInfo, "net.minecraft.world.entity.monster.Pillager": Internal.ClassInfo, "net.minecraftforge.event.TagsUpdatedEvent$UpdateCause": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.TinyMap": Internal.ClassInfo, "net.minecraft.network.chat.MessageSignatureCache": Internal.ClassInfo, "net.minecraft.core.Direction$AxisDirection": Internal.ClassInfo, "com.google.gson.ToNumberStrategy": Internal.ClassInfo, "software.bernie.geckolib.model.GeoModel": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.OutputReplacement": Internal.ClassInfo, "net.minecraft.world.level.block.FlowerBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.AllOfCondition$Builder": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ShulkerBullet": Internal.ClassInfo, "net.minecraft.server.packs.resources.SimpleJsonResourceReloadListener": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.SpellSlotUpgradeItem": Internal.ClassInfo, "net.minecraft.world.level.material.EmptyFluid": Internal.ClassInfo, "net.minecraft.world.damagesource.CombatTracker": Internal.ClassInfo, "net.minecraftforge.fml.DeferredWorkQueue": Internal.ClassInfo, "io.redspace.ironsspellbooks.block.alchemist_cauldron.AlchemistCauldronBlock": Internal.ClassInfo, "net.minecraft.world.item.trading.Merchant": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.WardenEntitySensor": Internal.ClassInfo, "net.minecraft.world.entity.ai.memory.MemoryStatus": Internal.ClassInfo, "net.minecraft.world.entity.TraceableEntity": Internal.ClassInfo, "net.minecraft.core.IdMapper": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldOptions": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetCreativeModeSlotPacket": Internal.ClassInfo, "net.minecraftforge.common.capabilities.RegisterCapabilitiesEvent": Internal.ClassInfo, "net.minecraft.world.level.material.FluidState": Internal.ClassInfo, "net.minecraft.world.entity.monster.Creeper": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkAccess$TicksToSave": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2CharFunction": Internal.ClassInfo, "net.minecraft.world.item.enchantment.Enchantment": Internal.ClassInfo, "net.minecraft.sounds.SoundSource": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.EvasionEffect": Internal.ClassInfo, "net.minecraft.client.renderer.culling.Frustum": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkDataEvent": Internal.ClassInfo, "net.minecraft.world.level.block.GrassBlock": Internal.ClassInfo, "net.minecraft.world.entity.AgeableMob": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientLevel": Internal.ClassInfo, "net.minecraft.world.level.block.BrewingStandBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.RuleTest": Internal.ClassInfo, "net.minecraftforge.server.permission.nodes.PermissionNode": Internal.ClassInfo, "net.minecraft.advancements.critereon.DeserializationContext": Internal.ClassInfo, "net.minecraftforge.client.event.ClientChatEvent": Internal.ClassInfo, "cpw.mods.jarhandling.JarMetadata": Internal.ClassInfo, "net.minecraft.world.level.validation.ForbiddenSymlinkInfo": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEntityUseItemEvent$Finish": Internal.ClassInfo, "net.minecraft.client.particle.ParticleProvider$Sprite": Internal.ClassInfo, "java.util.jar.Attributes$Name": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmithingRecipe": Internal.ClassInfo, "java.lang.String": Internal.ClassInfo, "net.minecraft.world.entity.animal.sniffer.Sniffer": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapItemSavedData$HoldingPlayer": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour": Internal.ClassInfo, "net.minecraft.world.level.gameevent.PositionSource": Internal.ClassInfo, "net.minecraft.world.entity.OwnableEntity": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimatableManager": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.VillagerProfessionBuilder": Internal.ClassInfo, "java.lang.invoke.VarHandle": Internal.ClassInfo, "java.util.stream.DoubleStream$DoubleMapMultiConsumer": Internal.ClassInfo, "net.minecraft.world.entity.animal.AbstractGolem": Internal.ClassInfo, "net.minecraft.commands.arguments.EntityAnchorArgument$Anchor": Internal.ClassInfo, "net.minecraft.world.entity.animal.frog.Tadpole": Internal.ClassInfo, "net.minecraft.client.quickplay.QuickPlayLog$Type": Internal.ClassInfo, "dev.latvian.mods.kubejs.forge.ForgeEventWrapper": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgePackResources": Internal.ClassInfo, "net.minecraft.client.gui.components.events.GuiEventListener": Internal.ClassInfo, "net.minecraft.world.level.block.CaveVinesBlock": Internal.ClassInfo, "java.util.function.DoubleToLongFunction": Internal.ClassInfo, "net.minecraft.world.level.block.SnowyDirtBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.RuleBasedBlockStateProvider$Rule": Internal.ClassInfo, "net.minecraft.world.level.LevelTimeAccess": Internal.ClassInfo, "net.minecraft.world.entity.Display$ItemDisplay$ItemRenderState": Internal.ClassInfo, "net.minecraftforge.event.entity.player.AttackEntityEvent": Internal.ClassInfo, "net.minecraft.client.renderer.entity.RenderLayerParent": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.AutoloaderCrossbow": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.SchoolType": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.FluidComponents$1": Internal.ClassInfo, "net.minecraft.world.entity.projectile.LlamaSpit": Internal.ClassInfo, "java.text.DecimalFormatSymbols": Internal.ClassInfo, "net.minecraft.world.level.entity.EntityTypeTest": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.InSquarePlacement": Internal.ClassInfo, "io.netty.buffer.PoolSubpageMetric": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2LongFunction": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.spell_books.SimpleAttributeSpellBook": Internal.ClassInfo, "net.minecraft.world.item.ScaffoldingBlockItem": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.SummonTimer": Internal.ClassInfo, "net.minecraft.world.inventory.MenuType": Internal.ClassInfo, "net.minecraft.world.entity.LivingEntity$Fallsounds": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2FloatFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongPredicate": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonSittingFlamingPhase": Internal.ClassInfo, "net.minecraft.world.level.material.WaterFluid$Flowing": Internal.ClassInfo, "net.minecraft.world.level.block.GrindstoneBlock": Internal.ClassInfo, "com.mojang.datafixers.util.Function10": Internal.ClassInfo, "net.minecraft.client.renderer.debug.VillageSectionsDebugRenderer": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.VillagerTypeBuilder": Internal.ClassInfo, "net.minecraft.world.LockCode": Internal.ClassInfo, "net.minecraft.world.level.block.BaseCoralPlantBlock": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmithingTransformRecipe": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.HorizontalDirectionalBlockBuilder": Internal.ClassInfo, "com.mojang.realmsclient.dto.PlayerInfo": Internal.ClassInfo, "com.mojang.serialization.Compressable": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRemoveEntitiesPacket": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LootingLevelEvent": Internal.ClassInfo, "net.minecraft.client.gui.components.ChatComponent": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelBakery": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceKeyArgument$Info$Template": Internal.ClassInfo, "net.minecraft.world.level.block.entity.DecoratedPotBlockEntity$Decorations": Internal.ClassInfo, "net.minecraftforge.client.event.TextureStitchEvent$Post": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterNamedRenderTypesEvent": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonReleased$Pre": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.EnchantmentBuilder": Internal.ClassInfo, "net.minecraft.world.entity.npc.InventoryCarrier": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatIterable": Internal.ClassInfo, "com.mojang.datafixers.util.Function15": Internal.ClassInfo, "com.mojang.datafixers.util.Function16": Internal.ClassInfo, "com.mojang.datafixers.util.Function13": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCooldownPacket": Internal.ClassInfo, "java.security.PrivilegedAction": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.features.textures.SpriteContentsInvoker": Internal.ClassInfo, "com.mojang.datafixers.util.Function14": Internal.ClassInfo, "net.minecraftforge.client.event.EntityRenderersEvent$RegisterRenderers": Internal.ClassInfo, "com.mojang.datafixers.util.Function11": Internal.ClassInfo, "com.mojang.datafixers.util.Function12": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplateManager": Internal.ClassInfo, "java.security.Principal": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.FluidComponents$2": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBlockEntity": Internal.ClassInfo, "net.minecraft.world.entity.ai.goal.Goal": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.TerrainAdjustment": Internal.ClassInfo, "com.google.common.collect.ImmutableList$Builder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.RandomSpreadType": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.ConditionUserBuilder": Internal.ClassInfo, "net.minecraft.client.renderer.debug.DebugRenderer$SimpleDebugRenderer": Internal.ClassInfo, "org.lwjgl.stb.STBTTFontinfo": Internal.ClassInfo, "net.minecraft.world.item.EnchantedBookItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.predicate.BlockIDPredicate": Internal.ClassInfo, "net.minecraft.world.level.block.LecternBlock": Internal.ClassInfo, "java.util.function.LongBinaryOperator": Internal.ClassInfo, "net.minecraftforge.client.gui.overlay.ForgeGui": Internal.ClassInfo, "net.minecraft.world.effect.InstantenousMobEffect": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.OutputReplacementTransformer$Replacement": Internal.ClassInfo, "java.nio.ShortBuffer": Internal.ClassInfo, "net.minecraft.world.item.crafting.Ingredient": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder$HurtEnemyContext": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongIterable": Internal.ClassInfo, "net.minecraft.world.level.ItemLike": Internal.ClassInfo, "net.minecraftforge.common.world.BiomeGenerationSettingsBuilder": Internal.ClassInfo, "net.minecraft.world.item.enchantment.TridentLoyaltyEnchantment": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder$Leggings": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.Sensing": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureSpawnOverride": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServer$State": Internal.ClassInfo, "net.minecraftforge.client.event.sound.SoundEvent": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.CustomSpell$Builder": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyPressed": Internal.ClassInfo, "java.lang.reflect.AccessibleObject": Internal.ClassInfo, "net.minecraft.client.particle.ParticleEngine$SpriteParticleRegistration": Internal.ClassInfo, "net.minecraft.client.resources.metadata.animation.AnimationMetadataSection$FrameOutput": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.EntityFallenOnBlockCallbackJS": Internal.ClassInfo, "net.minecraft.world.level.chunk.CarvingMask": Internal.ClassInfo, "net.minecraft.commands.SharedSuggestionProvider$TextCoordinates": Internal.ClassInfo, "java.util.concurrent.TimeUnit": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.IngredientSupplierKJS": Internal.ClassInfo, "net.minecraft.network.chat.contents.DataSource": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent": Internal.ClassInfo, "net.minecraft.client.color.block.BlockColors": Internal.ClassInfo, "net.minecraft.world.item.HorseArmorItem": Internal.ClassInfo, "net.minecraft.core.FrontAndTop": Internal.ClassInfo, "com.mojang.blaze3d.vertex.BufferVertexConsumer": Internal.ClassInfo, "dev.architectury.registry.registries.RegistrarManager": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeNamespace": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ItemArmorTierRegistryEventJS": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.ProfilerMeasured": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureEntityInfo": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.CryomancerArmorItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.NoiseProvider": Internal.ClassInfo, "net.minecraft.server.players.PlayerList": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.StaffOfTheNines": Internal.ClassInfo, "net.minecraft.world.entity.animal.TropicalFish$Pattern": Internal.ClassInfo, "net.minecraft.world.entity.projectile.FireworkRocketEntity": Internal.ClassInfo, "org.joml.Vector2ic": Internal.ClassInfo, "net.minecraft.world.item.crafting.SmithingTrimRecipe": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundCustomPayloadPacket": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerCommandPacket": Internal.ClassInfo, "java.nio.channels.ByteChannel": Internal.ClassInfo, "net.caffeinemc.mods.sodium.api.vertex.attributes.CommonVertexAttribute": Internal.ClassInfo, "dev.latvian.mods.kubejs.generator.ResourceGenerator": Internal.ClassInfo, "java.nio.channels.spi.AbstractInterruptibleChannel": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootPool": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeEntity": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationContext$DimensionsUpdater": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ItemKJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SpringFeature": Internal.ClassInfo, "java.lang.reflect.Member": Internal.ClassInfo, "java.net.NetworkInterface": Internal.ClassInfo, "org.apache.logging.log4j.util.StringBuilderFormattable": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.AbstractMinecart$Type": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.TreeConfiguration": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.BooleanComponent": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2IntMap$Entry": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.AngelWingsEffect": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableStructureInfo$StructureInfo$Builder": Internal.ClassInfo, "com.mojang.blaze3d.pipeline.RenderTarget": Internal.ClassInfo, "net.minecraft.world.level.block.CampfireBlock": Internal.ClassInfo, "net.minecraft.commands.synchronization.brigadier.LongArgumentInfo$Template": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.registry.SpellRegistry": Internal.ClassInfo, "net.minecraftforge.fluids.FluidStack": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.NetherFortressStructure": Internal.ClassInfo, "net.minecraft.world.level.block.KelpBlock": Internal.ClassInfo, "net.minecraft.world.level.block.HorizontalDirectionalBlock": Internal.ClassInfo, "net.minecraft.world.level.biome.Biome$TemperatureModifier": Internal.ClassInfo, "io.netty.buffer.AbstractReferenceCountedByteBuf": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureStart": Internal.ClassInfo, "net.minecraft.server.packs.resources.Resource": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundUseItemPacket": Internal.ClassInfo, "net.minecraftforge.common.crafting.IIngredientSerializer": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.ConsoleLine": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundChangeDifficultyPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.filter.RecipeFilterParseEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.rootplacers.RootPlacer": Internal.ClassInfo, "net.minecraft.world.entity.monster.WitherSkeleton": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.HandheldItemBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.forge.GenericForgeEventConsumer": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2CharFunction": Internal.ClassInfo, "net.minecraft.world.inventory.BlastFurnaceMenu": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BrushableBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.block.RootedDirtBlock": Internal.ClassInfo, "com.mojang.brigadier.suggestion.SuggestionProvider": Internal.ClassInfo, "net.minecraftforge.eventbus.api.IEventBusInvokeDispatcher": Internal.ClassInfo, "net.minecraft.client.renderer.GameRenderer": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterColorHandlersEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.AlterGroundDecorator": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.NoiseBasedCountPlacement": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.CustomSpell$PreCastConditionsContext": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.ModelGenerator$Element": Internal.ClassInfo, "java.lang.reflect.Field": Internal.ClassInfo, "io.netty.util.ReferenceCounted": Internal.ClassInfo, "net.minecraft.client.renderer.entity.ItemRenderer": Internal.ClassInfo, "net.minecraftforge.registries.MissingMappingsEvent$Mapping": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$Palette": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntList": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ReferenceFunction": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.curios.CurioBaseItem": Internal.ClassInfo, "com.squoshi.irons_spells_js.util.ISSKJSUtils$SchoolHolder": Internal.ClassInfo, "net.minecraft.world.level.chunk.Palette$Factory": Internal.ClassInfo, "net.minecraft.world.level.block.SignBlock": Internal.ClassInfo, "net.minecraft.world.item.HangingEntityItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockTintFunction": Internal.ClassInfo, "net.minecraft.commands.synchronization.brigadier.DoubleArgumentInfo": Internal.ClassInfo, "java.awt.geom.Point2D": Internal.ClassInfo, "net.minecraft.server.PlayerAdvancements": Internal.ClassInfo, "net.minecraft.world.level.block.PressurePlateBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBossEventPacket": Internal.ClassInfo, "java.lang.Runnable": Internal.ClassInfo, "net.minecraft.server.packs.resources.SimplePreparableReloadListener": Internal.ClassInfo, "net.minecraft.nbt.IntArrayTag": Internal.ClassInfo, "net.minecraft.world.level.block.MagmaBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SpikeFeature$EndSpike": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableBiomeInfo$BiomeInfo": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2FloatMap": Internal.ClassInfo, "java.util.Locale": Internal.ClassInfo, "java.lang.Short": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.RenderRegionCache": Internal.ClassInfo, "mezz.jei.api.gui.inputs.IJeiUserInput": Internal.ClassInfo, "dev.kosmx.playerAnim.api.firstPerson.FirstPersonConfiguration": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.creativetab.CreativeTabContentSupplier": Internal.ClassInfo, "net.minecraft.world.item.ArrowItem": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.magic.SpellSelectionManager$SpellSelectionEvent": Internal.ClassInfo, "java.util.PrimitiveIterator$OfInt": Internal.ClassInfo, "dev.latvian.mods.rhino.regexp.RegExp": Internal.ClassInfo, "com.google.common.collect.ImmutableSet": Internal.ClassInfo, "com.mojang.serialization.Decoder$Boxed": Internal.ClassInfo, "net.minecraftforge.common.IMinecartCollisionHandler": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.InventoryKJS": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.AdultSensor": Internal.ClassInfo, "java.lang.module.Configuration": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.DragonskinItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.OutputReplacementTransformer": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBucketPickup": Internal.ClassInfo, "net.minecraft.world.item.ShearsItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.ExplosionEventJS$After": Internal.ClassInfo, "dev.latvian.mods.unit.VariableSet": Internal.ClassInfo, "com.mojang.datafixers.TypedOptic": Internal.ClassInfo, "net.minecraft.world.entity.item.ItemEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.PlacementContext": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.NodeEvaluator": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$EmptyTextureStateShard": Internal.ClassInfo, "net.minecraft.client.renderer.RenderType$CompositeState": Internal.ClassInfo, "com.mojang.serialization.codecs.RecordCodecBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureSpawnOverride$BoundingBoxType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldDimensions": Internal.ClassInfo, "net.minecraft.world.entity.monster.Skeleton": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleComparator": Internal.ClassInfo, "journeymap.client.api.event.forge.PopupMenuEvent$WaypointPopupMenuEvent": Internal.ClassInfo, "net.minecraft.server.players.UserWhiteList": Internal.ClassInfo, "net.minecraft.core.Position": Internal.ClassInfo, "java.util.OptionalInt": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.IRecipeSlotView": Internal.ClassInfo, "com.mojang.brigadier.arguments.StringArgumentType": Internal.ClassInfo, "net.minecraft.world.entity.animal.WaterAnimal": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongListIterator": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$Ap2": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.CountPlacement": Internal.ClassInfo, "net.minecraftforge.event.entity.ProjectileImpactEvent$ImpactResult": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.NoteBlockInstrument": Internal.ClassInfo, "org.slf4j.spi.LoggingEventBuilder": Internal.ClassInfo, "net.minecraftforge.fluids.ForgeFlowingFluid$Flowing": Internal.ClassInfo, "com.mojang.blaze3d.platform.NativeImage": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationSystem": Internal.ClassInfo, "java.util.concurrent.ExecutorService": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.SpellModificationBuilder$ModifiedServerCastCompleteCallback": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.rootplacers.RootPlacerType": Internal.ClassInfo, "net.minecraft.world.entity.TamableAnimal": Internal.ClassInfo, "java.time.zone.ZoneOffsetTransitionRule$TimeDefinition": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemModelPropertiesEventJS": Internal.ClassInfo, "io.netty.channel.ChannelProgressivePromise": Internal.ClassInfo, "net.minecraft.client.gui.font.FontManager": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$LevelTickEvent": Internal.ClassInfo, "net.minecraft.world.level.portal.PortalInfo": Internal.ClassInfo, "net.minecraft.world.item.BlockItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.InputReplacementTransformer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.Feature": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.FossilFeature": Internal.ClassInfo, "net.minecraft.world.entity.monster.Enemy": Internal.ClassInfo, "net.minecraft.world.entity.Entity": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRespawnPacket": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockElement": Internal.ClassInfo, "com.mojang.datafixers.schemas.Schema": Internal.ClassInfo, "net.minecraft.client.gui.components.toasts.Toast": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.NearestBedSensor": Internal.ClassInfo, "net.minecraftforge.client.event.ContainerScreenEvent$Render$Background": Internal.ClassInfo, "com.google.common.cache.LoadingCache": Internal.ClassInfo, "java.util.function.LongSupplier": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BeeDebugRenderer$BeeInfo": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiEvent$Pre": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterClientTooltipComponentFactoriesEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.InventoryChangedEventJS": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2FloatFunction": Internal.ClassInfo, "java.lang.module.ModuleReference": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BannerPattern": Internal.ClassInfo, "java.security.SecureRandom": Internal.ClassInfo, "net.minecraft.client.resources.sounds.TickableSoundInstance": Internal.ClassInfo, "java.lang.reflect.Executable": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeRecipeSerializer": Internal.ClassInfo, "com.mojang.realmsclient.gui.task.DataFetcher$Subscription": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.NotificationBuilder": Internal.ClassInfo, "net.minecraft.world.entity.decoration.GlowItemFrame": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryProperty$Exporter": Internal.ClassInfo, "net.minecraft.world.effect.HealthBoostMobEffect": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$TwoArgumentSimpleFunction": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.curios.FrostwardRing": Internal.ClassInfo, "org.joml.Matrix3x2dc": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.HugeFungusConfiguration": Internal.ClassInfo, "net.minecraft.world.item.enchantment.DamageEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.MegaJungleTrunkPlacer": Internal.ClassInfo, "net.minecraft.core.RegistryAccess": Internal.ClassInfo, "net.minecraft.world.item.FireChargeItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$Constant": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.VegetationPatchConfiguration": Internal.ClassInfo, "net.minecraft.world.entity.monster.SpellcasterIllager$IllagerSpell": Internal.ClassInfo, "net.minecraft.world.item.DyeableLeatherItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.BlockExplodedCallbackJS": Internal.ClassInfo, "com.mojang.blaze3d.vertex.DefaultedVertexConsumer": Internal.ClassInfo, "net.minecraft.client.renderer.entity.EntityRendererProvider": Internal.ClassInfo, "net.minecraft.world.entity.monster.Evoker": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent": Internal.ClassInfo, "com.probejs.jdoc.property.PropertyType": Internal.ClassInfo, "net.minecraft.world.item.PlayerHeadItem": Internal.ClassInfo, "java.util.Dictionary": Internal.ClassInfo, "java.lang.Throwable": Internal.ClassInfo, "dev.latvian.mods.kubejs.forge.ForgeEventConsumer": Internal.ClassInfo, "net.minecraft.world.entity.monster.MagmaCube": Internal.ClassInfo, "net.minecraft.world.level.lighting.ChunkSkyLightSources": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedRegistryEntryExtension": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.SpellModificationBuilder$ModifiedClientPreCastCallback": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.GeodeFeature": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pieces.StructurePieceSerializationContext": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundContainerButtonClickPacket": Internal.ClassInfo, "net.minecraftforge.common.world.ForgeBiomeModifiers$AddFeaturesBiomeModifier": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$StatePredicate": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundRenameItemPacket": Internal.ClassInfo, "io.netty.channel.MessageSizeEstimator$Handle": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerAbilitiesPacket": Internal.ClassInfo, "com.mojang.serialization.Encoder": Internal.ClassInfo, "net.minecraft.world.Container": Internal.ClassInfo, "net.minecraft.core.Direction$Axis": Internal.ClassInfo, "dev.latvian.mods.rhino.ErrorReporter": Internal.ClassInfo, "net.minecraft.world.item.crafting.SimpleCookingSerializer": Internal.ClassInfo, "net.minecraft.world.item.crafting.CookingBookCategory": Internal.ClassInfo, "java.util.function.BiConsumer": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.core.model.BakedModelMixin": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.MegaJungleFoliagePlacer": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerInteractEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.SwordItemBuilder": Internal.ClassInfo, "com.mojang.serialization.MapCodec$ResultFunction": Internal.ClassInfo, "net.minecraft.world.level.block.DiodeBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.OrRecipeComponent": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Opening": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.PainterObject": Internal.ClassInfo, "org.joml.Matrix3x2fc": Internal.ClassInfo, "dev.kosmx.playerAnim.core.util.Vector3": Internal.ClassInfo, "net.minecraft.world.entity.animal.Animal": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.AddJEIEventJS": Internal.ClassInfo, "java.nio.channels.CompletionHandler": Internal.ClassInfo, "net.minecraftforge.event.village.WandererTradesEvent": Internal.ClassInfo, "net.minecraft.world.level.block.FletchingTableBlock": Internal.ClassInfo, "com.mojang.serialization.Codec": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.RecipeComponentBuilder": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.entity.IMagicEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.BeehiveDecorator": Internal.ClassInfo, "org.joml.Vector2dc": Internal.ClassInfo, "net.minecraft.server.packs.resources.ResourceProvider": Internal.ClassInfo, "net.minecraft.world.entity.EntityDimensions": Internal.ClassInfo, "net.minecraft.world.level.gameevent.EntityPositionSource": Internal.ClassInfo, "net.minecraft.client.renderer.texture.Dumpable": Internal.ClassInfo, "net.minecraft.world.entity.SlotAccess": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.CubeDefinition": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.LangEventJS": Internal.ClassInfo, "java.util.function.IntConsumer": Internal.ClassInfo, "net.minecraft.server.players.UserWhiteListEntry": Internal.ClassInfo, "java.util.AbstractList": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.parameters.LootContextParamSet$Builder": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonTakeoffPhase": Internal.ClassInfo, "net.minecraft.client.telemetry.ClientTelemetryManager": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundContainerClosePacket": Internal.ClassInfo, "net.minecraft.world.effect.MobEffectInstance$FactorData": Internal.ClassInfo, "net.minecraftforge.server.permission.events.PermissionGatherEvent$Nodes": Internal.ClassInfo, "com.electronwill.nightconfig.core.io.ConfigParser": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.OakskinEffect": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEvent$Context": Internal.ClassInfo, "net.minecraft.world.entity.player.ProfilePublicKey$Data": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObjectList": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.rootplacers.MangroveRootPlacer": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundChatAckPacket": Internal.ClassInfo, "net.minecraft.client.model.ArmedModel": Internal.ClassInfo, "java.lang.Cloneable": Internal.ClassInfo, "net.minecraft.world.level.block.DoubleBlockCombiner$NeighborCombineResult": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.Scroll": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSeenAdvancementsPacket": Internal.ClassInfo, "org.joml.Vector2fc": Internal.ClassInfo, "net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeDimensionSpecialEffects": Internal.ClassInfo, "net.minecraft.client.renderer.MultiBufferSource": Internal.ClassInfo, "net.minecraft.world.entity.SpawnGroupData": Internal.ClassInfo, "java.time.temporal.ChronoField": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidLike": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.PrimitiveDescJS": Internal.ClassInfo, "journeymap.client.api.display.Context": Internal.ClassInfo, "net.minecraft.client.sounds.SoundEngine": Internal.ClassInfo, "net.minecraft.world.level.block.WeatheringCopper$WeatherState": Internal.ClassInfo, "net.minecraftforge.event.entity.EntityMountEvent": Internal.ClassInfo, "com.mojang.brigadier.exceptions.SimpleCommandExceptionType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.flat.FlatLevelGeneratorPreset": Internal.ClassInfo, "net.minecraft.client.renderer.debug.GoalSelectorDebugRenderer": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2FloatMap": Internal.ClassInfo, "java.lang.constant.ConstantDesc": Internal.ClassInfo, "net.minecraft.world.level.block.AmethystBlock": Internal.ClassInfo, "com.probejs.jdoc.java.FieldInfo": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundMoveVehiclePacket": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$ChunkTaskResult": Internal.ClassInfo, "net.minecraftforge.client.event.TextureStitchEvent": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonReleased": Internal.ClassInfo, "net.minecraft.world.scores.criteria.ObjectiveCriteria": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.StraightTrunkPlacer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.HeightProvider": Internal.ClassInfo, "com.probejs.jdoc.document.DocumentConstructor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetTitlesAnimationPacket": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundDisguisedChatPacket": Internal.ClassInfo, "net.minecraft.world.level.block.MangrovePropaguleBlock": Internal.ClassInfo, "dev.latvian.mods.rhino.IdFunctionCall": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Render$Post": Internal.ClassInfo, "com.mojang.datafixers.types.Type$Mu": Internal.ClassInfo, "java.nio.file.attribute.AttributeView": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLoginPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockModificationEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.DiskConfiguration": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.MatchingBlocksPredicate": Internal.ClassInfo, "net.minecraft.server.packs.repository.PackCompatibility": Internal.ClassInfo, "net.minecraftforge.forgespi.language.ModFileScanData$ClassData": Internal.ClassInfo, "net.minecraft.world.item.SolidBucketItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateEnabledFeaturesPacket": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractCauldronBlock": Internal.ClassInfo, "net.minecraft.client.renderer.ItemInHandRenderer": Internal.ClassInfo, "net.minecraft.client.telemetry.events.GameLoadTimesEvent$Measurement": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.IcebergFeature": Internal.ClassInfo, "net.minecraft.world.item.LeadItem": Internal.ClassInfo, "net.minecraft.client.renderer.block.BlockModelShaper": Internal.ClassInfo, "net.minecraftforge.client.model.geometry.IUnbakedGeometry": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$Properties": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.EndGatewayConfiguration": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingDamageEvent": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.wrapper.UUIDWrapper": Internal.ClassInfo, "org.apache.logging.slf4j.Log4jLogger": Internal.ClassInfo, "com.probejs.jdoc.document.AbstractDocumentBase": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$ParameterPoint": Internal.ClassInfo, "java.util.stream.Collector": Internal.ClassInfo, "net.minecraft.world.level.block.SculkShriekerBlock": Internal.ClassInfo, "net.minecraftforge.event.entity.player.EntityItemPickupEvent": Internal.ClassInfo, "net.minecraft.world.level.CommonLevelAccessor": Internal.ClassInfo, "cpw.mods.jarhandling.SecureJar$Status": Internal.ClassInfo, "net.minecraft.world.item.CrossbowItem": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeLevel": Internal.ClassInfo, "net.minecraft.world.entity.Attackable": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.IceSpikeFeature": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.SpellModificationBuilder$ModifiedServerCastCallback": Internal.ClassInfo, "net.minecraft.world.InteractionResult": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonSittingScanningPhase": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.FMLLoadCompleteEvent": Internal.ClassInfo, "com.mojang.serialization.DynamicLike": Internal.ClassInfo, "net.minecraft.world.entity.monster.AbstractIllager": Internal.ClassInfo, "net.minecraft.world.item.ItemNameBlockItem": Internal.ClassInfo, "net.minecraft.world.flag.FeatureFlagSet": Internal.ClassInfo, "java.nio.ByteOrder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pieces.StructurePiecesBuilder": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ByteFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.CoralClawFeature": Internal.ClassInfo, "net.minecraft.client.gui.screens.inventory.EffectRenderingInventoryScreen": Internal.ClassInfo, "com.mojang.brigadier.exceptions.BuiltInExceptionProvider": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BedBlockEntity": Internal.ClassInfo, "net.minecraftforge.common.world.ModifiableBiomeInfo": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrowableProjectile": Internal.ClassInfo, "net.minecraft.network.chat.HoverEvent$EntityTooltipInfo": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEvent$LivingTickEvent": Internal.ClassInfo, "net.minecraftforge.registries.ForgeRegistry": Internal.ClassInfo, "net.minecraft.world.level.block.MultifaceSpreader$SpreadPos": Internal.ClassInfo, "net.minecraft.server.network.TextFilter": Internal.ClassInfo, "net.minecraft.world.level.chunk.ProtoChunk": Internal.ClassInfo, "net.minecraft.world.item.crafting.CampfireCookingRecipe": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.PartDefinition": Internal.ClassInfo, "com.mojang.datafixers.types.Type": Internal.ClassInfo, "net.minecraftforge.common.util.LazyOptional": Internal.ClassInfo, "java.time.temporal.TemporalAccessor": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.MeshDefinition": Internal.ClassInfo, "com.mojang.datafixers.kinds.Functor": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2DoubleFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.GeodeBlockSettings": Internal.ClassInfo, "java.util.function.ToLongBiFunction": Internal.ClassInfo, "net.minecraftforge.server.permission.nodes.PermissionNode$PermissionResolver": Internal.ClassInfo, "net.minecraft.commands.arguments.EntityArgument": Internal.ClassInfo, "org.apache.maven.artifact.resolver.filter.ArtifactFilter": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelManager": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationSystem$Data": Internal.ClassInfo, "net.minecraft.world.level.block.DoubleBlockCombiner$BlockType": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLightUpdatePacket": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceOrTagKeyArgument": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2IntMap": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeHolderSet$SerializationType": Internal.ClassInfo, "net.minecraft.world.level.WorldDataConfiguration": Internal.ClassInfo, "org.apache.logging.log4j.Marker": Internal.ClassInfo, "java.io.Flushable": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortComparator": Internal.ClassInfo, "net.minecraft.world.level.block.SmokerBlock": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$RenderChunk": Internal.ClassInfo, "java.nio.file.FileStore": Internal.ClassInfo, "net.raphimc.immediatelyfast.feature.map_atlas_generation.MapAtlasTexture": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.NumberComponent$DoubleRange": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSystemChatPacket": Internal.ClassInfo, "net.minecraft.world.inventory.LoomMenu": Internal.ClassInfo, "net.minecraft.world.item.TieredItem": Internal.ClassInfo, "net.minecraft.world.entity.WalkAnimationState": Internal.ClassInfo, "net.minecraft.world.level.chunk.LevelChunkSection": Internal.ClassInfo, "net.minecraft.world.entity.monster.RangedAttackMob": Internal.ClassInfo, "net.minecraft.core.particles.ParticleTypes$1": Internal.ClassInfo, "io.netty.util.concurrent.Future": Internal.ClassInfo, "net.minecraft.world.effect.AttackDamageMobEffect": Internal.ClassInfo, "net.minecraft.world.level.block.LeavesBlock": Internal.ClassInfo, "net.minecraft.world.level.chunk.CarvingMask$Mask": Internal.ClassInfo, "net.minecraft.world.entity.item.FallingBlockEntity": Internal.ClassInfo, "com.google.gson.JsonObject": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarrationSupplier": Internal.ClassInfo, "net.minecraft.client.renderer.debug.PathfindingRenderer": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerChatPacket": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.Tilt": Internal.ClassInfo, "net.minecraft.client.renderer.OutlineBufferSource": Internal.ClassInfo, "net.minecraft.world.level.BlockGetter": Internal.ClassInfo, "java.util.AbstractCollection": Internal.ClassInfo, "java.util.ImmutableCollections$AbstractImmutableCollection": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder$NameCallback": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootPool$Builder": Internal.ClassInfo, "java.lang.Readable": Internal.ClassInfo, "net.minecraft.client.RecipeBookCategories": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundTeleportToEntityPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.filter.biome.BiomeFilter": Internal.ClassInfo, "java.util.zip.ZipFile": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$PlayerTickEvent": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationProcessor$QueuedAnimation": Internal.ClassInfo, "net.minecraft.world.level.block.ConcretePowderBlock": Internal.ClassInfo, "net.minecraft.world.entity.projectile.Fireball": Internal.ClassInfo, "net.minecraft.world.item.TooltipFlag$Default": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModInfo": Internal.ClassInfo, "java.net.URLStreamHandlerFactory": Internal.ClassInfo, "net.minecraft.world.item.EnchantedGoldenAppleItem": Internal.ClassInfo, "net.minecraft.world.item.HoneycombItem": Internal.ClassInfo, "net.minecraft.network.chat.HoverEvent": Internal.ClassInfo, "mezz.jei.api.recipe.IFocus": Internal.ClassInfo, "java.io.DataInput": Internal.ClassInfo, "java.lang.annotation.Annotation": Internal.ClassInfo, "net.minecraft.stats.RecipeBookSettings": Internal.ClassInfo, "dev.kosmx.playerAnim.mixin.firstPerson.CameraAccessor": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent$ServerCustomPayloadEvent": Internal.ClassInfo, "net.minecraft.world.entity.animal.AbstractFish": Internal.ClassInfo, "net.minecraft.world.entity.animal.PolarBear": Internal.ClassInfo, "net.minecraft.server.MinecraftServer$ServerResourcePackInfo": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.curios.FirewardRing": Internal.ClassInfo, "com.google.common.collect.Multiset": Internal.ClassInfo, "net.minecraft.server.bossevents.CustomBossEvents": Internal.ClassInfo, "net.minecraft.client.gui.screens.Overlay": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.MineshaftStructure": Internal.ClassInfo, "net.minecraftforge.common.world.StructureModifier": Internal.ClassInfo, "java.util.function.Function": Internal.ClassInfo, "java.util.function.BiPredicate": Internal.ClassInfo, "net.minecraft.world.item.MilkBucketItem": Internal.ClassInfo, "com.mojang.authlib.minecraft.MinecraftSessionService": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.KeeperFlambergeItem": Internal.ClassInfo, "com.mojang.brigadier.Message": Internal.ClassInfo, "java.lang.Boolean": Internal.ClassInfo, "com.squoshi.irons_spells_js.item.StaffItemBuilderJS": Internal.ClassInfo, "net.minecraft.world.level.material.WaterFluid": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.MagehunterItem": Internal.ClassInfo, "io.netty.channel.EventLoopGroup": Internal.ClassInfo, "net.minecraft.commands.synchronization.brigadier.FloatArgumentInfo": Internal.ClassInfo, "java.security.PublicKey": Internal.ClassInfo, "io.redspace.ironsspellbooks.capabilities.magic.TargetEntityCastData": Internal.ClassInfo, "java.security.AlgorithmParameters": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.PiglinBruteSpecificSensor": Internal.ClassInfo, "net.minecraft.world.ticks.LevelTicks": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonDeathPhase": Internal.ClassInfo, "com.google.common.collect.ForwardingMultimap": Internal.ClassInfo, "net.minecraft.client.renderer.texture.SpriteTicker": Internal.ClassInfo, "net.minecraft.server.packs.repository.Pack$ResourcesSupplier": Internal.ClassInfo, "net.minecraft.world.entity.animal.axolotl.Axolotl": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.NearestLivingEntitySensor": Internal.ClassInfo, "net.minecraft.client.OptionInstance": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.PineFoliagePlacer": Internal.ClassInfo, "net.minecraft.world.level.block.RotatedPillarBlock": Internal.ClassInfo, "com.squoshi.irons_spells_js.entity.attribute.SpellAttributeBuilderJS": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainer$Data": Internal.ClassInfo, "net.minecraftforge.common.world.MobSpawnSettingsBuilder": Internal.ClassInfo, "net.minecraft.tags.TagNetworkSerialization$NetworkPayload": Internal.ClassInfo, "java.security.AccessControlContext": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$DisplayItemsGenerator": Internal.ClassInfo, "com.squoshi.irons_spells_js.item.SpellBookBuilderJS": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryEventInstance": Internal.ClassInfo, "net.minecraft.world.level.block.FallingBlock": Internal.ClassInfo, "com.mojang.datafixers.types.templates.RecursivePoint$RecursivePointType": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.wrapper.DirectionWrapper": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.BlockStateConfiguration": Internal.ClassInfo, "net.minecraft.world.entity.MobType": Internal.ClassInfo, "net.minecraft.world.level.block.RedstoneTorchBlock": Internal.ClassInfo, "com.electronwill.nightconfig.core.io.ConfigWriter": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkSource": Internal.ClassInfo, "net.minecraft.core.HolderLookup$RegistryLookup": Internal.ClassInfo, "top.theillusivec4.curios.api.type.capability.ICurioItem": Internal.ClassInfo, "net.minecraft.world.entity.monster.AbstractSkeleton": Internal.ClassInfo, "com.google.gson.FieldNamingStrategy": Internal.ClassInfo, "net.minecraft.world.level.levelgen.SurfaceRules$RuleSource": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.HasSturdyFacePredicate": Internal.ClassInfo, "net.minecraft.world.level.block.GlazedTerracottaBlock": Internal.ClassInfo, "net.minecraft.commands.arguments.ArgumentSignatures": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructurePiece": Internal.ClassInfo, "java.util.function.LongToIntFunction": Internal.ClassInfo, "com.google.common.reflect.TypeParameter": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.VoidStartPlatformFeature": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeGenerationSettings": Internal.ClassInfo, "java.nio.file.DirectoryStream$Filter": Internal.ClassInfo, "net.minecraft.client.gui.screens.Screen": Internal.ClassInfo, "java.util.Spliterator$OfPrimitive": Internal.ClassInfo, "java.security.Signature": Internal.ClassInfo, "io.netty.channel.RecvByteBufAllocator": Internal.ClassInfo, "java.awt.geom.AffineTransform": Internal.ClassInfo, "net.minecraft.stats.RecipeBook": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSeenAdvancementsPacket$Action": Internal.ClassInfo, "net.minecraft.network.chat.ChatTypeDecoration": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.WallSide": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.MessageSenderKJS": Internal.ClassInfo, "net.minecraft.world.entity.player.ChatVisiblity": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeSource": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.network.ISerializable": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BlockPileFeature": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$CullStateShard": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonPressed": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectArrayList": Internal.ClassInfo, "net.minecraft.server.players.ServerOpList": Internal.ClassInfo, "com.probejs.jdoc.java.ClassInfo": Internal.ClassInfo, "net.minecraft.network.chat.MutableComponent": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SignText": Internal.ClassInfo, "net.minecraft.world.level.block.EnderChestBlock": Internal.ClassInfo, "net.minecraft.world.level.block.SculkSensorBlock": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.NearestVisibleLivingEntitySensor": Internal.ClassInfo, "java.net.URLConnection": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectIterator": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ArrowKnockbackEnchantment": Internal.ClassInfo, "net.minecraft.util.SignatureUpdater$Output": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeEnchantment": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent$EntityPlaceEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.InputFluid": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.RandomPatchConfiguration": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Opens$Modifier": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.SinglePieceStructure": Internal.ClassInfo, "java.lang.ModuleLayer$Controller": Internal.ClassInfo, "net.minecraft.util.ModCheck$Confidence": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$BlockStateBase": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.request.AbuseReportRequest$ThirdPartyServerInfo": Internal.ClassInfo, "net.minecraft.world.phys.shapes.ArrayVoxelShape": Internal.ClassInfo, "java.lang.RuntimeException": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.MultipartBlockStateGenerator": Internal.ClassInfo, "com.probejs.jdoc.document.DocumentField": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.ModelGenerator$Face": Internal.ClassInfo, "net.minecraft.world.entity.monster.Ghast": Internal.ClassInfo, "io.redspace.ironsspellbooks.damage.SpellDamageSource": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.featuresize.ThreeLayersFeatureSize": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.RecipeJS": Internal.ClassInfo, "net.minecraft.world.level.block.entity.TrappedChestBlockEntity": Internal.ClassInfo, "net.minecraft.world.item.enchantment.KnockbackEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.GenerationStep$Carving": Internal.ClassInfo, "net.minecraft.world.level.block.CarpetBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Variant": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$DepthTestStateShard": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainerRO": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.IngredientWrapper": Internal.ClassInfo, "net.minecraft.world.level.chunk.LevelChunk$EntityCreationType": Internal.ClassInfo, "net.minecraft.world.item.crafting.SingleItemRecipe$Serializer": Internal.ClassInfo, "com.mojang.brigadier.tree.LiteralCommandNode": Internal.ClassInfo, "net.minecraft.client.renderer.texture.TextureAtlas": Internal.ClassInfo, "net.minecraft.world.level.saveddata.maps.MapItemSavedData": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2LongFunction": Internal.ClassInfo, "org.joml.Quaternionf": Internal.ClassInfo, "org.joml.Quaterniond": Internal.ClassInfo, "java.awt.Point": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.HideJEIEventJS": Internal.ClassInfo, "org.joml.Matrix2dc": Internal.ClassInfo, "mezz.jei.api.gui.widgets.IRecipeExtrasBuilder": Internal.ClassInfo, "net.minecraft.client.gui.navigation.ScreenPosition": Internal.ClassInfo, "net.minecraft.network.PacketSendListener": Internal.ClassInfo, "journeymap.client.api.event.forge.EntityRadarUpdateEvent$EntityType": Internal.ClassInfo, "net.minecraft.world.item.enchantment.MendingEnchantment": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.ReplaceBlockConfiguration": Internal.ClassInfo, "com.mojang.blaze3d.vertex.BufferBuilder$DrawState": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseDragged$Post": Internal.ClassInfo, "net.minecraftforge.forgespi.locating.IModProvider": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2FloatFunction": Internal.ClassInfo, "dev.architectury.registry.registries.DeferredSupplier": Internal.ClassInfo, "net.minecraftforge.event.entity.SpawnPlacementRegisterEvent": Internal.ClassInfo, "java.lang.Math": Internal.ClassInfo, "me.jellysquid.mods.sodium.mixin.core.render.VertexFormatAccessor": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.MultifaceGrowthConfiguration": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.gen.properties.AddSpawnProperties": Internal.ClassInfo, "net.minecraft.world.level.block.AttachedStemBlock": Internal.ClassInfo, "net.minecraft.world.item.crafting.AbstractCookingRecipe": Internal.ClassInfo, "com.electronwill.nightconfig.core.utils.WriterSupplier": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.MatchingBlockTagPredicate": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.ServicesKeySet": Internal.ClassInfo, "net.minecraft.client.gui.GuiGraphics": Internal.ClassInfo, "net.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType": Internal.ClassInfo, "net.minecraft.world.level.block.EntityBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$MarkerOrMarked": Internal.ClassInfo, "net.minecraft.server.ServerFunctionManager": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.CastType": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.ButtonBlockBuilder": Internal.ClassInfo, "net.minecraft.client.renderer.blockentity.BlockEntityRenderer": Internal.ClassInfo, "net.minecraft.world.entity.ai.attributes.AttributeSupplier$Builder": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatIterator": Internal.ClassInfo, "net.minecraft.client.particle.ParticleProvider": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.BiasedToBottomHeight": Internal.ClassInfo, "io.netty.channel.ChannelOutboundBuffer": Internal.ClassInfo, "net.minecraft.commands.synchronization.brigadier.StringArgumentSerializer$Template": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeGenerationSettings$PlainBuilder": Internal.ClassInfo, "net.minecraft.world.entity.boss.EnderDragonPart": Internal.ClassInfo, "java.io.Writer": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.TrueInvisibilityEffect": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundDeleteChatPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.LivingEntityHurtEventJS": Internal.ClassInfo, "net.minecraft.world.level.biome.MobSpawnSettings$MobSpawnCost": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundTakeItemEntityPacket": Internal.ClassInfo, "net.minecraft.world.ContainerListener": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.magic.SpellSelectionManager": Internal.ClassInfo, "net.minecraftforge.registries.DeferredRegister$RegistryHolder": Internal.ClassInfo, "net.minecraft.nbt.Tag": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntPredicate": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.IglooStructure": Internal.ClassInfo, "net.minecraft.commands.arguments.TimeArgument$Info": Internal.ClassInfo, "net.minecraft.world.entity.monster.Spider": Internal.ClassInfo, "net.minecraftforge.registries.RegisterEvent$RegisterHelper": Internal.ClassInfo, "net.minecraft.tags.TagLoader$EntryWithSource": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$AddCallback": Internal.ClassInfo, "net.minecraft.world.item.NameTagItem": Internal.ClassInfo, "dev.latvian.mods.rhino.IdScriptableObject": Internal.ClassInfo, "net.minecraft.client.color.item.ItemColors": Internal.ClassInfo, "com.mojang.blaze3d.vertex.PoseStack": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.Structure": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterParticleProvidersEvent": Internal.ClassInfo, "java.util.ImmutableCollections$AbstractImmutableList": Internal.ClassInfo, "org.joml.Matrix2fc": Internal.ClassInfo, "mezz.jei.api.gui.inputs.IJeiInputHandler": Internal.ClassInfo, "net.minecraftforge.client.ExtendedServerListData": Internal.ClassInfo, "net.minecraft.world.entity.animal.Rabbit$Variant": Internal.ClassInfo, "com.google.gson.JsonSerializationContext": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShapedRecipe$Serializer": Internal.ClassInfo, "net.minecraft.world.entity.monster.Vindicator": Internal.ClassInfo, "dev.architectury.event.EventFactory$EventImpl": Internal.ClassInfo, "net.minecraft.world.item.DebugStickItem": Internal.ClassInfo, "net.minecraft.world.entity.animal.Fox": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.SimpleStateProvider": Internal.ClassInfo, "mezz.jei.api.gui.placement.VerticalAlignment": Internal.ClassInfo, "net.minecraft.client.multiplayer.chat.report.ReportingContext": Internal.ClassInfo, "net.minecraftforge.client.model.geometry.IGeometryBakingContext": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2BooleanFunction": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.FMLConstructModEvent": Internal.ClassInfo, "net.minecraft.world.entity.monster.Blaze": Internal.ClassInfo, "net.minecraftforge.common.util.BlockSnapshot": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.screen.AlignMode": Internal.ClassInfo, "java.lang.annotation.ElementType": Internal.ClassInfo, "com.google.common.collect.SetMultimap": Internal.ClassInfo, "dev.architectury.utils.OptionalSupplier": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingHurtEvent": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServerPing": Internal.ClassInfo, "net.minecraft.world.level.block.FaceAttachedHorizontalDirectionalBlock": Internal.ClassInfo, "java.lang.invoke.MethodType": Internal.ClassInfo, "io.netty.channel.ChannelConfig": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootDataResolver": Internal.ClassInfo, "net.minecraft.client.KeyMapping": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ArmorItemBuilder": Internal.ClassInfo, "net.minecraft.world.level.biome.MultiNoiseBiomeSourceParameterList": Internal.ClassInfo, "journeymap.client.api.display.ModPopupMenu": Internal.ClassInfo, "net.minecraft.core.particles.ParticleOptions$Deserializer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.BushFoliagePlacer": Internal.ClassInfo, "com.mojang.brigadier.context.CommandContextBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.CryingObsidianBlock": Internal.ClassInfo, "net.minecraft.world.BossEvent$BossBarColor": Internal.ClassInfo, "net.minecraftforge.client.extensions.common.IClientItemExtensions$FontContext": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedItemExtension": Internal.ClassInfo, "net.minecraft.server.players.StoredUserList": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BeaconBlockEntity": Internal.ClassInfo, "net.minecraft.client.model.geom.EntityModelSet": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBlockGetter": Internal.ClassInfo, "net.minecraft.commands.Commands$ParseFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemPickedUpEventJS": Internal.ClassInfo, "net.minecraft.world.item.BundleItem": Internal.ClassInfo, "net.minecraft.world.entity.Pose": Internal.ClassInfo, "java.lang.Long": Internal.ClassInfo, "net.minecraft.world.item.enchantment.TridentChannelingEnchantment": Internal.ClassInfo, "net.minecraft.server.players.StoredUserEntry": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2CharFunction": Internal.ClassInfo, "net.minecraft.world.item.enchantment.FrostWalkerEnchantment": Internal.ClassInfo, "com.electronwill.nightconfig.core.Config": Internal.ClassInfo, "net.minecraft.world.level.block.entity.JukeboxBlockEntity": Internal.ClassInfo, "com.mojang.brigadier.builder.RequiredArgumentBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.ReplaceablePredicate": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeMobEffect": Internal.ClassInfo, "java.util.ImmutableCollections$ListN": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.CustomSpell": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.CropBlockBuilder$SurviveCallback": Internal.ClassInfo, "net.minecraft.client.NarratorStatus": Internal.ClassInfo, "net.minecraft.network.chat.FormattedText": Internal.ClassInfo, "net.minecraft.util.valueproviders.UniformInt": Internal.ClassInfo, "com.mojang.authlib.minecraft.UserApiService$UserProperties": Internal.ClassInfo, "net.minecraft.util.FormattedCharSequence": Internal.ClassInfo, "net.minecraft.nbt.EndTag": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.functions.LootItemFunction$Builder": Internal.ClassInfo, "net.minecraftforge.event.entity.item.ItemEvent": Internal.ClassInfo, "net.minecraftforge.common.util.MutableHashedLinkedMap$BasicStrategy": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexConsumer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CaveCarverConfiguration": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.rule.blockentity.RuleBlockEntityModifier": Internal.ClassInfo, "net.minecraft.core.HolderSet$Named": Internal.ClassInfo, "journeymap.client.api.display.WaypointGroup": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SeagrassFeature": Internal.ClassInfo, "net.minecraft.world.level.lighting.LayerLightEventListener": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.data.CustomInstructionKeyframeData": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SculkCatalystBlockEntity$CatalystListener": Internal.ClassInfo, "net.minecraft.world.level.lighting.LightEventListener": Internal.ClassInfo, "com.mojang.serialization.codecs.RecordCodecBuilder$Mu": Internal.ClassInfo, "net.minecraft.world.level.block.RepeaterBlock": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.IRecipeSlotRichTooltipCallback": Internal.ClassInfo, "io.netty.channel.epoll.EpollEventLoopGroup": Internal.ClassInfo, "net.minecraftforge.eventbus.api.GenericEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.ConfiguredWorldCarver": Internal.ClassInfo, "io.netty.channel.ChannelMetadata": Internal.ClassInfo, "net.minecraft.world.level.block.PlayerWallHeadBlock": Internal.ClassInfo, "net.minecraft.world.level.block.entity.DispenserBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$Marker$Type": Internal.ClassInfo, "java.nio.channels.ScatteringByteChannel": Internal.ClassInfo, "net.minecraft.client.renderer.EffectInstance": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.SlabType": Internal.ClassInfo, "java.nio.file.WatchEvent": Internal.ClassInfo, "net.minecraft.world.entity.monster.warden.AngerLevel": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.LootItemCondition": Internal.ClassInfo, "net.minecraftforge.client.model.data.ModelData": Internal.ClassInfo, "net.minecraft.world.level.block.SculkVeinBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.NotPredicate": Internal.ClassInfo, "net.minecraft.world.ticks.TickPriority": Internal.ClassInfo, "com.google.gson.stream.JsonToken": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerContainerEvent$Close": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2BooleanFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.LivingEntityEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket": Internal.ClassInfo, "java.time.chrono.AbstractChronology": Internal.ClassInfo, "net.minecraft.world.entity.Mob": Internal.ClassInfo, "mezz.jei.api.gui.widgets.IScrollBoxWidget": Internal.ClassInfo, "com.mojang.datafixers.FamilyOptic": Internal.ClassInfo, "net.minecraft.world.level.block.entity.TheEndPortalBlockEntity": Internal.ClassInfo, "net.minecraft.world.flag.FeatureElement": Internal.ClassInfo, "net.minecraft.nbt.DoubleTag": Internal.ClassInfo, "net.minecraft.world.item.ShieldItem": Internal.ClassInfo, "dev.architectury.event.CompoundEventResult": Internal.ClassInfo, "net.minecraft.world.item.enchantment.WaterWalkerEnchantment": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.ConditionalFunction": Internal.ClassInfo, "java.util.function.BiFunction": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseInput": Internal.ClassInfo, "net.minecraft.world.level.block.SoulFireBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.SwampHutStructure": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.guiding_bolt.GuidingBoltEffect": Internal.ClassInfo, "dev.architectury.impl.ItemPropertiesExtensionImpl": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2IntFunction": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.PlanarSightEffect": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.ConsoleJS": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartCommandBlock": Internal.ClassInfo, "com.google.gson.Gson": Internal.ClassInfo, "io.netty.util.concurrent.OrderedEventExecutor": Internal.ClassInfo, "java.util.function.LongPredicate": Internal.ClassInfo, "net.minecraft.world.level.block.StandingSignBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.Squid": Internal.ClassInfo, "net.minecraft.client.particle.SingleQuadParticle": Internal.ClassInfo, "com.google.common.collect.BiMap": Internal.ClassInfo, "javax.security.auth.Destroyable": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.UniqueSpellBook": Internal.ClassInfo, "io.netty.channel.ChannelHandlerAdapter": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.OutputFluid": Internal.ClassInfo, "net.minecraft.network.chat.ChatType": Internal.ClassInfo, "io.netty.channel.EventLoop": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.IRecipeSlotDrawablesView": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.CustomStatBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BlockEntityType": Internal.ClassInfo, "net.minecraft.core.particles.ParticleGroup": Internal.ClassInfo, "net.minecraft.client.GraphicsStatus": Internal.ClassInfo, "io.redspace.ironsspellbooks.entity.mobs.goals.WarlockAttackGoal": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder": Internal.ClassInfo, "net.minecraft.server.players.IpBanListEntry": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SculkCatalystBlockEntity": Internal.ClassInfo, "com.mojang.authlib.ProfileLookupCallback": Internal.ClassInfo, "journeymap.client.api.display.DisplayType": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEventListenerRegistry": Internal.ClassInfo, "com.google.common.collect.ImmutableMultimap$Builder": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockRightClickedEventJS": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$ClearCallback": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetJigsawBlockPacket": Internal.ClassInfo, "org.apache.logging.slf4j.Log4jMarker": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2BooleanFunction": Internal.ClassInfo, "com.google.common.collect.AbstractMultimap": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockModel": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingChangeTargetEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.InputReplacement": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkDataEvent$Load": Internal.ClassInfo, "net.minecraft.world.level.block.ButtonBlock": Internal.ClassInfo, "net.minecraft.world.level.block.MossBlock": Internal.ClassInfo, "net.minecraft.core.LayeredRegistryAccess": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockMatchTest": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.consumables.NetherwardTinctureItem": Internal.ClassInfo, "net.minecraft.world.level.block.LoomBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.ModelGenerator": Internal.ClassInfo, "net.minecraft.world.entity.player.ProfilePublicKey": Internal.ClassInfo, "java.util.stream.LongStream$LongMapMultiConsumer": Internal.ClassInfo, "software.bernie.geckolib.core.animation.RawAnimation$Stage": Internal.ClassInfo, "dev.latvian.mods.kubejs.stages.StageCreationEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemStackKey": Internal.ClassInfo, "net.minecraftforge.registries.ForgeRegistry$Snapshot": Internal.ClassInfo, "net.minecraft.world.item.LingeringPotionItem": Internal.ClassInfo, "net.minecraft.world.ticks.ContainerSingleItem": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrownEgg": Internal.ClassInfo, "net.minecraft.world.entity.projectile.Arrow": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot": Internal.ClassInfo, "net.minecraft.world.item.KnowledgeBookItem": Internal.ClassInfo, "net.minecraft.world.level.block.CoralFanBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.predicates.CompositeLootItemCondition$Builder": Internal.ClassInfo, "net.minecraft.world.level.block.RootsBlock": Internal.ClassInfo, "net.minecraft.world.level.block.BubbleColumnBlock": Internal.ClassInfo, "io.netty.util.ByteProcessor$IndexNotOfProcessor": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.SensorType": Internal.ClassInfo, "com.mojang.brigadier.suggestion.Suggestion": Internal.ClassInfo, "net.minecraft.world.entity.monster.Monster": Internal.ClassInfo, "com.google.gson.reflect.TypeToken": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.EntityKJS": Internal.ClassInfo, "net.minecraft.core.IdMap": Internal.ClassInfo, "io.netty.channel.ChannelInboundHandler": Internal.ClassInfo, "java.time.temporal.TemporalQuery": Internal.ClassInfo, "net.minecraft.client.model.EntityModel": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$MouseButton$Post": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.number.NumberProvider": Internal.ClassInfo, "net.minecraft.world.level.chunk.PaletteResize": Internal.ClassInfo, "com.mojang.datafixers.TypedOptic$Element": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongUnaryOperator": Internal.ClassInfo, "java.lang.Enum$EnumDesc": Internal.ClassInfo, "java.lang.module.ModuleFinder": Internal.ClassInfo, "net.minecraftforge.common.capabilities.CapabilityDispatcher": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundMapItemDataPacket": Internal.ClassInfo, "net.minecraft.world.level.block.MelonBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.placement.StructurePlacementType": Internal.ClassInfo, "com.mojang.authlib.minecraft.TelemetrySession": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelSummary$BackupStatus": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer$FoliageAttachment": Internal.ClassInfo, "software.bernie.geckolib.core.animation.EasingType": Internal.ClassInfo, "net.minecraft.resources.RegistryFileCodec": Internal.ClassInfo, "net.minecraft.world.entity.monster.Drowned": Internal.ClassInfo, "java.util.Set": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$BooleanStateShard": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSelectAdvancementsTabPacket": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.Property": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay$TextRenderState": Internal.ClassInfo, "net.minecraft.nbt.LongTag": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.buffer.ExtendedVertexFormat": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.RedstoneSide": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.AttachFace": Internal.ClassInfo, "net.minecraftforge.client.event.ModelEvent$RegisterGeometryLoaders": Internal.ClassInfo, "net.minecraft.world.level.block.IronBarsBlock": Internal.ClassInfo, "mezz.jei.api.ingredients.IIngredientType": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.Boat": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.ChestBoat": Internal.ClassInfo, "net.minecraft.client.resources.metadata.animation.FrameSize": Internal.ClassInfo, "net.minecraft.world.entity.PathfinderMob": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.Node": Internal.ClassInfo, "net.minecraft.network.protocol.BundlerInfo": Internal.ClassInfo, "net.minecraft.world.level.entity.EntityAccess": Internal.ClassInfo, "net.minecraft.world.phys.shapes.CollisionContext": Internal.ClassInfo, "net.minecraft.world.level.block.entity.CalibratedSculkSensorBlockEntity": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.GenericBuilder": Internal.ClassInfo, "net.minecraft.world.entity.HumanoidArm": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeModelBaker": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.UpgradeType": Internal.ClassInfo, "com.google.gson.stream.JsonReader": Internal.ClassInfo, "com.google.gson.FieldAttributes": Internal.ClassInfo, "net.minecraft.world.level.block.HalfTransparentBlock": Internal.ClassInfo, "net.minecraft.world.level.block.WallSignBlock": Internal.ClassInfo, "net.minecraft.world.effect.MobEffects$1": Internal.ClassInfo, "net.minecraftforge.event.server.ServerAboutToStartEvent": Internal.ClassInfo, "net.minecraft.world.entity.monster.ZombifiedPiglin": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsNews": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.StartupEventJS": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$Phase": Internal.ClassInfo, "net.minecraftforge.registries.tags.ITag": Internal.ClassInfo, "software.bernie.geckolib.cache.object.GeoBone": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.CropBlockBuilder$ShapeBuilder": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleUnaryOperator": Internal.ClassInfo, "net.minecraftforge.common.capabilities.ICapabilitySerializable": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.functions.FunctionUserBuilder": Internal.ClassInfo, "net.minecraft.world.ticks.LevelChunkTicks": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.MultifaceGrowthFeature": Internal.ClassInfo, "net.minecraft.commands.arguments.ScoreHolderArgument$Info": Internal.ClassInfo, "net.minecraft.world.item.Vanishable": Internal.ClassInfo, "java.lang.Comparable": Internal.ClassInfo, "com.squoshi.irons_spells_js.util.ISSKJSUtils$SoundEventHolder": Internal.ClassInfo, "net.minecraft.world.item.TooltipFlag": Internal.ClassInfo, "java.security.CodeSource": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$Parameter": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortCollection": Internal.ClassInfo, "net.minecraft.client.OptionInstance$ValueSet": Internal.ClassInfo, "net.minecraft.client.renderer.DimensionSpecialEffects$SkyType": Internal.ClassInfo, "net.minecraft.world.item.crafting.ShieldDecorationRecipe": Internal.ClassInfo, "net.minecraft.world.entity.AnimationState": Internal.ClassInfo, "net.minecraft.world.entity.SpawnPlacements$Type": Internal.ClassInfo, "net.minecraft.server.packs.repository.Pack": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$LayeringStateShard": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.AbstractHugeMushroomFeature": Internal.ClassInfo, "dev.latvian.mods.rhino.JavaMembers$MethodInfo": Internal.ClassInfo, "net.minecraft.core.particles.DustParticleOptionsBase": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.GenericDescJS": Internal.ClassInfo, "net.minecraft.world.entity.ai.targeting.TargetingConditions": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.SimpleLevelEventJS": Internal.ClassInfo, "dev.latvian.mods.unit.Unit": Internal.ClassInfo, "net.minecraft.world.level.block.WallBannerBlock": Internal.ClassInfo, "net.minecraft.world.entity.monster.ZombieVillager": Internal.ClassInfo, "java.security.spec.AlgorithmParameterSpec": Internal.ClassInfo, "net.minecraft.core.SectionPos": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BlockStateProperties": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.viewport.Viewport": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.EnderDragonPhase": Internal.ClassInfo, "net.minecraft.data.PackOutput$Target": Internal.ClassInfo, "org.apache.maven.artifact.repository.Authentication": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedBlockExtension": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.ExplosionEventJS$Before": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$Clone": Internal.ClassInfo, "org.joml.Matrix4x3fc": Internal.ClassInfo, "net.minecraft.world.level.block.SeaPickleBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.SculkPatchConfiguration": Internal.ClassInfo, "net.minecraft.world.level.block.HoneyBlock": Internal.ClassInfo, "io.netty.buffer.SizeClassesMetric": Internal.ClassInfo, "net.minecraftforge.event.TickEvent$ClientTickEvent": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemOverride$Predicate": Internal.ClassInfo, "net.minecraft.core.RegistryAccess$RegistryEntry": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.WeepingVinesFeature": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelStorageSource": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.ConditionContainer": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.SkeletonHorse": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockBehaviour$StateArgumentPredicate": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.OreFeature": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Render": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuSlot": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexSorting": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.KeyFrameEvent": Internal.ClassInfo, "io.netty.channel.ChannelInboundInvoker": Internal.ClassInfo, "net.minecraft.client.gui.Font$DisplayMode": Internal.ClassInfo, "com.mojang.brigadier.exceptions.Dynamic3CommandExceptionType": Internal.ClassInfo, "net.minecraft.world.entity.raid.Raids": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.StructureSet": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.special.ShapelessKubeJSRecipe": Internal.ClassInfo, "net.minecraft.client.PrioritizeChunkUpdates": Internal.ClassInfo, "io.netty.channel.ChannelHandler": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pieces.StructurePieceType": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortConsumer": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent": Internal.ClassInfo, "net.minecraft.world.level.block.entity.EnderChestBlockEntity": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.SpellModificationBuilder$ModifiedPreCastConditionsCallback": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SpikeFeature": Internal.ClassInfo, "com.mojang.datafixers.TypeRewriteRule": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedLiquidBlockExtension": Internal.ClassInfo, "net.minecraft.world.item.SplashPotionItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FluidBucketItemBuilder": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.ItemOverrides": Internal.ClassInfo, "dev.latvian.mods.unit.function.FunctionFactory$FuncSupplier": Internal.ClassInfo, "net.minecraft.world.level.biome.MobSpawnSettings": Internal.ClassInfo, "net.minecraft.world.level.LevelWriter": Internal.ClassInfo, "net.minecraft.commands.arguments.ResourceKeyArgument$Info": Internal.ClassInfo, "net.minecraft.world.entity.RiderShieldingMount": Internal.ClassInfo, "java.nio.channels.Channel": Internal.ClassInfo, "dev.latvian.mods.rhino.Context": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.LootEventJS": Internal.ClassInfo, "net.minecraft.core.BlockSource": Internal.ClassInfo, "net.minecraft.world.level.material.MapColor$Brightness": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.MultipartBlockStateGenerator$Part": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.poi.PoiType": Internal.ClassInfo, "net.minecraft.server.level.ThreadedLevelLightEngine": Internal.ClassInfo, "java.security.SecureRandomParameters": Internal.ClassInfo, "net.minecraft.world.entity.monster.Phantom": Internal.ClassInfo, "com.mojang.realmsclient.gui.task.DataFetcher$Task": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.DynamicRecipeComponent$Factory": Internal.ClassInfo, "net.minecraftforge.common.IExtensibleEnum": Internal.ClassInfo, "net.minecraft.world.entity.ai.memory.WalkTarget": Internal.ClassInfo, "java.util.concurrent.CompletionStage": Internal.ClassInfo, "net.minecraft.world.level.block.entity.ChiseledBookShelfBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.SolidPredicate": Internal.ClassInfo, "net.minecraft.network.ConnectionProtocol": Internal.ClassInfo, "net.minecraft.world.level.block.SmithingTableBlock": Internal.ClassInfo, "journeymap.client.api.util.UIState": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.predicate.BlockIDPredicate$PropertyObject": Internal.ClassInfo, "net.minecraft.client.renderer.texture.OverlayTexture": Internal.ClassInfo, "java.awt.geom.Dimension2D": Internal.ClassInfo, "dev.latvian.mods.unit.function.FunctionFactory": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.NBTSerializable": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.InkItem": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ProtectionEnchantment$Type": Internal.ClassInfo, "org.joml.Matrix3dc": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventResult$Type": Internal.ClassInfo, "java.lang.reflect.Constructor": Internal.ClassInfo, "net.minecraft.world.level.block.WebBlock": Internal.ClassInfo, "net.minecraftforge.registries.IdMappingEvent": Internal.ClassInfo, "java.util.OptionalLong": Internal.ClassInfo, "net.minecraft.world.entity.monster.piglin.AbstractPiglin": Internal.ClassInfo, "net.minecraft.world.level.block.BuddingAmethystBlock": Internal.ClassInfo, "net.minecraftforge.common.ToolAction": Internal.ClassInfo, "java.nio.Buffer": Internal.ClassInfo, "net.minecraft.world.level.block.CoralPlantBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.GravityProcessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ReferenceSet": Internal.ClassInfo, "net.minecraft.util.LazyLoadedValue": Internal.ClassInfo, "net.minecraftforge.common.util.NonNullPredicate": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetEntityLinkPacket": Internal.ClassInfo, "com.mojang.brigadier.arguments.LongArgumentType": Internal.ClassInfo, "net.minecraft.world.entity.ai.goal.Goal$Flag": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarrationElementOutput": Internal.ClassInfo, "net.minecraft.world.entity.PlayerRideableJumping": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.CarpetBlockBuilder": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundGameEventPacket$Type": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.forge.LivingEntityDropsEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.VegetationPatchFeature": Internal.ClassInfo, "com.mojang.authlib.minecraft.UserApiService": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.LargeDripstoneConfiguration": Internal.ClassInfo, "net.minecraft.world.BossEvent$BossBarOverlay": Internal.ClassInfo, "net.minecraftforge.event.entity.living.AnimalTameEvent": Internal.ClassInfo, "org.joml.Matrix4x3dc": Internal.ClassInfo, "com.mojang.serialization.KeyCompressor": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.WallBlockBuilder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.WorldGenerationContext": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.quad.ModelQuadView": Internal.ClassInfo, "net.minecraft.client.tutorial.TutorialSteps": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationSelector": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.ExplosionJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundGameEventPacket": Internal.ClassInfo, "java.util.SortedSet": Internal.ClassInfo, "com.mojang.serialization.codecs.RecordCodecBuilder$Instance": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.MetricSampler$SamplerResult": Internal.ClassInfo, "com.mojang.brigadier.exceptions.CommandExceptionType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pieces.PiecesContainer": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.LootBuilderPool": Internal.ClassInfo, "net.minecraftforge.registries.tags.ITagManager": Internal.ClassInfo, "net.minecraft.server.packs.resources.PreparableReloadListener$PreparationBarrier": Internal.ClassInfo, "org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.StrongholdStructure": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationUiState": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonChargePlayerPhase": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.MinecartSpawner": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.AxeItemBuilder": Internal.ClassInfo, "journeymap.client.api.display.ModPopupMenu$Action": Internal.ClassInfo, "java.util.function.ToLongFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap": Internal.ClassInfo, "com.google.common.collect.ImmutableSetMultimap": Internal.ClassInfo, "net.minecraft.world.flag.FeatureFlag": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockFaceUV": Internal.ClassInfo, "net.minecraft.world.level.GameRules$GameRuleTypeVisitor": Internal.ClassInfo, "net.minecraft.world.entity.Entity$RemovalReason": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PermissionsChangedEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.server.CommandEventJS": Internal.ClassInfo, "net.minecraft.world.item.TridentItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSelectTradePacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.WindowKJS": Internal.ClassInfo, "net.minecraft.world.entity.monster.hoglin.Hoglin": Internal.ClassInfo, "java.security.Provider": Internal.ClassInfo, "dev.latvian.mods.unit.MutableNumberUnit": Internal.ClassInfo, "net.minecraft.client.resources.SplashManager": Internal.ClassInfo, "net.minecraft.client.model.geom.PartPose": Internal.ClassInfo, "net.minecraft.world.level.block.BambooSaplingBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.PressurePlateBlockBuilder": Internal.ClassInfo, "net.minecraftforge.common.world.ForgeBiomeModifiers$AddSpawnsBiomeModifier": Internal.ClassInfo, "net.minecraftforge.event.level.LevelEvent$Save": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.TimeComponent": Internal.ClassInfo, "com.mojang.brigadier.context.ParsedArgument": Internal.ClassInfo, "net.minecraft.world.item.enchantment.FishingSpeedEnchantment": Internal.ClassInfo, "net.minecraft.CrashReportDetail": Internal.ClassInfo, "io.redspace.ironsspellbooks.registries.PotionRegistry": Internal.ClassInfo, "net.minecraft.world.level.block.entity.SculkSensorBlockEntity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration": Internal.ClassInfo, "net.minecraft.client.renderer.RenderBuffers": Internal.ClassInfo, "net.minecraft.world.WorldlyContainer": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.PistonType": Internal.ClassInfo, "java.lang.ModuleLayer": Internal.ClassInfo, "net.minecraft.world.item.FoodOnAStickItem": Internal.ClassInfo, "net.minecraft.server.level.ServerLevel": Internal.ClassInfo, "net.minecraft.world.level.saveddata.SavedData": Internal.ClassInfo, "net.minecraftforge.event.AddPackFindersEvent": Internal.ClassInfo, "net.minecraft.network.chat.RemoteChatSession": Internal.ClassInfo, "net.minecraftforge.common.util.NonNullConsumer": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.EnchantmentBuilder$DamageProtectionFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.NoOpFeature": Internal.ClassInfo, "net.minecraft.world.level.material.LavaFluid": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootDataId": Internal.ClassInfo, "net.minecraft.world.level.levelgen.GenerationStep$Decoration": Internal.ClassInfo, "com.mojang.datafixers.kinds.Applicative": Internal.ClassInfo, "net.minecraft.world.level.storage.LevelStorageSource$LevelStorageAccess": Internal.ClassInfo, "java.lang.reflect.GenericDeclaration": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.world.BiomeSeedProvider": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$CharacterTyped$Pre": Internal.ClassInfo, "net.minecraftforge.client.model.data.ModelDataManager": Internal.ClassInfo, "net.minecraft.world.level.block.MultifaceBlock": Internal.ClassInfo, "net.minecraft.client.player.LocalPlayer": Internal.ClassInfo, "net.minecraftforge.forgespi.language.ModFileScanData$AnnotationData": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$CharacterTyped": Internal.ClassInfo, "net.minecraft.world.level.Explosion": Internal.ClassInfo, "net.minecraft.core.Holder$Reference": Internal.ClassInfo, "java.util.function.LongConsumer": Internal.ClassInfo, "net.minecraft.core.GlobalPos": Internal.ClassInfo, "net.minecraft.world.level.block.TurtleEggBlock": Internal.ClassInfo, "net.minecraft.client.model.Model": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundContainerSetContentPacket": Internal.ClassInfo, "net.minecraft.client.gui.screens.worldselection.WorldCreationUiState$WorldTypeEntry": Internal.ClassInfo, "java.lang.Class": Internal.ClassInfo, "java.util.IntSummaryStatistics": Internal.ClassInfo, "net.minecraftforge.registries.RegistryObject": Internal.ClassInfo, "com.blamejared.controlling.mixin.AccessKeyMapping": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseButtonPressed$Post": Internal.ClassInfo, "com.mojang.brigadier.CommandDispatcher": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.HeightRangePlacement": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemSmeltedEventJS": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundCommandSuggestionPacket": Internal.ClassInfo, "net.minecraft.world.level.block.StructureVoidBlock": Internal.ClassInfo, "net.minecraft.world.phys.shapes.Shapes$DoubleLineConsumer": Internal.ClassInfo, "net.minecraft.world.scores.Team": Internal.ClassInfo, "dev.latvian.mods.kubejs.platform.forge.ingredient.KubeJSIngredientSerializer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.synth.NormalNoise": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.CommentedFileConfigBuilder": Internal.ClassInfo, "java.util.ImmutableCollections$AbstractImmutableSet": Internal.ClassInfo, "net.minecraft.network.chat.FormattedText$ContentConsumer": Internal.ClassInfo, "net.minecraft.client.player.AbstractClientPlayer": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.BuilderFactory": Internal.ClassInfo, "net.minecraft.util.profiling.metrics.MetricSampler$ThresholdTest": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.ChestEventJS": Internal.ClassInfo, "java.time.zone.ZoneOffsetTransition": Internal.ClassInfo, "net.minecraft.world.level.block.PoweredBlock": Internal.ClassInfo, "net.minecraft.world.entity.monster.Giant": Internal.ClassInfo, "cpw.mods.jarhandling.SecureJar$ModuleDataProvider": Internal.ClassInfo, "com.electronwill.nightconfig.core.ConfigFormat": Internal.ClassInfo, "net.minecraft.world.level.block.CraftingTableBlock": Internal.ClassInfo, "net.minecraft.world.level.block.BeetrootBlock": Internal.ClassInfo, "com.mojang.blaze3d.vertex.PoseStack$Pose": Internal.ClassInfo, "java.util.function.ObjLongConsumer": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2DoubleFunction": Internal.ClassInfo, "journeymap.client.api.model.MapImage": Internal.ClassInfo, "dev.latvian.mods.unit.token.CharStream": Internal.ClassInfo, "net.minecraft.world.item.ItemStack": Internal.ClassInfo, "com.google.gson.TypeAdapterFactory": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2ByteFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.EndCityStructure": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab": Internal.ClassInfo, "net.minecraft.world.level.levelgen.VerticalAnchor$AboveBottom": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.CastResult$Type": Internal.ClassInfo, "net.minecraft.world.item.crafting.SingleItemRecipe": Internal.ClassInfo, "java.text.NumberFormat": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.Structure$GenerationContext": Internal.ClassInfo, "net.minecraft.world.entity.monster.Endermite": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundAddExperienceOrbPacket": Internal.ClassInfo, "com.mojang.datafixers.functions.PointFree": Internal.ClassInfo, "io.redspace.ironsspellbooks.particle.ZapParticleOption": Internal.ClassInfo, "java.net.FileNameMap": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.pools.StructureTemplatePool": Internal.ClassInfo, "top.theillusivec4.curios.api.SlotContext": Internal.ClassInfo, "dev.latvian.mods.kubejs.script.ScriptTypePredicate": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.DripstoneThickness": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.SurfaceWaterDepthFilter": Internal.ClassInfo, "net.minecraft.world.ticks.LevelTickAccess": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$LightmapStateShard": Internal.ClassInfo, "org.lwjgl.PointerBuffer": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.ScheduledEvents$ScheduledEvent": Internal.ClassInfo, "net.minecraft.client.renderer.debug.GameEventListenerRenderer": Internal.ClassInfo, "net.minecraft.world.item.SpyglassItem": Internal.ClassInfo, "io.netty.channel.RecvByteBufAllocator$Handle": Internal.ClassInfo, "java.lang.String$CaseInsensitiveComparator": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.DesertWellFeature": Internal.ClassInfo, "net.minecraft.world.level.block.piston.PistonMovingBlockEntity": Internal.ClassInfo, "java.io.BufferedReader": Internal.ClassInfo, "net.minecraft.world.level.block.BarrierBlock": Internal.ClassInfo, "net.minecraft.world.item.BookItem": Internal.ClassInfo, "net.minecraft.core.particles.SimpleParticleType": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.UnderwaterMagmaFeature": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonSittingAttackingPhase": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntMap$Entry": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemDroppedEventJS": Internal.ClassInfo, "net.minecraft.data.DataGenerator$PackGenerator": Internal.ClassInfo, "net.minecraft.world.entity.NeutralMob": Internal.ClassInfo, "net.minecraft.world.level.block.SkullBlock": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeDispensibleContainerItem": Internal.ClassInfo, "java.util.function.IntPredicate": Internal.ClassInfo, "net.minecraftforge.common.util.TriPredicate": Internal.ClassInfo, "net.minecraft.commands.synchronization.ArgumentTypeInfo": Internal.ClassInfo, "org.joml.Matrix3fc": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonLandingApproachPhase": Internal.ClassInfo, "net.minecraftforge.common.crafting.IShapedRecipe": Internal.ClassInfo, "com.mojang.authlib.properties.PropertyMap": Internal.ClassInfo, "com.mojang.serialization.DataResult$Instance": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CaveWorldCarver": Internal.ClassInfo, "net.minecraft.world.level.levelgen.heightproviders.WeightedListHeight": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractFurnaceBlock": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServerPlayerLists": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ReferenceMap$Entry": Internal.ClassInfo, "java.lang.Thread$State": Internal.ClassInfo, "com.mojang.datafixers.RewriteResult": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.KubeJSGUI": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.PyromancerArmorItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateAttributesPacket": Internal.ClassInfo, "com.google.common.collect.Multiset$Entry": Internal.ClassInfo, "java.text.Format$Field": Internal.ClassInfo, "net.minecraft.world.entity.Display$TextDisplay$CachedInfo": Internal.ClassInfo, "net.minecraft.world.entity.Display$IntInterpolator": Internal.ClassInfo, "net.minecraft.world.level.block.WeatheringCopper": Internal.ClassInfo, "java.util.List": Internal.ClassInfo, "net.minecraft.world.level.storage.CommandStorage": Internal.ClassInfo, "com.squoshi.irons_spells_js.util.ClientInitISSKJS": Internal.ClassInfo, "net.minecraft.world.level.block.DoubleBlockCombiner$Combiner": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonHoldingPatternPhase": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket$Parameters": Internal.ClassInfo, "net.minecraft.world.entity.ai.control.LookControl": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.EntitySpawnedEventJS": Internal.ClassInfo, "net.minecraft.world.level.block.LayeredCauldronBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundAwardStatsPacket": Internal.ClassInfo, "net.minecraft.world.entity.ai.control.Control": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacer$FoliageSetter": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.mixin.forge.RecipeManagerAccessor": Internal.ClassInfo, "net.minecraft.commands.synchronization.brigadier.DoubleArgumentInfo$Template": Internal.ClassInfo, "net.minecraft.world.inventory.DispenserMenu": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEvent": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$ShaderStateShard": Internal.ClassInfo, "java.lang.Iterable": Internal.ClassInfo, "org.slf4j.spi.LocationAwareLogger": Internal.ClassInfo, "net.minecraft.commands.synchronization.brigadier.LongArgumentInfo": Internal.ClassInfo, "net.minecraft.client.particle.ParticleRenderType": Internal.ClassInfo, "net.minecraftforge.event.level.LevelEvent$Unload": Internal.ClassInfo, "net.minecraft.world.level.block.FrogspawnBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate$StructureBlockInfo": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuClickEvent": Internal.ClassInfo, "dev.architectury.registry.level.biome.forge.BiomeModificationsImpl$BiomeModifierImpl": Internal.ClassInfo, "net.minecraft.client.multiplayer.ServerData$ServerPackStatus": Internal.ClassInfo, "net.minecraft.world.entity.EquipmentSlot$Type": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.GoldCrownArmorItem": Internal.ClassInfo, "net.minecraft.world.entity.ai.Brain$Provider": Internal.ClassInfo, "net.minecraft.world.level.block.entity.JigsawBlockEntity$JointType": Internal.ClassInfo, "net.minecraft.client.gui.components.Tooltip": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundInitializeBorderPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration$TargetBlockState": Internal.ClassInfo, "java.nio.file.OpenOption": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormatElement$Usage": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootDataManager": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.entity.BlockEntityEventCallback": Internal.ClassInfo, "net.minecraftforge.event.ItemAttributeModifierEvent": Internal.ClassInfo, "net.minecraft.world.item.BoatItem": Internal.ClassInfo, "java.util.Collections$UnmodifiableMap": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.IntegerProperty": Internal.ClassInfo, "net.minecraft.world.inventory.AnvilMenu": Internal.ClassInfo, "java.io.Closeable": Internal.ClassInfo, "net.minecraftforge.eventbus.api.Event$Result": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.HugeBrownMushroomFeature": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.MobEffectBuilder$EffectTickCallback": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.Mule": Internal.ClassInfo, "net.minecraft.world.level.block.state.pattern.BlockPattern": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryProperty$ServerType": Internal.ClassInfo, "net.minecraft.world.level.block.ScaffoldingBlock": Internal.ClassInfo, "net.minecraft.world.level.CollisionGetter": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeTransformation": Internal.ClassInfo, "net.minecraft.world.entity.npc.AbstractVillager": Internal.ClassInfo, "java.nio.file.WatchEvent$Kind": Internal.ClassInfo, "dev.latvian.mods.rhino.ScriptableObject": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.ClientEventJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.PaintingVariantBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.JukeboxBlock": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.BurningDashEffect": Internal.ClassInfo, "dev.latvian.mods.kubejs.server.tag.TagEventJS": Internal.ClassInfo, "dev.kosmx.playerAnim.api.firstPerson.FirstPersonMode": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.render.viewport.CameraTransform": Internal.ClassInfo, "net.minecraft.world.item.Instrument": Internal.ClassInfo, "java.math.BigInteger": Internal.ClassInfo, "com.mojang.datafixers.types.Type$TypeMatcher": Internal.ClassInfo, "net.minecraftforge.client.model.data.ModelProperty": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BedPart": Internal.ClassInfo, "com.electronwill.nightconfig.core.CommentedConfig$Entry": Internal.ClassInfo, "net.minecraft.stats.ServerRecipeBook": Internal.ClassInfo, "com.google.common.collect.ImmutableMap$IteratorBasedImmutableMap": Internal.ClassInfo, "net.minecraft.world.entity.monster.Witch": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.DoorHingeSide": Internal.ClassInfo, "net.minecraft.world.entity.animal.TropicalFish$Base": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$ItemDisplayParameters": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ReferenceCollection": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ProtectionEnchantment": Internal.ClassInfo, "net.minecraft.world.item.StandingAndWallBlockItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ShortFunction": Internal.ClassInfo, "net.minecraft.world.item.DyeColor": Internal.ClassInfo, "dev.latvian.mods.rhino.IdFunctionObject": Internal.ClassInfo, "net.minecraft.util.ExtraCodecs$LazyInitializedCodec": Internal.ClassInfo, "net.minecraft.world.food.FoodData": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkDataEvent$Save": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeBakedModel": Internal.ClassInfo, "net.minecraftforge.fml.config.IConfigSpec": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundUseItemOnPacket": Internal.ClassInfo, "net.minecraft.client.OptionInstance$CycleableValueSet": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2ReferenceFunction": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractSkullBlock": Internal.ClassInfo, "net.minecraft.world.item.context.UseOnContext": Internal.ClassInfo, "com.google.gson.stream.JsonWriter": Internal.ClassInfo, "net.minecraft.sounds.Music": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2FloatFunction": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.CustomSpell$CastClientContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.AlwaysTrueTest": Internal.ClassInfo, "net.minecraft.world.item.crafting.Ingredient$Value": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BonusChestFeature": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.SlabBlockBuilder": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2IntFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.CoralFeature": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.TwistingVinesConfig": Internal.ClassInfo, "net.minecraft.world.level.block.SculkSpreader": Internal.ClassInfo, "net.minecraft.client.gui.spectator.SpectatorMenuCategory": Internal.ClassInfo, "net.minecraft.world.level.material.FlowingFluid": Internal.ClassInfo, "net.minecraft.world.level.block.NetherWartBlock": Internal.ClassInfo, "dev.latvian.mods.rhino.util.Remapper": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$Sampler": Internal.ClassInfo, "net.minecraft.server.packs.repository.PackRepository": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntOpenHashSet": Internal.ClassInfo, "net.minecraft.world.entity.animal.SnowGolem": Internal.ClassInfo, "net.minecraft.client.multiplayer.ProfileKeyPairManager": Internal.ClassInfo, "net.minecraft.util.SignatureValidator": Internal.ClassInfo, "net.minecraft.world.entity.npc.Npc": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$TwoArgumentSimpleFunction$Type": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.DeltaFeature": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockTintFunction$Fixed": Internal.ClassInfo, "net.minecraft.world.level.block.state.pattern.BlockPattern$BlockPatternMatch": Internal.ClassInfo, "net.minecraft.world.entity.monster.hoglin.HoglinBase": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2ReferenceFunction": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetTimePacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.DetectorBlock$Builder": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.ThunderstormEffect": Internal.ClassInfo, "net.minecraftforge.registries.IdMappingEvent$ModRemapping": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.config.DefaultConfig": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgePlayer": Internal.ClassInfo, "java.util.Date": Internal.ClassInfo, "java.util.Random": Internal.ClassInfo, "com.mojang.brigadier.arguments.StringArgumentType$StringType": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundLevelParticlesPacket": Internal.ClassInfo, "java.nio.channels.FileLock": Internal.ClassInfo, "java.util.Locale$FilteringMode": Internal.ClassInfo, "mezz.jei.api.ingredients.IIngredientRenderer": Internal.ClassInfo, "java.time.chrono.IsoChronology": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.curios.PoisonwardRing": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntConsumer": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.SoundEventBuilder": Internal.ClassInfo, "java.util.zip.ZipEntry": Internal.ClassInfo, "net.minecraft.world.item.ArmorItem$Type": Internal.ClassInfo, "net.minecraft.tags.ItemTags": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.BlockPathTypes": Internal.ClassInfo, "io.redspace.ironsspellbooks.entity.mobs.SupportMob": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.Property$Value": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2IntFunction": Internal.ClassInfo, "net.minecraft.world.level.LevelReader": Internal.ClassInfo, "java.lang.ref.Reference": Internal.ClassInfo, "net.minecraft.nbt.ShortTag": Internal.ClassInfo, "net.minecraft.world.level.block.DoublePlantBlock": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.ComposableEntryContainer": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.FortifyEffect": Internal.ClassInfo, "net.minecraft.world.level.block.ComparatorBlock": Internal.ClassInfo, "net.minecraft.world.item.crafting.MapExtendingRecipe": Internal.ClassInfo, "net.minecraftforge.client.event.ClientChatReceivedEvent": Internal.ClassInfo, "net.minecraft.world.level.LevelAccessor": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2DoubleFunction": Internal.ClassInfo, "net.minecraft.commands.CommandSource": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.PlacementModifier": Internal.ClassInfo, "net.minecraft.world.inventory.EnchantmentMenu": Internal.ClassInfo, "net.minecraft.world.level.GameRules$BooleanValue": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.EntityEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.RootSystemFeature": Internal.ClassInfo, "org.spongepowered.asm.mixin.injection.callback.Cancellable": Internal.ClassInfo, "net.minecraft.client.StringSplitter": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.TrueBlockPredicate": Internal.ClassInfo, "org.lwjgl.stb.STBTTFontinfo$Buffer": Internal.ClassInfo, "net.minecraft.util.Unit": Internal.ClassInfo, "dev.latvian.mods.rhino.util.CustomJavaToJsWrapperProvider": Internal.ClassInfo, "java.lang.module.ModuleDescriptor": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.WithPersistentData": Internal.ClassInfo, "net.minecraft.world.level.block.EndRodBlock": Internal.ClassInfo, "io.redspace.ironsspellbooks.gui.overlays.SpellSelection": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.AbstractIntCollection": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundOpenBookPacket": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.LootPoolEntry": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.util.NBTUtils": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.ClassWrapper": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2IntFunction": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockModel$GuiLight": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.consumables.FireAleItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.FoodEatenEventJS": Internal.ClassInfo, "net.minecraft.client.resources.PaintingTextureManager": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.ShrivingStoneItem": Internal.ClassInfo, "net.minecraftforge.event.server.ServerStoppingEvent": Internal.ClassInfo, "net.minecraft.world.level.block.RailBlock": Internal.ClassInfo, "net.minecraft.world.level.lighting.LayerLightSectionStorage$SectionType": Internal.ClassInfo, "net.minecraftforge.common.data.ExistingFileHelper": Internal.ClassInfo, "net.minecraft.client.gui.screens.inventory.MenuAccess": Internal.ClassInfo, "java.util.PrimitiveIterator": Internal.ClassInfo, "net.minecraft.world.item.ProjectileWeaponItem": Internal.ClassInfo, "com.mojang.datafixers.functions.PointFreeRule": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.NecronomiconSpellBook": Internal.ClassInfo, "java.util.function.DoubleSupplier": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2CharFunction": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$MouseScrolled$Pre": Internal.ClassInfo, "net.minecraft.client.particle.Particle": Internal.ClassInfo, "com.google.common.cache.Cache": Internal.ClassInfo, "net.minecraft.world.inventory.FurnaceMenu": Internal.ClassInfo, "java.nio.channels.FileChannel": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.RecipeComponentWithParent": Internal.ClassInfo, "com.mojang.serialization.MapLike": Internal.ClassInfo, "net.minecraft.world.level.levelgen.presets.WorldPreset": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.ShearsItemBuilder": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.SpellModificationBuilder$ModifiedServerPreCastCallback": Internal.ClassInfo, "java.util.function.IntBinaryOperator": Internal.ClassInfo, "net.minecraft.world.inventory.MenuConstructor": Internal.ClassInfo, "net.minecraft.world.entity.ItemSteerable": Internal.ClassInfo, "net.minecraft.world.entity.decoration.ItemFrame": Internal.ClassInfo, "net.minecraftforge.fml.loading.progress.ProgressMeter": Internal.ClassInfo, "java.nio.file.DirectoryStream": Internal.ClassInfo, "net.minecraft.world.level.material.MapColor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPickItemPacket": Internal.ClassInfo, "java.io.DataOutputStream": Internal.ClassInfo, "dev.latvian.mods.rhino.MemberType": Internal.ClassInfo, "net.minecraft.world.level.block.AbstractBannerBlock": Internal.ClassInfo, "net.minecraft.data.PackOutput$PathProvider": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BlockBlobFeature": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.BlockSetType": Internal.ClassInfo, "net.minecraft.world.level.gameevent.EntityPositionSource$Type": Internal.ClassInfo, "java.lang.Void": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.NetherForestVegetationConfig": Internal.ClassInfo, "net.minecraft.client.ClientRecipeBook": Internal.ClassInfo, "java.io.Externalizable": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.BlockPileConfiguration": Internal.ClassInfo, "dev.kosmx.playerAnim.api.IPlayer": Internal.ClassInfo, "net.minecraft.core.HolderLookup$Provider": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.entity.BlockEntityInfo": Internal.ClassInfo, "net.minecraft.commands.CommandSigningContext": Internal.ClassInfo, "net.minecraft.client.gui.screens.Screen$NarratableSearchResult": Internal.ClassInfo, "net.minecraftforge.event.entity.living.MobSpawnEvent$FinalizeSpawn": Internal.ClassInfo, "net.minecraftforge.fml.IExtensionPoint": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ingredientaction.IngredientAction": Internal.ClassInfo, "org.joml.Vector4fc": Internal.ClassInfo, "net.minecraft.world.item.ArmorMaterials": Internal.ClassInfo, "net.minecraft.world.level.block.HopperBlock": Internal.ClassInfo, "net.minecraft.util.random.WeightedRandomList": Internal.ClassInfo, "net.minecraft.world.item.BucketItem": Internal.ClassInfo, "net.minecraft.world.level.gameevent.GameEventListenerRegistry$ListenerVisitor": Internal.ClassInfo, "com.electronwill.nightconfig.core.io.ParsingMode": Internal.ClassInfo, "net.minecraft.world.level.levelgen.NoiseRouter": Internal.ClassInfo, "net.minecraft.util.valueproviders.IntProviderType": Internal.ClassInfo, "java.util.Collections$SynchronizedMap": Internal.ClassInfo, "net.minecraft.client.renderer.blockentity.BlockEntityRendererProvider": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2ByteFunction": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.EchoingStrikesEffect": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientSuggestionProvider": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.AfterEntityFallenOnBlockCallbackJS": Internal.ClassInfo, "com.blamejared.controlling.mixin.AccessInputConstantsKey": Internal.ClassInfo, "java.text.SimpleDateFormat": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2LongFunction": Internal.ClassInfo, "net.minecraft.world.item.SpawnEggItem": Internal.ClassInfo, "dev.architectury.extensions.injected.InjectedFluidExtension": Internal.ClassInfo, "net.minecraft.world.level.block.SlimeBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetBorderCenterPacket": Internal.ClassInfo, "net.minecraftforge.common.util.Lazy$Fast": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.request.AbuseReportRequest$RealmInfo": Internal.ClassInfo, "net.caffeinemc.mods.sodium.api.vertex.format.VertexFormatDescription": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootContext": Internal.ClassInfo, "net.minecraft.world.item.enchantment.ArrowPiercingEnchantment": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPingPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.LogType": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$PlayerLoggedOutEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.NetherFossilStructure": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.RemoveJEICategoriesEvent": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiOverlayEvent$Pre": Internal.ClassInfo, "java.util.Map$Entry": Internal.ClassInfo, "net.minecraft.client.renderer.ShaderInstance": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SimpleBlockFeature": Internal.ClassInfo, "java.util.function.IntToDoubleFunction": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.CubeListBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.CustomBuilderObject": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSoundEntityPacket": Internal.ClassInfo, "net.minecraft.world.damagesource.DeathMessageType": Internal.ClassInfo, "com.google.common.hash.HashCode": Internal.ClassInfo, "net.minecraft.client.renderer.texture.SpriteLoader$Preparations": Internal.ClassInfo, "net.minecraft.world.item.DiggerItem": Internal.ClassInfo, "io.netty.buffer.ByteBufAllocatorMetric": Internal.ClassInfo, "software.bernie.geckolib.core.object.Color": Internal.ClassInfo, "com.mojang.serialization.Decoder$Simple": Internal.ClassInfo, "software.bernie.geckolib.core.keyframe.event.ParticleKeyframeEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.MinecraftEnvironmentKJS": Internal.ClassInfo, "net.minecraftforge.event.server.ServerStoppedEvent": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.EntitySteppedOnBlockCallbackJS": Internal.ClassInfo, "net.minecraft.world.InteractionHand": Internal.ClassInfo, "net.minecraft.client.renderer.debug.DebugRenderer": Internal.ClassInfo, "java.time.temporal.TemporalAdjuster": Internal.ClassInfo, "net.minecraft.client.resources.model.Material": Internal.ClassInfo, "net.minecraftforge.common.world.StructureSettingsBuilder": Internal.ClassInfo, "net.minecraft.util.FrameTimer": Internal.ClassInfo, "net.minecraft.world.entity.Display$GenericInterpolator": Internal.ClassInfo, "net.minecraft.world.item.ExperienceBottleItem": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.IsInWaterSensor": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundBundlePacket": Internal.ClassInfo, "net.minecraft.world.level.block.StructureBlock": Internal.ClassInfo, "net.minecraft.client.gui.components.toasts.ToastComponent": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleConsumer": Internal.ClassInfo, "dev.architectury.registry.registries.Registrar": Internal.ClassInfo, "net.minecraft.world.entity.item.PrimedTnt": Internal.ClassInfo, "net.minecraft.world.level.block.DropperBlock": Internal.ClassInfo, "org.spongepowered.asm.mixin.injection.callback.CallbackInfo": Internal.ClassInfo, "org.joml.Vector4ic": Internal.ClassInfo, "net.minecraft.ChatFormatting": Internal.ClassInfo, "com.mojang.datafixers.kinds.Applicative$Mu": Internal.ClassInfo, "com.mojang.datafixers.Products$P1": Internal.ClassInfo, "net.minecraft.stats.StatType": Internal.ClassInfo, "com.mojang.datafixers.Products$P3": Internal.ClassInfo, "net.minecraft.world.level.block.TorchBlock": Internal.ClassInfo, "com.mojang.datafixers.Products$P2": Internal.ClassInfo, "net.minecraft.client.player.Input": Internal.ClassInfo, "net.minecraft.world.level.storage.WritableLevelData": Internal.ClassInfo, "com.mojang.brigadier.suggestion.SuggestionsBuilder": Internal.ClassInfo, "net.minecraft.server.level.ServerBossEvent": Internal.ClassInfo, "com.mojang.datafixers.Products$P9": Internal.ClassInfo, "com.mojang.datafixers.Products$P8": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacerType": Internal.ClassInfo, "java.util.IdentityHashMap": Internal.ClassInfo, "net.minecraft.world.level.block.TwistingVinesBlock": Internal.ClassInfo, "net.minecraft.world.level.gameevent.DynamicGameEventListener": Internal.ClassInfo, "com.mojang.datafixers.Products$P5": Internal.ClassInfo, "com.mojang.datafixers.Products$P4": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$ColorLogicStateShard": Internal.ClassInfo, "com.mojang.datafixers.Products$P7": Internal.ClassInfo, "net.minecraft.world.entity.AreaEffectCloud": Internal.ClassInfo, "com.mojang.datafixers.Products$P6": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.PosRuleTestType": Internal.ClassInfo, "net.minecraftforge.registries.DataPackRegistryEvent$NewRegistry": Internal.ClassInfo, "net.minecraft.world.item.armortrim.TrimMaterial": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkAccess": Internal.ClassInfo, "net.minecraft.client.resources.model.ModelBaker": Internal.ClassInfo, "software.bernie.geckolib.core.animation.Animation$Keyframes": Internal.ClassInfo, "net.minecraft.sounds.SoundEvent": Internal.ClassInfo, "java.lang.reflect.Type": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockLeftClickedEventJS": Internal.ClassInfo, "io.netty.channel.ChannelOutboundInvoker": Internal.ClassInfo, "io.redspace.ironsspellbooks.particle.SparkParticleOptions": Internal.ClassInfo, "com.google.gson.ReflectionAccessFilter": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.LootContextUser": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.BlockStateModifyPlacementCallbackJS": Internal.ClassInfo, "net.minecraftforge.event.level.LevelEvent$Load": Internal.ClassInfo, "net.minecraft.client.multiplayer.PlayerInfo": Internal.ClassInfo, "net.minecraft.world.level.block.PointedDripstoneBlock": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerAbilitiesPacket": Internal.ClassInfo, "net.minecraft.network.chat.LastSeenMessages": Internal.ClassInfo, "net.minecraft.world.level.block.SlabBlock": Internal.ClassInfo, "net.minecraft.world.level.dimension.DimensionType": Internal.ClassInfo, "net.minecraft.client.AttackIndicatorStatus": Internal.ClassInfo, "java.nio.charset.CoderResult": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.DarkOakFoliagePlacer": Internal.ClassInfo, "dev.latvian.mods.kubejs.event.EventExceptionHandler": Internal.ClassInfo, "net.minecraft.core.Vec3i": Internal.ClassInfo, "net.minecraft.world.level.biome.MultiNoiseBiomeSourceParameterList$Preset": Internal.ClassInfo, "net.minecraft.world.inventory.ItemCombinerMenu": Internal.ClassInfo, "com.mojang.authlib.HttpAuthenticationService": Internal.ClassInfo, "net.minecraft.world.entity.monster.CaveSpider": Internal.ClassInfo, "net.minecraft.server.packs.PackResources": Internal.ClassInfo, "net.minecraft.world.level.block.BaseCoralFanBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.integration.forge.jei.InformationJEIEventJS": Internal.ClassInfo, "net.minecraft.world.entity.animal.MushroomCow$MushroomType": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeManager$NoiseBiomeSource": Internal.ClassInfo, "net.minecraft.world.scores.Scoreboard": Internal.ClassInfo, "java.lang.NamedPackage": Internal.ClassInfo, "net.minecraftforge.forgespi.locating.ForgeFeature$Bound": Internal.ClassInfo, "java.time.Clock": Internal.ClassInfo, "net.minecraftforge.network.HandshakeMessages$S2CRegistry": Internal.ClassInfo, "net.minecraft.tags.TagEntry$Lookup": Internal.ClassInfo, "net.minecraft.world.level.block.GrowingPlantBlock": Internal.ClassInfo, "java.text.Format": Internal.ClassInfo, "net.minecraft.world.level.block.TrapDoorBlock": Internal.ClassInfo, "java.util.Enumeration": Internal.ClassInfo, "net.minecraft.world.entity.projectile.AbstractArrow$Pickup": Internal.ClassInfo, "javax.crypto.ExemptionMechanism": Internal.ClassInfo, "org.joml.Matrix4dc": Internal.ClassInfo, "net.minecraft.world.entity.projectile.WitherSkull": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormatElement": Internal.ClassInfo, "org.joml.Matrix3x2d": Internal.ClassInfo, "software.bernie.geckolib.animatable.GeoItem": Internal.ClassInfo, "net.minecraft.world.level.block.SnifferEggBlock": Internal.ClassInfo, "org.joml.Matrix3x2f": Internal.ClassInfo, "net.minecraft.world.level.levelgen.carver.CanyonWorldCarver": Internal.ClassInfo, "dev.latvian.mods.kubejs.server.tag.TagWrapper": Internal.ClassInfo, "com.google.gson.GsonBuilder": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.school.SchoolTypeJSBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.RenderShape": Internal.ClassInfo, "org.lwjgl.system.Pointer$Default": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerXpEvent": Internal.ClassInfo, "java.net.Proxy": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundRotateHeadPacket": Internal.ClassInfo, "net.minecraft.server.packs.resources.PreparableReloadListener": Internal.ClassInfo, "net.minecraft.util.thread.ReentrantBlockableEventLoop": Internal.ClassInfo, "com.mojang.blaze3d.platform.Window": Internal.ClassInfo, "net.minecraft.client.renderer.RenderType$CompositeState$CompositeStateBuilder": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationController": Internal.ClassInfo, "net.minecraftforge.fml.event.IModBusEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.DoubleSpliterator": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessorType": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.ServicesKeyInfo": Internal.ClassInfo, "net.minecraft.world.inventory.ChestMenu": Internal.ClassInfo, "com.probejs.jdoc.document.DocumentClass": Internal.ClassInfo, "net.minecraft.world.level.levelgen.GeodeCrackSettings": Internal.ClassInfo, "me.jellysquid.mods.sodium.client.model.quad.BakedQuadView": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.FishingLootEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.SurfaceSystem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlockMatchTest": Internal.ClassInfo, "net.minecraft.world.entity.animal.ShoulderRidingEntity": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.FluidAmounts": Internal.ClassInfo, "org.joml.Matrix4fc": Internal.ClassInfo, "com.mojang.brigadier.RedirectModifier": Internal.ClassInfo, "com.mojang.realmsclient.dto.RealmsServer": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.DragonPhaseInstance": Internal.ClassInfo, "net.minecraft.world.entity.monster.piglin.PiglinArmPose": Internal.ClassInfo, "net.minecraftforge.event.BuildCreativeModeTabContentsEvent": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.EnumProperty": Internal.ClassInfo, "net.minecraftforge.event.OnDatapackSyncEvent": Internal.ClassInfo, "net.minecraft.world.item.ShovelItem": Internal.ClassInfo, "net.minecraft.world.item.InstrumentItem": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSoundPacket": Internal.ClassInfo, "com.mojang.datafixers.kinds.Kind1$Mu": Internal.ClassInfo, "net.minecraftforge.client.event.InputEvent$MouseButton$Pre": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntUnaryOperator": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.ArmorCapeProvider": Internal.ClassInfo, "net.minecraft.world.entity.Display$BlockDisplay$BlockRenderState": Internal.ClassInfo, "sun.nio.fs.WindowsFileSystem": Internal.ClassInfo, "net.minecraft.client.sounds.SoundManager": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.FireworksJS": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeItemStack": Internal.ClassInfo, "net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer": Internal.ClassInfo, "java.util.function.IntToLongFunction": Internal.ClassInfo, "net.minecraft.world.item.DiscFragmentItem": Internal.ClassInfo, "java.util.concurrent.ConcurrentHashMap$KeySetView": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.PiglinSpecificSensor": Internal.ClassInfo, "software.bernie.geckolib.loading.json.raw.FaceUV$Rotation": Internal.ClassInfo, "net.minecraft.world.level.levelgen.Aquifer$FluidStatus": Internal.ClassInfo, "net.minecraft.server.WorldStem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.BiomeFilter": Internal.ClassInfo, "com.mojang.authlib.minecraft.TelemetryEvent": Internal.ClassInfo, "net.minecraftforge.client.event.RecipesUpdatedEvent": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2ReferenceFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.FloatBinaryOperator": Internal.ClassInfo, "net.minecraft.world.entity.vehicle.Minecart": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundEntityEventPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacerType": Internal.ClassInfo, "java.awt.geom.PathIterator": Internal.ClassInfo, "io.redspace.ironsspellbooks.particle.FogParticleOptions": Internal.ClassInfo, "java.nio.IntBuffer": Internal.ClassInfo, "net.minecraft.client.gui.narration.NarratableEntry": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkStatus$ChunkType": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.CanBeReplacedCallbackJS": Internal.ClassInfo, "net.minecraft.world.item.RecordItem": Internal.ClassInfo, "net.minecraft.core.NonNullList": Internal.ClassInfo, "org.joml.Matrix2f": Internal.ClassInfo, "net.minecraft.world.level.block.entity.JigsawBlockEntity": Internal.ClassInfo, "net.minecraft.client.model.HeadedModel": Internal.ClassInfo, "org.joml.Matrix2d": Internal.ClassInfo, "java.awt.geom.Rectangle2D$Double": Internal.ClassInfo, "com.google.common.collect.ImmutableCollection$Builder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.foliageplacers.SpruceFoliagePlacer": Internal.ClassInfo, "net.minecraft.world.item.SuspiciousStewItem": Internal.ClassInfo, "net.minecraft.world.level.block.GameMasterBlock": Internal.ClassInfo, "net.minecraft.util.thread.BlockableEventLoop": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ItemComponents$2": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ItemComponents$1": Internal.ClassInfo, "java.util.jar.Attributes": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ItemComponents$4": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.filter.RecipeFilter": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.ItemComponents$3": Internal.ClassInfo, "net.minecraft.world.entity.monster.EnderMan": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundTeleportEntityPacket": Internal.ClassInfo, "net.minecraftforge.common.util.NonNullFunction": Internal.ClassInfo, "net.minecraft.client.model.geom.ModelPart$Visitor": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$CreateCallback": Internal.ClassInfo, "mezz.jei.api.recipe.RecipeIngredientRole": Internal.ClassInfo, "net.minecraft.util.thread.ProcessorHandle": Internal.ClassInfo, "net.minecraft.world.inventory.CartographyTableMenu": Internal.ClassInfo, "net.minecraft.world.item.DyeItem": Internal.ClassInfo, "org.joml.Matrix3f": Internal.ClassInfo, "org.joml.Matrix3d": Internal.ClassInfo, "net.minecraft.world.level.gameevent.BlockPositionSource$Type": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.RecipeKJS": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.ElectromancerArmorItem": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BlockEntityTicker": Internal.ClassInfo, "java.util.stream.IntStream": Internal.ClassInfo, "dev.architectury.hooks.level.biome.ClimateProperties": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IConfigurable": Internal.ClassInfo, "com.mojang.blaze3d.shaders.AbstractUniform": Internal.ClassInfo, "java.lang.constant.MethodTypeDesc": Internal.ClassInfo, "com.mojang.datafixers.Typed": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.request.AbuseReportRequest$ClientInfo": Internal.ClassInfo, "net.minecraft.world.item.BannerItem": Internal.ClassInfo, "net.minecraft.world.entity.animal.IronGolem$Crackiness": Internal.ClassInfo, "dev.latvian.mods.kubejs.platform.forge.ingredient.WildcardIngredient": Internal.ClassInfo, "net.minecraft.world.level.border.BorderChangeListener": Internal.ClassInfo, "com.google.gson.JsonPrimitive": Internal.ClassInfo, "com.mojang.authlib.minecraft.report.AbuseReportLimits": Internal.ClassInfo, "org.joml.Matrix4f": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.HurtBySensor": Internal.ClassInfo, "org.joml.Matrix4d": Internal.ClassInfo, "net.minecraft.world.entity.Saddleable": Internal.ClassInfo, "java.util.function.LongFunction": Internal.ClassInfo, "net.minecraft.world.level.DataPackConfig": Internal.ClassInfo, "java.time.Month": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.ProtectedBlockProcessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.RecipeTypeFunction": Internal.ClassInfo, "org.joml.Vector4dc": Internal.ClassInfo, "net.minecraft.world.level.block.DropExperienceBlock": Internal.ClassInfo, "net.minecraft.client.model.geom.builders.LayerDefinition": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundChunksBiomesPacket$ChunkBiomeData": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.WeightedStateProvider": Internal.ClassInfo, "net.minecraft.world.level.block.entity.StructureBlockEntity": Internal.ClassInfo, "java.net.ContentHandler": Internal.ClassInfo, "net.minecraftforge.client.event.ViewportEvent$ComputeCameraAngles": Internal.ClassInfo, "net.minecraft.world.level.chunk.PalettedContainer$Configuration": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.IMultihandWeapon": Internal.ClassInfo, "net.minecraft.world.level.block.SugarCaneBlock": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2CharFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.BlendingData": Internal.ClassInfo, "com.mojang.authlib.GameProfile": Internal.ClassInfo, "net.minecraft.network.Connection": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.FireworksJS$Explosion": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundResourcePackPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockPlacedEventJS": Internal.ClassInfo, "java.util.function.BooleanSupplier": Internal.ClassInfo, "com.mojang.authlib.minecraft.report.ReportedEntity": Internal.ClassInfo, "java.math.BigDecimal": Internal.ClassInfo, "java.lang.Character": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.structures.JigsawStructure": Internal.ClassInfo, "net.minecraft.client.gui.ComponentPath": Internal.ClassInfo, "io.redspace.ironsspellbooks.entity.mobs.goals.WizardAttackGoal": Internal.ClassInfo, "net.minecraft.world.item.UseAnim": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongSet": Internal.ClassInfo, "net.minecraft.world.level.block.piston.PistonHeadBlock": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator$Context": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundTabListPacket": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blockpredicates.InsideWorldBoundsPredicate": Internal.ClassInfo, "java.lang.invoke.MethodHandles$Lookup": Internal.ClassInfo, "net.minecraft.client.model.AgeableListModel": Internal.ClassInfo, "net.minecraft.server.network.ServerConnectionListener": Internal.ClassInfo, "net.minecraft.nbt.ByteArrayTag": Internal.ClassInfo, "com.google.common.collect.BaseImmutableMultimap": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLivingEvent$Pre": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.callbacks.BlockStateRotateCallbackJS": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent": Internal.ClassInfo, "net.minecraft.world.level.block.LavaCauldronBlock": Internal.ClassInfo, "java.util.function.ToDoubleBiFunction": Internal.ClassInfo, "net.minecraft.client.renderer.texture.TextureAtlasSprite$Ticker": Internal.ClassInfo, "io.redspace.ironsspellbooks.effect.BlightEffect": Internal.ClassInfo, "com.mojang.authlib.BaseAuthenticationService": Internal.ClassInfo, "net.minecraft.world.Nameable": Internal.ClassInfo, "net.minecraft.world.item.enchantment.UntouchingEnchantment": Internal.ClassInfo, "net.minecraftforge.eventbus.api.IEventListener": Internal.ClassInfo, "io.netty.util.Constant": Internal.ClassInfo, "com.probejs.jdoc.property.PropertyComment": Internal.ClassInfo, "net.minecraft.world.level.block.WeatheringCopperSlabBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.Panda": Internal.ClassInfo, "net.minecraft.world.level.block.state.BlockState": Internal.ClassInfo, "com.mojang.serialization.RecordBuilder": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket": Internal.ClassInfo, "java.lang.invoke.TypeDescriptor$OfField": Internal.ClassInfo, "net.minecraftforge.fluids.ForgeFlowingFluid": Internal.ClassInfo, "net.minecraft.client.gui.spectator.categories.SpectatorPage": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.poi.PoiRecord": Internal.ClassInfo, "net.minecraft.commands.arguments.EntityArgument$Info$Template": Internal.ClassInfo, "net.minecraftforge.registries.RegistryBuilder": Internal.ClassInfo, "net.minecraft.client.renderer.item.ClampedItemPropertyFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeSpecialEffects": Internal.ClassInfo, "net.minecraft.server.network.FilteredText": Internal.ClassInfo, "net.minecraftforge.client.RenderTypeGroup": Internal.ClassInfo, "net.minecraft.core.BlockPos$MutableBlockPos": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.BasicMobEffect$Builder": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$Marker": Internal.ClassInfo, "net.minecraft.world.level.block.AzaleaBlock": Internal.ClassInfo, "dev.latvian.mods.unit.token.UnitToken": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.SpellData": Internal.ClassInfo, "net.minecraft.world.entity.projectile.ThrownTrident": Internal.ClassInfo, "net.minecraft.world.level.block.BaseEntityBlock": Internal.ClassInfo, "net.minecraft.world.item.enchantment.FireAspectEnchantment": Internal.ClassInfo, "net.minecraft.world.level.border.BorderStatus": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.TwistingVinesFeature": Internal.ClassInfo, "net.minecraft.client.renderer.block.model.BlockElementRotation": Internal.ClassInfo, "com.mojang.blaze3d.platform.NativeImage$Format": Internal.ClassInfo, "io.netty.channel.Channel": Internal.ClassInfo, "java.io.FileFilter": Internal.ClassInfo, "com.mojang.brigadier.tree.CommandNode": Internal.ClassInfo, "net.minecraft.world.level.chunk.ChunkStatus": Internal.ClassInfo, "net.minecraft.world.item.enchantment.OxygenEnchantment": Internal.ClassInfo, "com.google.common.collect.UnmodifiableIterator": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ObjectMap": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.events.ChangeManaEvent": Internal.ClassInfo, "net.minecraft.network.chat.ClickEvent": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.ValidationContext": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.CocoaDecorator": Internal.ClassInfo, "java.net.SocketAddress": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ObjectMap$Entry": Internal.ClassInfo, "net.minecraft.nbt.ByteTag": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.ComparatorMode": Internal.ClassInfo, "net.minecraft.world.level.block.GlowLichenBlock": Internal.ClassInfo, "net.minecraft.util.ModCheck": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.ItemBuilder$FinishUsingCallback": Internal.ClassInfo, "net.minecraft.world.level.storage.PlayerDataStorage": Internal.ClassInfo, "net.minecraft.server.packs.VanillaPackResources": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2IntFunction": Internal.ClassInfo, "net.minecraft.world.level.block.EndPortalBlock": Internal.ClassInfo, "net.minecraft.world.item.EndCrystalItem": Internal.ClassInfo, "com.mojang.brigadier.arguments.FloatArgumentType": Internal.ClassInfo, "io.redspace.ironsspellbooks.entity.mobs.goals.SpellBarrageGoal": Internal.ClassInfo, "org.lwjgl.system.MemoryStack": Internal.ClassInfo, "java.time.LocalTime": Internal.ClassInfo, "software.bernie.geckolib.cache.object.GeoQuad": Internal.ClassInfo, "net.minecraft.world.effect.AbsoptionMobEffect": Internal.ClassInfo, "net.minecraft.world.level.block.WallBlock": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.weapons.StaffItem": Internal.ClassInfo, "net.minecraft.world.level.block.state.StateDefinition": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Requires$Modifier": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundStopSoundPacket": Internal.ClassInfo, "net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$CompiledChunk": Internal.ClassInfo, "net.minecraft.world.level.block.PowderSnowCauldronBlock": Internal.ClassInfo, "net.minecraft.util.valueproviders.ClampedNormalInt": Internal.ClassInfo, "java.net.InetSocketAddress": Internal.ClassInfo, "net.minecraft.world.level.levelgen.DensityFunctions$BeardifierOrMarker": Internal.ClassInfo, "net.minecraft.world.level.block.Blocks": Internal.ClassInfo, "net.minecraft.world.entity.animal.IronGolem": Internal.ClassInfo, "net.minecraft.server.packs.PackResources$ResourceOutput": Internal.ClassInfo, "java.lang.invoke.VarHandle$AccessMode": Internal.ClassInfo, "net.minecraft.world.level.block.MyceliumBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.TextWrapper": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.score.LootScoreProviderType": Internal.ClassInfo, "net.minecraftforge.common.util.INBTSerializable": Internal.ClassInfo, "net.minecraft.world.entity.animal.horse.AbstractChestedHorse": Internal.ClassInfo, "net.minecraft.server.packs.resources.ResourceMetadata": Internal.ClassInfo, "it.unimi.dsi.fastutil.doubles.Double2ShortFunction": Internal.ClassInfo, "org.apache.maven.artifact.handler.ArtifactHandler": Internal.ClassInfo, "com.mojang.datafixers.View": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingEquipmentChangeEvent": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.WaterloggedVegetationPatchFeature": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessor": Internal.ClassInfo, "net.minecraftforge.registries.IForgeRegistry$MissingFactory": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.BlockItemBuilder": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.EnergizedCoreItem": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongIterator": Internal.ClassInfo, "dev.architectury.registry.registries.RegistrarBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.BigDripleafStemBlock": Internal.ClassInfo, "java.lang.module.ModuleDescriptor$Requires": Internal.ClassInfo, "net.minecraftforge.event.entity.living.EnderManAngerEvent": Internal.ClassInfo, "net.minecraft.commands.BrigadierExceptions": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.treedecorators.LeaveVineDecorator": Internal.ClassInfo, "net.minecraftforge.event.level.ChunkWatchEvent": Internal.ClassInfo, "net.minecraft.advancements.Advancement": Internal.ClassInfo, "top.theillusivec4.curios.mixin.core.AccessorEntity": Internal.ClassInfo, "net.minecraftforge.event.TickEvent": Internal.ClassInfo, "net.minecraftforge.event.AttachCapabilitiesEvent": Internal.ClassInfo, "net.minecraft.commands.arguments.selector.EntitySelector": Internal.ClassInfo, "java.security.PermissionCollection": Internal.ClassInfo, "it.unimi.dsi.fastutil.chars.Char2BooleanFunction": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.ICastDataSerializable": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.creativetab.CreativeTabBuilder": Internal.ClassInfo, "java.util.stream.LongStream$Builder": Internal.ClassInfo, "mezz.jei.api.gui.widgets.IRecipeWidget": Internal.ClassInfo, "net.minecraft.world.entity.animal.Pufferfish": Internal.ClassInfo, "java.util.stream.BaseStream": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.ArchevokerArmorItem": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.DetectorBlockEventJS": Internal.ClassInfo, "net.minecraft.world.Clearable": Internal.ClassInfo, "net.minecraft.world.level.block.EnchantmentTableBlock": Internal.ClassInfo, "net.minecraft.world.level.block.DirtPathBlock": Internal.ClassInfo, "net.minecraft.client.Camera": Internal.ClassInfo, "net.minecraft.world.level.biome.Climate$TargetPoint": Internal.ClassInfo, "net.minecraft.world.level.gameevent.vibrations.VibrationSystem$Listener": Internal.ClassInfo, "mezz.jei.api.gui.builder.IIngredientConsumer": Internal.ClassInfo, "net.minecraft.world.entity.boss.enderdragon.phases.AbstractDragonPhaseInstance": Internal.ClassInfo, "it.unimi.dsi.fastutil.bytes.Byte2FloatFunction": Internal.ClassInfo, "net.minecraft.world.level.levelgen.blending.Blender$BlendingOutput": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.providers.number.LootNumberProviderType": Internal.ClassInfo, "net.minecraft.world.item.SmithingTemplateItem": Internal.ClassInfo, "java.lang.ThreadGroup": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.entity.BlockEntityJS": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BannerBlockEntity": Internal.ClassInfo, "net.minecraft.client.gui.spectator.SpectatorMenuItem": Internal.ClassInfo, "java.time.temporal.ValueRange": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.RootSystemConfiguration": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$KeyPressed$Post": Internal.ClassInfo, "net.minecraft.world.level.levelgen.synth.PerlinSimplexNoise": Internal.ClassInfo, "net.minecraft.client.multiplayer.MultiPlayerGameMode": Internal.ClassInfo, "org.slf4j.event.Level": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2IntFunction": Internal.ClassInfo, "com.mojang.datafixers.types.families.Algebra": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeVertexConsumer": Internal.ClassInfo, "net.minecraft.world.level.block.StemGrownBlock": Internal.ClassInfo, "dev.kosmx.playerAnim.core.util.SetableSupplier": Internal.ClassInfo, "net.minecraft.world.level.biome.MobSpawnSettings$SpawnerData": Internal.ClassInfo, "dev.latvian.mods.kubejs.fluid.FlowingFluidBuilder": Internal.ClassInfo, "net.minecraft.world.level.block.FarmBlock": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationState": Internal.ClassInfo, "net.minecraft.world.item.FlintAndSteelItem": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.CustomSpell$PreCastClientContext": Internal.ClassInfo, "java.util.function.ObjDoubleConsumer": Internal.ClassInfo, "net.minecraft.world.level.block.SandBlock": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.PlayerSensor": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.ComponentKJS": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBoat": Internal.ClassInfo, "net.minecraft.world.level.block.entity.FurnaceBlockEntity": Internal.ClassInfo, "java.util.Spliterator$OfInt": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2ReferenceFunction": Internal.ClassInfo, "com.electronwill.nightconfig.core.UnmodifiableCommentedConfig": Internal.ClassInfo, "net.minecraftforge.event.level.BlockEvent$FarmlandTrampleEvent": Internal.ClassInfo, "net.minecraft.client.gui.components.BossHealthOverlay": Internal.ClassInfo, "net.minecraft.world.level.block.AirBlock": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.SpellRarity": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.RuleProcessor": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.NumberComponent$FloatRange": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongCollection": Internal.ClassInfo, "net.minecraft.world.level.block.NyliumBlock": Internal.ClassInfo, "dev.latvian.mods.kubejs.bindings.UtilsWrapper": Internal.ClassInfo, "com.mojang.authlib.yggdrasil.response.KeyPairResponse": Internal.ClassInfo, "net.minecraft.world.entity.animal.TropicalFish$Variant": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundContainerSetSlotPacket": Internal.ClassInfo, "net.minecraft.CrashReportCategory": Internal.ClassInfo, "com.squoshi.irons_spells_js.item.MagicSwordItemBuilderJS": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.curios.SimpleAttributeCurio": Internal.ClassInfo, "net.minecraft.world.level.chunk.LightChunk": Internal.ClassInfo, "net.minecraft.world.level.biome.Biome": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundEditBookPacket": Internal.ClassInfo, "net.minecraftforge.fml.event.lifecycle.ParallelDispatchEvent": Internal.ClassInfo, "java.util.PrimitiveIterator$OfLong": Internal.ClassInfo, "java.time.temporal.TemporalAmount": Internal.ClassInfo, "net.minecraft.world.scores.ScoreboardSaveData": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.RandomBlockStateMatchTest": Internal.ClassInfo, "com.google.common.collect.ImmutableMultimap": Internal.ClassInfo, "net.minecraftforge.fml.IModStateTransition$EventGenerator": Internal.ClassInfo, "net.minecraft.client.renderer.debug.BrainDebugRenderer": Internal.ClassInfo, "java.util.function.IntFunction": Internal.ClassInfo, "com.mojang.serialization.codecs.PrimitiveCodec": Internal.ClassInfo, "net.minecraft.advancements.AdvancementRewards": Internal.ClassInfo, "io.netty.util.Attribute": Internal.ClassInfo, "net.minecraftforge.client.event.RenderGuiOverlayEvent$Post": Internal.ClassInfo, "net.minecraft.world.inventory.HopperMenu": Internal.ClassInfo, "org.joml.AxisAngle4f": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.schema.RecipeConstructor$Factory": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeMobEffectInstance": Internal.ClassInfo, "net.minecraft.world.level.block.CaveVinesPlantBlock": Internal.ClassInfo, "com.mojang.serialization.Decoder": Internal.ClassInfo, "dev.architectury.event.events.client.ClientCommandRegistrationEvent$ClientCommandSourceStack": Internal.ClassInfo, "org.joml.AxisAngle4d": Internal.ClassInfo, "it.unimi.dsi.fastutil.floats.Float2ShortFunction": Internal.ClassInfo, "io.redspace.ironsspellbooks.api.spells.CastSource": Internal.ClassInfo, "net.minecraftforge.event.entity.living.LivingDeathEvent": Internal.ClassInfo, "net.minecraft.world.item.Items$1": Internal.ClassInfo, "net.minecraft.world.entity.npc.VillagerData": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.ShortUnaryOperator": Internal.ClassInfo, "net.minecraft.world.item.MobBucketItem": Internal.ClassInfo, "net.minecraft.world.phys.shapes.DiscreteVoxelShape": Internal.ClassInfo, "net.minecraft.resources.FileToIdConverter": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.LongSpliterator": Internal.ClassInfo, "software.bernie.geckolib.core.animatable.model.CoreBakedGeoModel": Internal.ClassInfo, "net.minecraft.nbt.LongArrayTag": Internal.ClassInfo, "com.mojang.datafixers.util.Either": Internal.ClassInfo, "com.squoshi.irons_spells_js.events.ChangeManaEventJS": Internal.ClassInfo, "net.minecraft.world.level.levelgen.flat.FlatLevelGeneratorSettings": Internal.ClassInfo, "org.lwjgl.system.Struct$StructValidation": Internal.ClassInfo, "net.minecraft.commands.synchronization.brigadier.IntegerArgumentInfo$Template": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryPropertyMap": Internal.ClassInfo, "net.minecraftforge.event.entity.player.AdvancementEvent$AdvancementEarnEvent": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundAcceptTeleportationPacket": Internal.ClassInfo, "net.minecraft.network.protocol.BundlerInfo$Bundler": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.StructureProcessorList": Internal.ClassInfo, "dev.latvian.mods.kubejs.item.custom.SmithingTemplateItemBuilder": Internal.ClassInfo, "net.minecraft.core.HolderOwner": Internal.ClassInfo, "net.minecraft.world.item.AirItem": Internal.ClassInfo, "net.minecraft.world.level.block.state.StateHolder": Internal.ClassInfo, "net.minecraft.world.level.block.state.pattern.BlockInWorld": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.special.ShapedKubeJSRecipe$SerializerKJS": Internal.ClassInfo, "net.minecraft.world.item.BannerPatternItem": Internal.ClassInfo, "com.mojang.brigadier.StringReader": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.IntComparator": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.FarmlandTrampledEventJS": Internal.ClassInfo, "net.minecraft.client.gui.components.SplashRenderer": Internal.ClassInfo, "net.minecraft.world.level.storage.WorldData": Internal.ClassInfo, "net.minecraftforge.client.event.ContainerScreenEvent$Render": Internal.ClassInfo, "net.minecraft.world.entity.animal.Pig": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.ObjectSpliterator": Internal.ClassInfo, "java.util.TimeZone": Internal.ClassInfo, "net.minecraftforge.client.event.EntityRenderersEvent$AddLayers": Internal.ClassInfo, "java.util.Collection": Internal.ClassInfo, "dev.latvian.mods.kubejs.core.LazyComponentKJS": Internal.ClassInfo, "net.minecraft.network.chat.MessageSignature": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetCommandBlockPacket": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2DoubleFunction": Internal.ClassInfo, "java.util.function.BinaryOperator": Internal.ClassInfo, "io.netty.channel.nio.NioEventLoopGroup": Internal.ClassInfo, "io.netty.buffer.PoolArenaMetric": Internal.ClassInfo, "net.minecraft.world.entity.player.Player": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.RandomBooleanSelectorFeature": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2ReferenceFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Reference2DoubleFunction": Internal.ClassInfo, "net.minecraft.commands.Commands$CommandSelection": Internal.ClassInfo, "net.minecraft.world.level.block.RespawnAnchorBlock": Internal.ClassInfo, "java.util.Queue": Internal.ClassInfo, "java.time.temporal.Temporal": Internal.ClassInfo, "net.minecraft.server.RegistryLayer": Internal.ClassInfo, "net.minecraft.network.chat.SignedMessageBody$Packed": Internal.ClassInfo, "net.minecraft.world.item.enchantment.TridentRiptideEnchantment": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.AbstractObject2FloatFunction": Internal.ClassInfo, "it.unimi.dsi.fastutil.ints.Int2IntMap": Internal.ClassInfo, "io.netty.buffer.ByteBufConvertible": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.SimpleRandomSelectorFeature": Internal.ClassInfo, "com.mojang.blaze3d.vertex.BufferBuilder$SortState": Internal.ClassInfo, "net.minecraft.world.level.EntityGetter": Internal.ClassInfo, "com.electronwill.nightconfig.core.file.CommentedFileConfig": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.TreeFeature": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundResourcePackPacket": Internal.ClassInfo, "net.minecraft.world.level.block.EndPortalFrameBlock": Internal.ClassInfo, "net.minecraft.world.item.CreativeModeTab$Builder": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.RecipeSchemaRegistryEventJS": Internal.ClassInfo, "net.minecraft.world.level.material.PushReaction": Internal.ClassInfo, "net.minecraft.world.scores.Team$CollisionRule": Internal.ClassInfo, "software.bernie.geckolib.core.animatable.instance.AnimatableInstanceCache": Internal.ClassInfo, "net.minecraft.world.entity.decoration.ArmorStand": Internal.ClassInfo, "net.minecraft.world.entity.npc.VillagerType": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.parameters.LootContextParamSet": Internal.ClassInfo, "java.util.LinkedList": Internal.ClassInfo, "dev.latvian.mods.kubejs.level.LevelEventJS": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.CustomSpell$PreCastContext": Internal.ClassInfo, "it.unimi.dsi.fastutil.longs.Long2ObjectMap$Entry": Internal.ClassInfo, "net.minecraft.world.entity.animal.FrogVariant": Internal.ClassInfo, "net.minecraftforge.common.PlantType": Internal.ClassInfo, "java.nio.channels.ReadableByteChannel": Internal.ClassInfo, "net.minecraft.world.item.crafting.CraftingRecipe": Internal.ClassInfo, "net.minecraft.world.level.block.BaseCoralWallFanBlock": Internal.ClassInfo, "dev.kosmx.playerAnim.impl.IAnimatedPlayer": Internal.ClassInfo, "net.minecraft.world.entity.projectile.DragonFireball": Internal.ClassInfo, "net.minecraft.client.renderer.Rect2i": Internal.ClassInfo, "net.minecraftforge.client.event.RegisterShadersEvent": Internal.ClassInfo, "net.minecraft.client.renderer.DimensionSpecialEffects": Internal.ClassInfo, "journeymap.client.api.event.forge.PopupMenuEvent": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerEvent$PlayerChangedDimensionEvent": Internal.ClassInfo, "java.util.AbstractMap": Internal.ClassInfo, "software.bernie.geckolib.cache.object.GeoCube": Internal.ClassInfo, "net.minecraftforge.client.event.ClientPlayerNetworkEvent": Internal.ClassInfo, "dev.latvian.mods.rhino.util.ValueUnwrapper": Internal.ClassInfo, "net.minecraft.world.item.MinecartItem": Internal.ClassInfo, "org.apache.maven.artifact.versioning.VersionRange": Internal.ClassInfo, "net.minecraft.client.gui.MapRenderer": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2FloatFunction": Internal.ClassInfo, "dev.latvian.mods.unit.function.FunctionFactory$Arg3": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimationController$ParticleKeyframeHandler": Internal.ClassInfo, "net.minecraft.core.particles.ParticleOptions": Internal.ClassInfo, "net.minecraft.client.multiplayer.ClientAdvancements": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.RandomOffsetPlacement": Internal.ClassInfo, "net.minecraft.network.protocol.status.ServerStatus$Favicon": Internal.ClassInfo, "net.minecraft.world.item.enchantment.VanishingCurseEnchantment": Internal.ClassInfo, "java.net.InetAddress": Internal.ClassInfo, "net.minecraftforge.fluids.ForgeFlowingFluid$Source": Internal.ClassInfo, "com.google.common.collect.RegularImmutableList": Internal.ClassInfo, "it.unimi.dsi.fastutil.shorts.Short2BooleanFunction": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.IRecipeSlotsView": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundPlayerCommandPacket$Action": Internal.ClassInfo, "net.minecraft.world.entity.monster.warden.WardenSpawnTracker": Internal.ClassInfo, "net.minecraftforge.fml.config.IConfigEvent": Internal.ClassInfo, "org.apache.maven.artifact.metadata.ArtifactMetadata": Internal.ClassInfo, "net.minecraft.world.item.trading.MerchantOffer": Internal.ClassInfo, "net.minecraft.client.gui.components.toasts.TutorialToast": Internal.ClassInfo, "dev.latvian.mods.unit.function.FunctionFactory$Arg1": Internal.ClassInfo, "dev.latvian.mods.unit.function.FunctionFactory$Arg2": Internal.ClassInfo, "mezz.jei.api.gui.builder.IIngredientAcceptor": Internal.ClassInfo, "net.minecraft.world.level.block.SculkBehaviour": Internal.ClassInfo, "net.minecraft.world.inventory.BeaconMenu": Internal.ClassInfo, "dev.latvian.mods.rhino.mod.wrapper.AABBWrapper": Internal.ClassInfo, "dev.latvian.mods.kubejs.misc.MobEffectBuilder": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.ObjectDescJS": Internal.ClassInfo, "java.io.FilterOutputStream": Internal.ClassInfo, "com.mojang.brigadier.builder.LiteralArgumentBuilder": Internal.ClassInfo, "com.mojang.blaze3d.vertex.VertexFormat": Internal.ClassInfo, "net.minecraft.client.gui.spectator.SpectatorMenu": Internal.ClassInfo, "org.joml.Vector3dc": Internal.ClassInfo, "net.minecraft.world.level.biome.MobSpawnSettings$Builder": Internal.ClassInfo, "net.minecraft.world.item.crafting.BannerDuplicateRecipe": Internal.ClassInfo, "net.minecraft.world.level.levelgen.placement.CountOnEveryLayerPlacement": Internal.ClassInfo, "java.lang.Double": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.component.RecipeComponentBuilderMap": Internal.ClassInfo, "net.minecraft.world.level.biome.BiomeResolver": Internal.ClassInfo, "com.google.common.collect.ImmutableSet$Builder": Internal.ClassInfo, "io.netty.util.concurrent.ProgressiveFuture": Internal.ClassInfo, "io.redspace.ironsspellbooks.item.armor.PriestArmorItem": Internal.ClassInfo, "net.minecraft.world.level.storage.loot.entries.LootPoolEntryContainer": Internal.ClassInfo, "net.minecraftforge.event.entity.item.ItemTossEvent": Internal.ClassInfo, "net.minecraft.world.inventory.LecternMenu": Internal.ClassInfo, "it.unimi.dsi.fastutil.booleans.Boolean2CharFunction": Internal.ClassInfo, "dev.latvian.mods.kubejs.registry.RegistryCallback": Internal.ClassInfo, "net.minecraftforge.client.event.CustomizeGuiOverlayEvent$DebugText": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.HugeFungusFeature": Internal.ClassInfo, "net.minecraft.network.protocol.game.ClientboundPlayerCombatEndPacket": Internal.ClassInfo, "com.google.common.reflect.TypeToken$TypeSet": Internal.ClassInfo, "net.minecraft.world.entity.ai.sensing.VillagerHostilesSensor": Internal.ClassInfo, "java.io.DataOutput": Internal.ClassInfo, "net.minecraft.world.entity.monster.Illusioner": Internal.ClassInfo, "net.minecraft.world.scores.PlayerTeam": Internal.ClassInfo, "net.minecraftforge.common.util.ITeleporter": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.ChorusPlantFeature": Internal.ClassInfo, "net.minecraft.world.item.MapItem": Internal.ClassInfo, "net.minecraftforge.network.NetworkEvent$GatherLoginPayloadsEvent": Internal.ClassInfo, "net.minecraftforge.server.command.EnumArgument$Info": Internal.ClassInfo, "dev.latvian.mods.kubejs.loot.FunctionContainer": Internal.ClassInfo, "net.minecraft.world.level.levelgen.structure.templatesystem.BlockAgeProcessor": Internal.ClassInfo, "net.minecraft.world.level.biome.MultiNoiseBiomeSourceParameterList$Preset$SourceProvider": Internal.ClassInfo, "net.minecraft.world.item.WrittenBookItem": Internal.ClassInfo, "net.minecraft.world.entity.projectile.Snowball": Internal.ClassInfo, "com.mojang.datafixers.util.Pair": Internal.ClassInfo, "net.minecraft.world.entity.ai.village.poi.PoiManager$Occupancy": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.DripstoneClusterFeature": Internal.ClassInfo, "java.lang.constant.Constable": Internal.ClassInfo, "net.minecraft.world.entity.monster.Zoglin": Internal.ClassInfo, "dev.architectury.hooks.level.biome.SpawnProperties": Internal.ClassInfo, "com.squoshi.irons_spells_js.events.SpellModificationEventJS": Internal.ClassInfo, "dev.latvian.mods.rhino.SymbolScriptable": Internal.ClassInfo, "org.joml.Vector3fc": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.ModifyRecipeResultCallback": Internal.ClassInfo, "net.minecraft.world.item.enchantment.SweepingEdgeEnchantment": Internal.ClassInfo, "net.minecraft.world.level.block.PowderSnowBlock": Internal.ClassInfo, "net.minecraft.commands.synchronization.SingletonArgumentInfo": Internal.ClassInfo, "com.squoshi.irons_spells_js.spell.SpellModificationBuilder$ModifiedClientCastCallback": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundChatPacket": Internal.ClassInfo, "dev.latvian.mods.kubejs.util.Lazy": Internal.ClassInfo, "net.minecraft.world.level.block.WetSpongeBlock": Internal.ClassInfo, "net.minecraft.world.inventory.CraftingMenu": Internal.ClassInfo, "net.minecraftforge.client.extensions.IForgeFont": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.CountConfiguration": Internal.ClassInfo, "net.minecraft.util.random.WeightedEntry$IntrusiveBase": Internal.ClassInfo, "net.minecraftforge.client.event.ScreenEvent$Init$Pre": Internal.ClassInfo, "software.bernie.geckolib.core.animation.AnimatableManager$ControllerRegistrar": Internal.ClassInfo, "net.minecraft.nbt.StringTag": Internal.ClassInfo, "net.minecraft.client.gui.components.events.AbstractContainerEventHandler": Internal.ClassInfo, "io.redspace.ironsspellbooks.particle.BlastwaveParticleOptions": Internal.ClassInfo, "net.minecraft.world.entity.animal.allay.Allay": Internal.ClassInfo, "com.mojang.datafixers.Products$P13": Internal.ClassInfo, "com.mojang.datafixers.Products$P14": Internal.ClassInfo, "com.mojang.datafixers.Products$P11": Internal.ClassInfo, "com.mojang.datafixers.Products$P12": Internal.ClassInfo, "net.minecraft.world.level.block.entity.LidBlockEntity": Internal.ClassInfo, "dev.architectury.registry.level.biome.BiomeModifications$BiomeContext": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundChatSessionUpdatePacket": Internal.ClassInfo, "net.minecraftforge.client.event.RenderLevelStageEvent": Internal.ClassInfo, "net.minecraftforge.client.event.ClientPlayerNetworkEvent$LoggingIn": Internal.ClassInfo, "com.mojang.datafixers.Products$P10": Internal.ClassInfo, "net.minecraft.world.item.crafting.FireworkStarFadeRecipe": Internal.ClassInfo, "net.minecraft.client.DebugQueryHandler": Internal.ClassInfo, "net.minecraft.commands.arguments.ScoreHolderArgument$Result": Internal.ClassInfo, "net.minecraft.server.packs.repository.Pack$Position": Internal.ClassInfo, "net.minecraftforge.forgespi.language.IModLanguageProvider$IModLanguageLoader": Internal.ClassInfo, "net.minecraft.world.item.crafting.SuspiciousStewRecipe": Internal.ClassInfo, "dev.latvian.mods.kubejs.typings.desc.ObjectDescJS$Entry": Internal.ClassInfo, "net.minecraftforge.common.util.Lazy": Internal.ClassInfo, "com.mojang.datafixers.Products$P15": Internal.ClassInfo, "com.mojang.datafixers.Products$P16": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.configurations.PointedDripstoneConfiguration": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.stateproviders.BlockStateProvider": Internal.ClassInfo, "net.minecraft.world.entity.ai.control.MoveControl": Internal.ClassInfo, "software.bernie.geckolib.animatable.SingletonGeoAnimatable": Internal.ClassInfo, "net.minecraftforge.event.entity.player.PlayerXpEvent$PickupXp": Internal.ClassInfo, "io.redspace.ironsspellbooks.block.pedestal.PedestalBlock": Internal.ClassInfo, "net.minecraft.world.level.block.BushBlock": Internal.ClassInfo, "net.minecraft.world.entity.animal.Chicken": Internal.ClassInfo, "net.minecraft.nbt.CompoundTag": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.BasaltPillarFeature": Internal.ClassInfo, "net.minecraft.world.level.pathfinder.PathComputationType": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeBlock": Internal.ClassInfo, "net.minecraft.client.renderer.blockentity.BlockEntityRenderDispatcher": Internal.ClassInfo, "net.minecraft.world.entity.monster.AbstractIllager$IllagerArmPose": Internal.ClassInfo, "net.minecraft.world.entity.npc.WanderingTrader": Internal.ClassInfo, "io.netty.util.concurrent.MultithreadEventExecutorGroup": Internal.ClassInfo, "net.minecraft.world.level.block.BaseRailBlock": Internal.ClassInfo, "net.minecraft.client.quickplay.QuickPlayLog": Internal.ClassInfo, "net.minecraft.world.level.block.entity.BeaconBlockEntity$BeaconBeamSection": Internal.ClassInfo, "net.minecraftforge.common.extensions.IForgeItem": Internal.ClassInfo, "net.minecraft.world.level.levelgen.feature.DiskFeature": Internal.ClassInfo, "net.minecraft.world.item.alchemy.Potions": Internal.ClassInfo, "net.minecraft.world.level.block.BrushableBlock": Internal.ClassInfo, "net.minecraft.world.level.block.state.properties.StairsShape": Internal.ClassInfo, "net.minecraft.world.level.chunk.LightChunkGetter": Internal.ClassInfo, "dev.latvian.mods.kubejs.recipe.special.SpecialRecipeSerializerManager": Internal.ClassInfo, "net.minecraft.client.renderer.RenderStateShard$TexturingStateShard": Internal.ClassInfo, "net.minecraft.network.protocol.game.ServerboundSetBeaconPacket": Internal.ClassInfo, "net.minecraft.world.item.ArmorMaterial": Internal.ClassInfo, "org.joml.Vector3ic": Internal.ClassInfo, "net.minecraft.client.Minecraft": Internal.ClassInfo, "dev.latvian.mods.kubejs.block.custom.MultipartShapedBlockBuilder": Internal.ClassInfo, "net.minecraft.util.ExtraCodecs$TagOrElementLocation": Internal.ClassInfo, "com.mojang.serialization.DataResult$PartialResult": Internal.ClassInfo, "net.minecraft.world.level.block.WeatheringCopperStairBlock": Internal.ClassInfo, "net.minecraft.client.telemetry.TelemetryEventType$Builder": Internal.ClassInfo, "net.minecraftforge.common.crafting.conditions.ICondition$IContext": Internal.ClassInfo, "dev.latvian.mods.kubejs.client.painter.Painter": Internal.ClassInfo, "net.minecraft.util.valueproviders.WeightedListInt": Internal.ClassInfo, "io.redspace.ironsspellbooks.capabilities.magic.RecastInstance": Internal.ClassInfo, "dev.latvian.mods.kubejs.entity.LivingEntityDeathEventJS": Internal.ClassInfo, "net.minecraft.world.item.ElytraItem": Internal.ClassInfo, "mezz.jei.api.gui.ingredient.IRecipeSlotTooltipCallback": Internal.ClassInfo, "net.minecraft.client.tutorial.Tutorial": Internal.ClassInfo, "com.mojang.blaze3d.audio.Channel": Internal.ClassInfo, "io.redspace.ironsspellbooks.capabilities.magic.CooldownInstance": Internal.ClassInfo, "dev.latvian.mods.kubejs.player.InventoryEventJS": Internal.ClassInfo, "dev.latvian.mods.kubejs.gui.chest.ChestMenuClickEvent$Callback": Internal.ClassInfo, "software.bernie.geckolib.network.SerializableDataTicket": Internal.ClassInfo, "net.minecraftforge.forgespi.locating.IModFile": Internal.ClassInfo, "it.unimi.dsi.fastutil.objects.Object2CharFunction": Internal.ClassInfo}) & (Internal.Map<string, Internal.ClassInfo>);
    }
    type ClassInfo_ = ClassInfo;
    class ServerOpList extends Internal.StoredUserList<Internal.GameProfile, Internal.ServerOpListEntry> {
        constructor(arg0: Internal.File_)
        getClass(): typeof any;
        getEntries(): Internal.Collection<Internal.ServerOpListEntry>;
        "remove(com.mojang.authlib.GameProfile)"(arg0: Internal.GameProfile_): void;
        toString(): string;
        remove(arg0: Internal.GameProfile_): void;
        notifyAll(): void;
        remove(arg0: Internal.StoredUserEntry_<Internal.GameProfile>): void;
        isEmpty(): boolean;
        notify(): void;
        canBypassPlayerLimit(arg0: Internal.GameProfile_): boolean;
        save(): void;
        wait(arg0: number, arg1: number): void;
        getFile(): Internal.File;
        hashCode(): number;
        wait(): void;
        "remove(net.minecraft.server.players.StoredUserEntry)"(arg0: Internal.StoredUserEntry_<Internal.GameProfile>): void;
        getUserList(): string[];
        get(arg0: Internal.GameProfile_): Internal.ServerOpListEntry;
        wait(arg0: number): void;
        add(arg0: Internal.ServerOpListEntry_): void;
        load(): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get entries(): Internal.Collection<Internal.ServerOpListEntry>
        get empty(): boolean
        get file(): Internal.File
        get userList(): string[]
    }
    type ServerOpList_ = ServerOpList;
    class ObjectArrayList <K> extends Internal.AbstractObjectList<K> implements Internal.RandomAccess, Internal.Cloneable, Internal.Serializable {
        constructor()
        constructor(arg0: Internal.ObjectCollection_<K>)
        constructor(arg0: Internal.ObjectList_<K>)
        constructor(arg0: K[], arg1: number, arg2: number)
        constructor(arg0: Internal.ObjectIterator_<K>)
        constructor(arg0: K[])
        constructor(arg0: Internal.Iterator_<K>)
        constructor(arg0: number)
        constructor(arg0: Internal.Collection_<K>)
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E): Internal.List<E>;
        addAll(arg0: Internal.Collection_<K>): boolean;
        static copyOf<E>(arg0: Internal.Collection_<E>): Internal.List<E>;
        setElements(arg0: number, arg1: K[]): void;
        "compareTo(it.unimi.dsi.fastutil.objects.ObjectArrayList)"(arg0: Internal.ObjectArrayList_<K>): number;
        toArray<K>(arg0: K[]): K[];
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E): Internal.List<E>;
        spliterator(): Internal.ObjectSpliterator<K>;
        "compareTo(java.util.List)"(arg0: Internal.List_<K>): number;
        notify(): void;
        compareTo(arg0: any): number;
        static of<K>(...arg0: K[]): Internal.ObjectArrayList<K>;
        set(arg0: number, arg1: K): K;
        parallelStream(): Internal.Stream<K>;
        static of<K>(): Internal.ObjectArrayList<K>;
        addAll(arg0: number, arg1: Internal.Collection_<K>): boolean;
        abstract retainAll(arg0: Internal.Collection_<any>): boolean;
        addElements(arg0: number, arg1: K[], arg2: number, arg3: number): void;
        static wrap<K>(arg0: K[]): Internal.ObjectArrayList<K>;
        toArray<T>(arg0: Internal.IntFunction_<T[]>): T[];
        setElements(arg0: K[]): void;
        equals(arg0: Internal.ObjectArrayList_<K>): boolean;
        static toListWithExpectedSize<K>(arg0: number): Internal.Collector<K, any, Internal.ObjectArrayList<K>>;
        peek(arg0: number): K;
        compareTo(arg0: Internal.ObjectArrayList_<K>): number;
        "equals(java.lang.Object)"(arg0: any): boolean;
        "remove(int)"(arg0: number): K;
        size(arg0: number): void;
        remove(arg0: number): K;
        indexOf(arg0: any): number;
        static of<K>(arg0: K, arg1: K, arg2: K): Internal.ObjectList<K>;
        static wrap<K>(arg0: K[], arg1: number): Internal.ObjectArrayList<K>;
        listIterator(): Internal.ObjectListIterator<K>;
        pop(): K;
        forEach(arg0: Internal.Consumer_<K>): void;
        remove(arg0: any): boolean;
        "remove(java.lang.Object)"(arg0: any): boolean;
        removeIf(arg0: Internal.Predicate_<K>): boolean;
        "addAll(java.util.Collection)"(arg0: Internal.Collection_<K>): boolean;
        ensureCapacity(arg0: number): void;
        removeAll(arg0: Internal.Collection_<any>): boolean;
        wait(): void;
        "equals(it.unimi.dsi.fastutil.objects.ObjectArrayList)"(arg0: Internal.ObjectArrayList_<K>): boolean;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E): Internal.List<E>;
        static "of(java.lang.Object[])"<K>(...arg0: K[]): Internal.ObjectArrayList<K>;
        trim(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        add(arg0: K): boolean;
        lastIndexOf(arg0: any): number;
        clone(): any;
        setElements(arg0: number, arg1: K[], arg2: number, arg3: number): void;
        getClass(): typeof any;
        removeElements(arg0: number, arg1: number): void;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E): Internal.List<E>;
        "toArray(java.lang.Object[])"<K>(arg0: K[]): K[];
        isEmpty(): boolean;
        wait(arg0: number, arg1: number): void;
        listIterator(arg0: number): Internal.ListIterator<any>;
        abstract containsAll(arg0: Internal.Collection_<any>): boolean;
        addElements(arg0: number, arg1: K[]): void;
        static of<K>(arg0: K): Internal.ObjectList<K>;
        "addAll(int,java.util.Collection)"(arg0: number, arg1: Internal.Collection_<K>): boolean;
        get(arg0: number): K;
        contains(arg0: any): boolean;
        addAll(arg0: number, arg1: Internal.ObjectList_<K>): boolean;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E): Internal.List<E>;
        toString(): string;
        iterator(): Internal.Iterator<any>;
        "addAll(int,it.unimi.dsi.fastutil.objects.ObjectList)"(arg0: number, arg1: Internal.ObjectList_<K>): boolean;
        static "of(java.lang.Object)"<K>(arg0: K): Internal.ObjectList<K>;
        notifyAll(): void;
        elements(): K[];
        top(): K;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E): Internal.List<E>;
        "toArray(java.util.function.IntFunction)"<T>(arg0: Internal.IntFunction_<T[]>): T[];
        add(arg0: number, arg1: K): void;
        static of<E>(arg0: E, arg1: E, arg2: E, arg3: E, arg4: E, arg5: E, arg6: E, arg7: E, arg8: E, arg9: E): Internal.List<E>;
        toArray(): any[];
        replaceAll(arg0: Internal.UnaryOperator_<K>): void;
        static of<K>(arg0: K, arg1: K): Internal.ObjectList<K>;
        subList(arg0: number, arg1: number): Internal.List<any>;
        size(): number;
        trim(): void;
        unstableSort(arg0: Internal.Comparator_<K>): void;
        hashCode(): number;
        addAll(arg0: Internal.ObjectList_<K>): boolean;
        compareTo(arg0: Internal.List_<K>): number;
        sort(arg0: Internal.Comparator_<K>): void;
        clear(): void;
        wait(arg0: number): void;
        push(arg0: K): void;
        static toList<K>(): Internal.Collector<K, any, Internal.ObjectArrayList<K>>;
        equals(arg0: any): boolean;
        stream(): Internal.Stream<K>;
        getElements(arg0: number, arg1: any[], arg2: number, arg3: number): void;
        "addAll(it.unimi.dsi.fastutil.objects.ObjectList)"(arg0: Internal.ObjectList_<K>): boolean;
        set elements(arg0: K[])
        get class(): typeof any
        get empty(): boolean
        static readonly DEFAULT_INITIAL_CAPACITY: (10) & (number);
    }
    type ObjectArrayList_<K> = ObjectArrayList<K>;
    abstract class ScreenEvent$MouseButtonPressed extends Internal.ScreenEvent$MouseInput {
        constructor()
        constructor(arg0: Internal.Screen_, arg1: number, arg2: number, arg3: number)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        getButton(): number;
        setPhase(arg0: Internal.EventPriority_): void;
        getMouseX(): number;
        getScreen(): Internal.Screen;
        notifyAll(): void;
        getMouseY(): number;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        isCancelable(): boolean;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        get button(): number
        set phase(arg0: Internal.EventPriority_)
        get mouseX(): number
        get screen(): Internal.Screen
        get mouseY(): number
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get cancelable(): boolean
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
    }
    type ScreenEvent$MouseButtonPressed_ = ScreenEvent$MouseButtonPressed;
    class MutableComponent implements Internal.ComponentKJS, Internal.Component {
        getVisualOrderText(): Internal.FormattedCharSequence;
        toFlatList(): Internal.List<Internal.Component>;
        hasStyle(): boolean;
        visit<T>(arg0: Internal.FormattedText$ContentConsumer_<T>): Internal.Optional<T>;
        toJson(): Internal.JsonElement;
        visit<T>(arg0: Internal.FormattedText$StyledContentConsumer_<T>, arg1: Internal.Style_): Internal.Optional<T>;
        darkBlue(): this;
        getString(arg0: number): string;
        darkGreen(): this;
        underlined(): this;
        static nbt(arg0: string, arg1: boolean, arg2: Internal.Optional_<Internal.Component>, arg3: Internal.DataSource_): Internal.MutableComponent;
        withStyle(arg0: Internal.UnaryOperator_<Internal.Style>): this;
        clickCopy(text: string): this;
        static translatableWithFallback(arg0: string, arg1: string): Internal.MutableComponent;
        bold(value: boolean): this;
        static score(arg0: string, arg1: string): Internal.MutableComponent;
        static create(arg0: Internal.ComponentContents_): Internal.MutableComponent;
        getContents(): Internal.ComponentContents;
        "withStyle(net.minecraft.network.chat.Style)"(arg0: Internal.Style_): this;
        green(): this;
        black(): this;
        getClass(): typeof any;
        strikethrough(value: boolean): this;
        insertion(s: string): this;
        static translatable(arg0: string): Internal.MutableComponent;
        clickRunCommand(command: string): this;
        italic(): this;
        static empty(): Internal.MutableComponent;
        click(s: Internal.ClickEvent_): this;
        underlined(value: boolean): this;
        getStyle(): Internal.Style;
        self(): this;
        font(s: ResourceLocation_): this;
        darkAqua(): this;
        getString(): string;
        static of(arg0: string, arg1: Internal.Style_): Internal.FormattedText;
        darkGray(): this;
        toString(): string;
        notifyAll(): void;
        noColor(): this;
        plainCopy(): this;
        static keybind(arg0: string): Internal.MutableComponent;
        setStyle(arg0: Internal.Style_): this;
        withStyle(arg0: Internal.Style_): this;
        clickSuggestCommand(command: string): this;
        gold(): this;
        hasSiblings(): boolean;
        white(): this;
        "withStyle(java.util.function.UnaryOperator)"(arg0: Internal.UnaryOperator_<Internal.Style>): this;
        withStyle(...arg0: Internal.ChatFormatting_[]): this;
        wait(arg0: number): void;
        toFlatList(arg0: Internal.Style_): Internal.List<Internal.Component>;
        lightPurple(): this;
        copy(): this;
        append(arg0: Internal.Component_): this;
        darkRed(): this;
        notify(): void;
        clickOpenUrl(url: string): this;
        obfuscated(value: boolean): this;
        bold(): this;
        color(c: Internal.Color_): this;
        yellow(): this;
        darkPurple(): this;
        blue(): this;
        hover(s: Internal.Component_): this;
        wait(): void;
        withStyle(arg0: Internal.ChatFormatting_): this;
        aqua(): this;
        static "composite(java.util.List)"(arg0: Internal.List_<Internal.FormattedText>): Internal.FormattedText;
        clickOpenFile(path: string): this;
        static literal(arg0: string): Internal.MutableComponent;
        obfuscated(): this;
        red(): this;
        static translatable(arg0: string, ...arg1: any[]): Internal.MutableComponent;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        component(): Internal.Component;
        isEmpty(): boolean;
        asIterable(): Internal.Iterable<Internal.Component>;
        wait(arg0: number, arg1: number): void;
        "withStyle(net.minecraft.ChatFormatting)"(arg0: Internal.ChatFormatting_): this;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        rawComponent(): this;
        gray(): this;
        getSiblings(): Internal.List<Internal.Component>;
        static nullToEmpty(arg0: string): Internal.Component;
        static translatableWithFallback(arg0: string, arg1: string, ...arg2: any[]): Internal.MutableComponent;
        static "composite(net.minecraft.network.chat.FormattedText[])"(...arg0: Internal.FormattedText_[]): Internal.FormattedText;
        clickChangePage(page: string): this;
        strikethrough(): this;
        hashCode(): number;
        contains(arg0: Internal.Component_): boolean;
        static composite(...arg0: Internal.FormattedText_[]): Internal.FormattedText;
        italic(value: boolean): this;
        static of(arg0: string): Internal.FormattedText;
        static composite(arg0: Internal.List_<Internal.FormattedText>): Internal.FormattedText;
        "withStyle(net.minecraft.ChatFormatting[])"(...arg0: Internal.ChatFormatting_[]): this;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        rawCopy(): this;
        static selector(arg0: string, arg1: Internal.Optional_<Internal.Component>): Internal.MutableComponent;
        equals(arg0: any): boolean;
        forEach(action: Internal.Consumer_<Internal.Component>): void;
        get visualOrderText(): Internal.FormattedCharSequence
        get contents(): Internal.ComponentContents
        get class(): typeof any
        get style(): Internal.Style
        get string(): string
        set style(arg0: Internal.Style_)
        get empty(): boolean
        get siblings(): Internal.List<Internal.Component>
    }
    type MutableComponent_ = MutableComponent;
    class SignText {
        constructor()
        constructor(arg0: Internal.Component_[], arg1: Internal.Component_[], arg2: Internal.DyeColor_, arg3: boolean)
        getClass(): typeof any;
        setMessage(arg0: number, arg1: Internal.Component_): this;
        getRenderMessages(arg0: boolean, arg1: Internal.Function_<Internal.Component, Internal.FormattedCharSequence>): Internal.FormattedCharSequence[];
        getColor(): Internal.DyeColor;
        toString(): string;
        hasGlowingText(): boolean;
        notifyAll(): void;
        getMessage(arg0: number, arg1: boolean): Internal.Component;
        setMessage(arg0: number, arg1: Internal.Component_, arg2: Internal.Component_): this;
        hasAnyClickCommands(arg0: Player_): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        setHasGlowingText(arg0: boolean): this;
        wait(): void;
        setColor(arg0: Internal.DyeColor_): this;
        hasMessage(arg0: Player_): boolean;
        wait(arg0: number): void;
        getMessages(arg0: boolean): Internal.Component[];
        equals(arg0: any): boolean;
        get class(): typeof any
        get color(): Internal.DyeColor
        set hasGlowingText(arg0: boolean)
        set color(arg0: Internal.DyeColor_)
        static readonly DIRECT_CODEC: Internal.Codec<Internal.SignText>;
        static readonly LINES: (4) & (number);
    }
    type SignText_ = SignText;
    class EnderChestBlock extends Internal.AbstractChestBlock<Internal.EnderChestBlockEntity> implements Internal.SimpleWaterloggedBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        setFriction(arg0: number): void;
        getTypeData(): Internal.CompoundTag;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        combine(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: boolean): Internal.DoubleBlockCombiner$NeighborCombineResult<Internal.ChestBlockEntity>;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<Internal.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        set friction(arg0: number)
        get typeData(): Internal.CompoundTag
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly WATERLOGGED: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly FACING: (Internal.DirectionProperty) & (Internal.DirectionProperty);
    }
    type EnderChestBlock_ = EnderChestBlock;
    class SculkSensorBlock extends Internal.BaseEntityBlock implements Internal.SimpleWaterloggedBlock {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static canActivate(arg0: Internal.BlockState_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        setFriction(arg0: number): void;
        getTypeData(): Internal.CompoundTag;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        activate(arg0: Internal.Entity_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number, arg5: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        placeLiquid(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.FluidState_): boolean;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        getPickupSound(arg0: Internal.BlockState_): Internal.Optional<Internal.SoundEvent>;
        setIsRandomlyTicking(arg0: boolean): void;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getPickupSound(): Internal.Optional<Internal.SoundEvent>;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        pickupBlock(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        getFriction(): number;
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        static tryResonateVibration(arg0: Internal.Entity_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number): void;
        /**
         * @deprecated
        */
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        static deactivate(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        arch$holder(): Internal.Holder<Internal.Block>;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        canPlaceLiquid(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Fluid_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<Internal.Component>, arg3: Internal.TooltipFlag_): void;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getActiveTicks(): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        static getPhase(arg0: Internal.BlockState_): Internal.SculkSensorPhase;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        set friction(arg0: number)
        get typeData(): Internal.CompoundTag
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get pickupSound(): Internal.Optional<Internal.SoundEvent>
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get activeTicks(): number
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly COOLDOWN_TICKS: (10) & (number);
        static readonly ACTIVE_TICKS: (30) & (number);
        static readonly WATERLOGGED: (Internal.BooleanProperty) & (Internal.BooleanProperty);
        static readonly POWER: (Internal.IntegerProperty) & (Internal.IntegerProperty);
        static readonly PHASE: Internal.EnumProperty<Internal.SculkSensorPhase>;
    }
    type SculkSensorBlock_ = SculkSensorBlock;
    abstract class NearestVisibleLivingEntitySensor extends Internal.Sensor<Internal.LivingEntity> {
        constructor()
        getClass(): typeof any;
        toString(): string;
        static isEntityTargetable(arg0: Internal.LivingEntity_, arg1: Internal.LivingEntity_): boolean;
        notifyAll(): void;
        static isEntityAttackableIgnoringLineOfSight(arg0: Internal.LivingEntity_, arg1: Internal.LivingEntity_): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        tick(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): void;
        wait(): void;
        static isEntityAttackable(arg0: Internal.LivingEntity_, arg1: Internal.LivingEntity_): boolean;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        requires(): Internal.Set<Internal.MemoryModuleType<any>>;
        get class(): typeof any
    }
    type NearestVisibleLivingEntitySensor_ = NearestVisibleLivingEntitySensor;
    abstract class URLConnection {
        setIfModifiedSince(arg0: number): void;
        getHeaderFieldLong(arg0: string, arg1: number): number;
        getContentLengthLong(): number;
        /**
         * @deprecated
        */
        static getDefaultRequestProperty(arg0: string): string;
        getConnectTimeout(): number;
        static setFileNameMap(arg0: Internal.FileNameMap_): void;
        getRequestProperty(arg0: string): string;
        setDoInput(arg0: boolean): void;
        notify(): void;
        setUseCaches(arg0: boolean): void;
        setDoOutput(arg0: boolean): void;
        getContentLength(): number;
        static setDefaultAllowUserInteraction(arg0: boolean): void;
        getContent(arg0: typeof any[]): any;
        getUseCaches(): boolean;
        getIfModifiedSince(): number;
        getContent(): any;
        getHeaderField(arg0: string): string;
        getURL(): Internal.URL;
        getDoOutput(): boolean;
        static getDefaultUseCaches(arg0: string): boolean;
        abstract connect(): void;
        setConnectTimeout(arg0: number): void;
        getDoInput(): boolean;
        getReadTimeout(): number;
        getRequestProperties(): Internal.Map<string, Internal.List<string>>;
        getHeaderField(arg0: number): string;
        getContentEncoding(): string;
        wait(): void;
        /**
         * @deprecated
        */
        static setDefaultRequestProperty(arg0: string, arg1: string): void;
        setAllowUserInteraction(arg0: boolean): void;
        "getHeaderField(java.lang.String)"(arg0: string): string;
        getInputStream(): Internal.InputStream;
        getClass(): typeof any;
        getDate(): number;
        static guessContentTypeFromStream(arg0: Internal.InputStream_): string;
        "getHeaderField(int)"(arg0: number): string;
        setReadTimeout(arg0: number): void;
        static getDefaultAllowUserInteraction(): boolean;
        getOutputStream(): Internal.OutputStream;
        wait(arg0: number, arg1: number): void;
        getPermission(): Internal.Permission;
        getHeaderFieldInt(arg0: string, arg1: number): number;
        getLastModified(): number;
        static getFileNameMap(): Internal.FileNameMap;
        getAllowUserInteraction(): boolean;
        getDefaultUseCaches(): boolean;
        addRequestProperty(arg0: string, arg1: string): void;
        toString(): string;
        getHeaderFields(): Internal.Map<string, Internal.List<string>>;
        notifyAll(): void;
        getHeaderFieldKey(arg0: number): string;
        static setContentHandlerFactory(arg0: Internal.ContentHandlerFactory_): void;
        setRequestProperty(arg0: string, arg1: string): void;
        getExpiration(): number;
        setDefaultUseCaches(arg0: boolean): void;
        getHeaderFieldDate(arg0: string, arg1: number): number;
        hashCode(): number;
        static setDefaultUseCaches(arg0: string, arg1: boolean): void;
        wait(arg0: number): void;
        static guessContentTypeFromName(arg0: string): string;
        getContentType(): string;
        equals(arg0: any): boolean;
        set ifModifiedSince(arg0: number)
        get contentLengthLong(): number
        get connectTimeout(): number
        set fileNameMap(arg0: Internal.FileNameMap_)
        set doInput(arg0: boolean)
        set useCaches(arg0: boolean)
        set doOutput(arg0: boolean)
        get contentLength(): number
        set defaultAllowUserInteraction(arg0: boolean)
        get useCaches(): boolean
        get ifModifiedSince(): number
        get content(): any
        get URL(): Internal.URL
        get doOutput(): boolean
        set connectTimeout(arg0: number)
        get doInput(): boolean
        get readTimeout(): number
        get requestProperties(): Internal.Map<string, Internal.List<string>>
        get contentEncoding(): string
        set allowUserInteraction(arg0: boolean)
        get inputStream(): Internal.InputStream
        get class(): typeof any
        get date(): number
        set readTimeout(arg0: number)
        get defaultAllowUserInteraction(): boolean
        get outputStream(): Internal.OutputStream
        get permission(): Internal.Permission
        get lastModified(): number
        get fileNameMap(): Internal.FileNameMap
        get allowUserInteraction(): boolean
        get defaultUseCaches(): boolean
        get headerFields(): Internal.Map<string, Internal.List<string>>
        set contentHandlerFactory(arg0: Internal.ContentHandlerFactory_)
        get expiration(): number
        set defaultUseCaches(arg0: boolean)
        get contentType(): string
    }
    type URLConnection_ = URLConnection;
    interface ObjectIterator <K> extends Internal.Iterator<K> {
        remove(): void;
        skip(arg0: number): number;
        abstract next(): K;
        abstract hasNext(): boolean;
        forEachRemaining(arg0: Internal.Consumer_<K>): void;
    }
    type ObjectIterator_<K> = ObjectIterator<K>;
    class ArrowKnockbackEnchantment extends Internal.Enchantment {
        constructor(arg0: Internal.Enchantment$Rarity_, ...arg1: Internal.EquipmentSlot_[])
        getClass(): typeof any;
        getDamageProtection(arg0: number, arg1: DamageSource_): number;
        getFullname(arg0: number): Internal.Component;
        isCompatibleWith(arg0: Internal.Enchantment_): boolean;
        getRarity(): Internal.Enchantment$Rarity;
        isTradeable(): boolean;
        isTreasureOnly(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getMaxCost(arg0: number): number;
        isDiscoverable(): boolean;
        getMinCost(arg0: number): number;
        static byId(arg0: number): Internal.Enchantment;
        getDescriptionId(): string;
        doPostHurt(arg0: Internal.LivingEntity_, arg1: Internal.Entity_, arg2: number): void;
        toString(): string;
        getMaxLevel(): number;
        doPostAttack(arg0: Internal.LivingEntity_, arg1: Internal.Entity_, arg2: number): void;
        notifyAll(): void;
        getSlotItems(arg0: Internal.LivingEntity_): Internal.Map<Internal.EquipmentSlot, Internal.ItemStack>;
        getMinLevel(): number;
        /**
         * @deprecated
        */
        getDamageBonus(arg0: number, arg1: Internal.MobType_): number;
        hashCode(): number;
        isCurse(): boolean;
        allowedInCreativeTab(arg0: Internal.Item_, arg1: Internal.Set_<Internal.EnchantmentCategory>): boolean;
        wait(): void;
        getDamageBonus(arg0: number, arg1: Internal.MobType_, arg2: Internal.ItemStack_): number;
        wait(arg0: number): void;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_): boolean;
        equals(arg0: any): boolean;
        canEnchant(arg0: Internal.ItemStack_): boolean;
        isAllowedOnBooks(): boolean;
        get class(): typeof any
        get rarity(): Internal.Enchantment$Rarity
        get tradeable(): boolean
        get treasureOnly(): boolean
        get discoverable(): boolean
        get descriptionId(): string
        get maxLevel(): number
        get minLevel(): number
        get curse(): boolean
        get allowedOnBooks(): boolean
    }
    type ArrowKnockbackEnchantment_ = ArrowKnockbackEnchantment;
    interface SignatureUpdater$Output {
        abstract update(arg0: number[]): void;
        (arg0: number[]): void;
    }
    type SignatureUpdater$Output_ = ((arg0: number[])=> void) | SignatureUpdater$Output;
    class BlockEvent$EntityPlaceEvent extends Internal.BlockEvent {
        constructor()
        constructor(arg0: Internal.BlockSnapshot_, arg1: Internal.BlockState_, arg2: Internal.Entity_)
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        setPhase(arg0: Internal.EventPriority_): void;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getPos(): BlockPos;
        isCancelable(): boolean;
        getListenerList(): Internal.ListenerList;
        getState(): Internal.BlockState;
        getLevel(): Internal.LevelAccessor;
        getResult(): Internal.Event$Result;
        toString(): string;
        notifyAll(): void;
        getPlacedAgainst(): Internal.BlockState;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        getEntity(): Internal.Entity;
        wait(): void;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        getBlockSnapshot(): Internal.BlockSnapshot;
        getPlacedBlock(): Internal.BlockState;
        equals(arg0: any): boolean;
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get canceled(): boolean
        get pos(): BlockPos
        get cancelable(): boolean
        get listenerList(): Internal.ListenerList
        get state(): Internal.BlockState
        get level(): Internal.LevelAccessor
        get result(): Internal.Event$Result
        get placedAgainst(): Internal.BlockState
        set result(arg0: Internal.Event$Result_)
        get entity(): Internal.Entity
        get phase(): Internal.EventPriority
        get blockSnapshot(): Internal.BlockSnapshot
        get placedBlock(): Internal.BlockState
    }
    type BlockEvent$EntityPlaceEvent_ = BlockEvent$EntityPlaceEvent;
    interface InputFluid extends Internal.InputReplacement, Internal.FluidLike {
        replaceInput(recipe: Internal.RecipeJS_, match: Internal.ReplacementMatch_, original: Internal.InputReplacement_): any;
        abstract getAmount(): number;
        matches(other: Internal.FluidLike_): boolean;
        of(o: any): Internal.InputReplacement;
        transform(transformer: Internal.InputReplacementTransformer_): Internal.InputReplacementTransformer$Replacement;
        copy(amount: number): Internal.FluidLike;
        isEmpty(): boolean;
        get amount(): number
        get empty(): boolean
        (): number;
    }
    type InputFluid_ = InputFluid | Internal.FluidStackJS_ | (()=> number);
    class RandomPatchConfiguration extends Internal.Record implements Internal.FeatureConfiguration {
        constructor(arg0: number, arg1: number, arg2: number, arg3: Internal.Holder_<Internal.PlacedFeature>)
        getClass(): typeof any;
        ySpread(): number;
        getFeatures(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        toString(): string;
        notifyAll(): void;
        feature(): Internal.Holder<Internal.PlacedFeature>;
        notify(): void;
        xzSpread(): number;
        wait(arg0: number, arg1: number): void;
        tries(): number;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get features(): Internal.Stream<Internal.ConfiguredFeature<any, any>>
        static readonly CODEC: Internal.Codec<Internal.RandomPatchConfiguration>;
    }
    type RandomPatchConfiguration_ = RandomPatchConfiguration;
    interface IForgeEnchantment {
        allowedInCreativeTab(arg0: Internal.Item_, arg1: Internal.Set_<Internal.EnchantmentCategory>): boolean;
        getDamageBonus(arg0: number, arg1: Internal.MobType_, arg2: Internal.ItemStack_): number;
    }
    type IForgeEnchantment_ = IForgeEnchantment;
    class ModuleDescriptor$Opens$Modifier extends Internal.Enum<Internal.ModuleDescriptor$Opens$Modifier> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        getDeclaringClass(): typeof Internal.ModuleDescriptor$Opens$Modifier;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.ModuleDescriptor$Opens$Modifier>>;
        static valueOf(arg0: string): Internal.ModuleDescriptor$Opens$Modifier;
        notifyAll(): void;
        static values(): Internal.ModuleDescriptor$Opens$Modifier[];
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.module.ModuleDescriptor$Opens$Modifier)"(arg0: Internal.ModuleDescriptor$Opens$Modifier_): number;
        compareTo(arg0: Internal.ModuleDescriptor$Opens$Modifier_): number;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        get declaringClass(): typeof Internal.ModuleDescriptor$Opens$Modifier
        static readonly MANDATED: (Internal.ModuleDescriptor$Opens$Modifier) & (Internal.ModuleDescriptor$Opens$Modifier);
        static readonly SYNTHETIC: (Internal.ModuleDescriptor$Opens$Modifier) & (Internal.ModuleDescriptor$Opens$Modifier);
    }
    type ModuleDescriptor$Opens$Modifier_ = "mandated" | ModuleDescriptor$Opens$Modifier | "synthetic";
    abstract class SinglePieceStructure extends Internal.Structure {
        static simpleCodec<S extends Internal.Structure>(arg0: Internal.Function_<Internal.Structure$StructureSettings, S>): Internal.Codec<S>;
        getClass(): typeof any;
        findGenerationPoint(arg0: Internal.Structure$GenerationContext_): Internal.Optional<Internal.Structure$GenerationStub>;
        generate(arg0: Internal.RegistryAccess_, arg1: Internal.ChunkGenerator_, arg2: Internal.BiomeSource_, arg3: Internal.RandomState_, arg4: Internal.StructureTemplateManager_, arg5: number, arg6: Internal.ChunkPos_, arg7: number, arg8: Internal.LevelHeightAccessor_, arg9: Internal.Predicate_<Internal.Holder<Internal.Biome>>): Internal.StructureStart;
        toString(): string;
        biomes(): Internal.HolderSet<Internal.Biome>;
        findValidGenerationPoint(arg0: Internal.Structure$GenerationContext_): Internal.Optional<Internal.Structure$GenerationStub>;
        spawnOverrides(): Internal.Map<Internal.MobCategory, Internal.StructureSpawnOverride>;
        step(): Internal.GenerationStep$Decoration;
        notifyAll(): void;
        notify(): void;
        terrainAdaptation(): Internal.TerrainAdjustment;
        wait(arg0: number, arg1: number): void;
        adjustBoundingBox(arg0: Internal.BoundingBox_): Internal.BoundingBox;
        hashCode(): number;
        abstract type(): Internal.StructureType<any>;
        static settingsCodec<S extends Internal.Structure>(arg0: Internal.RecordCodecBuilder$Instance_<S>): Internal.RecordCodecBuilder<S, Internal.Structure$StructureSettings>;
        wait(): void;
        modifiableStructureInfo(): Internal.ModifiableStructureInfo;
        wait(arg0: number): void;
        afterPlace(arg0: Internal.WorldGenLevel_, arg1: Internal.StructureManager_, arg2: Internal.ChunkGenerator_, arg3: Internal.RandomSource_, arg4: Internal.BoundingBox_, arg5: Internal.ChunkPos_, arg6: Internal.PiecesContainer_): void;
        equals(arg0: any): boolean;
        getModifiedStructureSettings(): Internal.Structure$StructureSettings;
        get class(): typeof any
        set tingsCodec(arg0: Internal.RecordCodecBuilder$Instance_<S>)
        get modifiedStructureSettings(): Internal.Structure$StructureSettings
    }
    type SinglePieceStructure_ = SinglePieceStructure;
    class ModuleLayer$Controller {
        getClass(): typeof any;
        toString(): string;
        addExports(arg0: Internal.Module_, arg1: string, arg2: Internal.Module_): this;
        layer(): Internal.ModuleLayer;
        notifyAll(): void;
        addOpens(arg0: Internal.Module_, arg1: string, arg2: Internal.Module_): this;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        addReads(arg0: Internal.Module_, arg1: Internal.Module_): this;
        get class(): typeof any
    }
    type ModuleLayer$Controller_ = ModuleLayer$Controller;
    class ModCheck$Confidence extends Internal.Enum<Internal.ModCheck$Confidence> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        compareTo(arg0: Internal.ModCheck$Confidence_): number;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        "compareTo(net.minecraft.util.ModCheck$Confidence)"(arg0: Internal.ModCheck$Confidence_): number;
        compareTo(arg0: any): number;
        name(): string;
        getDeclaringClass(): typeof Internal.ModCheck$Confidence;
        static values(): Internal.ModCheck$Confidence[];
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        static valueOf(arg0: string): Internal.ModCheck$Confidence;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.ModCheck$Confidence>>;
        get class(): typeof any
        get declaringClass(): typeof Internal.ModCheck$Confidence
        static readonly VERY_LIKELY: (Internal.ModCheck$Confidence) & (Internal.ModCheck$Confidence);
        static readonly DEFINITELY: (Internal.ModCheck$Confidence) & (Internal.ModCheck$Confidence);
        static readonly PROBABLY_NOT: (Internal.ModCheck$Confidence) & (Internal.ModCheck$Confidence);
    }
    type ModCheck$Confidence_ = "definitely" | "very_likely" | ModCheck$Confidence | "probably_not";
    abstract class BlockBehaviour$BlockStateBase extends Internal.StateHolder<Internal.Block, Internal.BlockState> implements Internal.BlockStateKJS {
        populateNeighbours(arg0: Internal.Map_<Internal.Map<Internal.Property<any>, Internal.Comparable<any>>, Internal.BlockState>): void;
        updateNeighbourShapes(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: number): void;
        canOcclude(): boolean;
        getValues(): Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>;
        getLightBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): number;
        tick(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.RandomSource_): void;
        updateNeighbourShapes(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: number, arg3: number): void;
        "is(net.minecraft.core.HolderSet)"(arg0: Internal.HolderSet_<Internal.Block>): boolean;
        is(arg0: Internal.TagKey_<Internal.Block>): boolean;
        setValue<T extends Internal.Comparable<T>, V extends T>(arg0: Internal.Property_<T>, arg1: V): Internal.BlockState;
        useShapeForLightOcclusion(): boolean;
        initCache(): void;
        isRandomlyTicking(): boolean;
        shouldSpawnParticlesOnBreak(): boolean;
        canSurvive(arg0: Internal.LevelReader_, arg1: BlockPos_): boolean;
        getSeed(arg0: BlockPos_): number;
        isFaceSturdy(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        getCollisionShape(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.CollisionContext_): Internal.VoxelShape;
        getClass(): typeof any;
        isViewBlocking(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        getFluidState(): Internal.FluidState;
        getShape(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.VoxelShape;
        "is(net.minecraft.world.level.block.Block)"(arg0: Internal.Block_): boolean;
        getTags(): Internal.Stream<Internal.TagKey<Internal.Block>>;
        instrument(): Internal.NoteBlockInstrument;
        hasBlockEntity(): boolean;
        getValue<T extends Internal.Comparable<T>>(arg0: Internal.Property_<T>): T;
        hasAnalogOutputSignal(): boolean;
        hasOffsetFunction(): boolean;
        setRequiresTool(arg0: boolean): void;
        getRenderShape(): Internal.RenderShape;
        getPistonPushReaction(): Internal.PushReaction;
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.Direction_): boolean;
        getDrops(arg0: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        isFaceSturdy(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.SupportType_): boolean;
        hasPostProcess(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        /**
         * @deprecated
        */
        isSolid(): boolean;
        toString(): string;
        entityInside(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Entity_): void;
        notifyAll(): void;
        updateIndirectNeighbourShapes(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: number): void;
        entityCanStandOn(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.Entity_): boolean;
        isCollisionShapeFullBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        getCollisionShape(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.VoxelShape;
        canBeReplaced(arg0: Internal.Fluid_): boolean;
        wait(arg0: number): void;
        getOptionalValue<T extends Internal.Comparable<T>>(arg0: Internal.Property_<T>): Internal.Optional<T>;
        randomTick(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.RandomSource_): void;
        getShape(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.CollisionContext_): Internal.VoxelShape;
        getSignal(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.Direction_): number;
        /**
         * @deprecated
        */
        getLightEmission(): number;
        notify(): void;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        getInteractionShape(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.VoxelShape;
        cycle<T extends Internal.Comparable<T>>(arg0: Internal.Property_<T>): Internal.BlockState;
        setLightEmission(arg0: number): void;
        isSolidRender(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isPathfindable(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.PathComputationType_): boolean;
        getVisualShape(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.CollisionContext_): Internal.VoxelShape;
        ignitedByLava(): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.Rotation_): Internal.BlockState;
        setDestroySpeed(arg0: number): void;
        is(arg0: Internal.HolderSet_<Internal.Block>): boolean;
        onRemove(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: boolean): void;
        getMenuProvider(arg0: Internal.Level_, arg1: BlockPos_): Internal.MenuProvider;
        getBlockSupportShape(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.VoxelShape;
        getProperties(): Internal.Collection<Internal.Property<any>>;
        wait(): void;
        spawnAfterBreak(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: Internal.ItemStack_, arg3: boolean): void;
        onPlace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: boolean): void;
        getBlock(): Internal.Block;
        /**
         * @deprecated
        */
        liquid(): boolean;
        getOcclusionShape(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.VoxelShape;
        hasProperty<T extends Internal.Comparable<T>>(arg0: Internal.Property_<T>): boolean;
        is(arg0: Internal.Block_): boolean;
        emissiveRendering(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        trySetValue<T extends Internal.Comparable<T>, V extends T>(arg0: Internal.Property_<T>, arg1: V): Internal.BlockState;
        mirror(arg0: Internal.Mirror_): Internal.BlockState;
        "canBeReplaced(net.minecraft.world.level.material.Fluid)"(arg0: Internal.Fluid_): boolean;
        isAir(): boolean;
        getDestroySpeed(arg0: Internal.BlockGetter_, arg1: BlockPos_): number;
        getDirectSignal(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.Direction_): number;
        /**
         * @deprecated
        */
        blocksMotion(): boolean;
        wait(arg0: number, arg1: number): void;
        isValidSpawn(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.EntityType_<any>): boolean;
        hasLargeCollisionShape(): boolean;
        getDestroyProgress(arg0: Player_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        updateShape(arg0: Internal.Direction_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: BlockPos_): Internal.BlockState;
        isSuffocating(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        is(arg0: Internal.TagKey_<Internal.Block>, arg1: Internal.Predicate_<Internal.BlockBehaviour$BlockStateBase>): boolean;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Block_, arg3: BlockPos_, arg4: boolean): void;
        "is(net.minecraft.tags.TagKey)"(arg0: Internal.TagKey_<Internal.Block>): boolean;
        updateIndirectNeighbourShapes(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: number, arg3: number): void;
        getFaceOcclusionShape(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.Direction_): Internal.VoxelShape;
        getShadeBrightness(arg0: Internal.BlockGetter_, arg1: BlockPos_): number;
        isRedstoneConductor(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        getAnalogOutputSignal(arg0: Internal.Level_, arg1: BlockPos_): number;
        use(arg0: Internal.Level_, arg1: Player_, arg2: Internal.InteractionHand_, arg3: Internal.BlockHitResult_): Internal.InteractionResult;
        getMapColor(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.MapColor;
        getBlockHolder(): Internal.Holder<Internal.Block>;
        canBeReplaced(): boolean;
        propagatesSkylightDown(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        hashCode(): number;
        getOffset(arg0: Internal.BlockGetter_, arg1: BlockPos_): Vec3d;
        getSoundType(): SoundType;
        "canBeReplaced(net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockPlaceContext_): boolean;
        entityCanStandOnFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.Entity_, arg3: Internal.Direction_): boolean;
        triggerEvent(arg0: Internal.Level_, arg1: BlockPos_, arg2: number, arg3: number): boolean;
        requiresCorrectToolForDrops(): boolean;
        canBeReplaced(arg0: Internal.BlockPlaceContext_): boolean;
        isSignalSource(): boolean;
        attack(arg0: Internal.Level_, arg1: BlockPos_, arg2: Player_): void;
        equals(arg0: any): boolean;
        get values(): Internal.ImmutableMap<Internal.Property<any>, Internal.Comparable<any>>
        get randomlyTicking(): boolean
        get class(): typeof any
        get fluidState(): Internal.FluidState
        get tags(): Internal.Stream<Internal.TagKey<Internal.Block>>
        set requiresTool(arg0: boolean)
        get renderShape(): Internal.RenderShape
        get pistonPushReaction(): Internal.PushReaction
        /**
         * @deprecated
        */
        get solid(): boolean
        /**
         * @deprecated
        */
        get lightEmission(): number
        set lightEmission(arg0: number)
        set destroySpeed(arg0: number)
        get properties(): Internal.Collection<Internal.Property<any>>
        get block(): Internal.Block
        get air(): boolean
        get blockHolder(): Internal.Holder<Internal.Block>
        get soundType(): SoundType
        get signalSource(): boolean
    }
    type BlockBehaviour$BlockStateBase_ = BlockBehaviour$BlockStateBase;
    class AbuseReportRequest$ThirdPartyServerInfo {
        constructor(arg0: string)
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        address: string;
    }
    type AbuseReportRequest$ThirdPartyServerInfo_ = AbuseReportRequest$ThirdPartyServerInfo;
    class ArrayVoxelShape extends Internal.VoxelShape {
        max(arg0: Internal.Direction$Axis_, arg1: number, arg2: number): number;
        getClass(): typeof any;
        toString(): string;
        max(arg0: Internal.Direction$Axis_): number;
        closestPointTo(arg0: Vec3d_): Internal.Optional<Vec3d>;
        notifyAll(): void;
        isEmpty(): boolean;
        forAllEdges(arg0: Internal.Shapes$DoubleLineConsumer_): void;
        notify(): void;
        forAllBoxes(arg0: Internal.Shapes$DoubleLineConsumer_): void;
        wait(arg0: number, arg1: number): void;
        move(arg0: number, arg1: number, arg2: number): Internal.VoxelShape;
        getFaceShape(arg0: Internal.Direction_): Internal.VoxelShape;
        hashCode(): number;
        min(arg0: Internal.Direction$Axis_, arg1: number, arg2: number): number;
        wait(): void;
        optimize(): Internal.VoxelShape;
        wait(arg0: number): void;
        toAabbs(): Internal.List<Internal.AABB>;
        bounds(): Internal.AABB;
        clip(arg0: Vec3d_, arg1: Vec3d_, arg2: BlockPos_): Internal.BlockHitResult;
        min(arg0: Internal.Direction$Axis_): number;
        equals(arg0: any): boolean;
        collide(arg0: Internal.Direction$Axis_, arg1: Internal.AABB_, arg2: number): number;
        get class(): typeof any
        get empty(): boolean
    }
    type ArrayVoxelShape_ = ArrayVoxelShape;
    class RuntimeException extends Internal.Exception {
        constructor()
        constructor(arg0: string, arg1: Internal.Throwable_)
        constructor(arg0: Internal.Throwable_)
        constructor(arg0: string)
        getClass(): typeof any;
        "printStackTrace(java.io.PrintStream)"(arg0: Internal.PrintStream_): void;
        toString(): string;
        getMessage(): string;
        notifyAll(): void;
        "printStackTrace(java.io.PrintWriter)"(arg0: Internal.PrintWriter_): void;
        getCause(): Internal.Throwable;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getStackTrace(): Internal.StackTraceElement[];
        printStackTrace(arg0: Internal.PrintWriter_): void;
        hashCode(): number;
        getSuppressed(): Internal.Throwable[];
        fillInStackTrace(): Internal.Throwable;
        addSuppressed(arg0: Internal.Throwable_): void;
        wait(): void;
        printStackTrace(): void;
        initCause(arg0: Internal.Throwable_): Internal.Throwable;
        wait(arg0: number): void;
        setStackTrace(arg0: Internal.StackTraceElement_[]): void;
        printStackTrace(arg0: Internal.PrintStream_): void;
        equals(arg0: any): boolean;
        getLocalizedMessage(): string;
        get class(): typeof any
        get message(): string
        get cause(): Internal.Throwable
        get stackTrace(): Internal.StackTraceElement[]
        get suppressed(): Internal.Throwable[]
        set stackTrace(arg0: Internal.StackTraceElement_[])
        get localizedMessage(): string
    }
    type RuntimeException_ = RuntimeException;
    class MultipartBlockStateGenerator {
        constructor()
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        toJson(): Internal.JsonObject;
        wait(arg0: number, arg1: number): void;
        hashCode(): number;
        part(when: string, model: string): void;
        wait(): void;
        wait(arg0: number): void;
        "part(java.lang.String,java.lang.String)"(when: string, model: string): void;
        part(when: string, consumer: Internal.Consumer_<Internal.MultipartBlockStateGenerator$Part>): void;
        equals(arg0: any): boolean;
        "part(java.lang.String,java.util.function.Consumer)"(when: string, consumer: Internal.Consumer_<Internal.MultipartBlockStateGenerator$Part>): void;
        get class(): typeof any
    }
    type MultipartBlockStateGenerator_ = MultipartBlockStateGenerator;
    class ModelGenerator$Face {
        constructor()
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        cull(): this;
        notify(): void;
        toJson(): Internal.JsonObject;
        wait(arg0: number, arg1: number): void;
        tex(t: string): this;
        tintindex(i: number): this;
        hashCode(): number;
        uv(u0: number, v0: number, u1: number, v1: number): this;
        cull(d: Internal.Direction_): this;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        get class(): typeof any
    }
    type ModelGenerator$Face_ = ModelGenerator$Face;
    class DocumentField extends Internal.AbstractDocument<Internal.DocumentField> {
        constructor()
        isFinal(): boolean;
        getClass(): typeof any;
        merge(other: Internal.AbstractDocumentBase_<any>): Internal.AbstractDocumentBase<any>;
        getType(): Internal.PropertyType<any>;
        copy(): Internal.AbstractDocumentBase<any>;
        applyProperties(): Internal.AbstractDocumentBase<any>;
        notify(): void;
        setFinal(aFinal: boolean): void;
        wait(arg0: number, arg1: number): void;
        fulfillsConditions(): boolean;
        isShouldGSON(): boolean;
        getValue(): Internal.PropertyValue<any, any>;
        setName(name: string): void;
        getName(): string;
        isStatic(): boolean;
        deserialize(object: Internal.JsonObject_): void;
        addPropertyJson(json: Internal.JsonObject_): Internal.AbstractDocumentBase<Internal.DocumentField>;
        static fromJava(info: Internal.FieldInfo_): Internal.DocumentField;
        getMergedComment(): Internal.PropertyComment;
        toString(): string;
        notifyAll(): void;
        serialize(): Internal.JsonObject;
        isHidden(): boolean;
        setStatic(aStatic: boolean): void;
        findPropertiesOf<E extends Internal.AbstractProperty<any>>(property: E): Internal.List<E>;
        findProperty<P extends Internal.AbstractProperty<P>>(property: P): Internal.Optional<P>;
        hashCode(): number;
        merge(other: Internal.DocumentField_): this;
        findProperties(predicate: Internal.Predicate_<Internal.AbstractProperty<any>>): Internal.List<Internal.AbstractProperty<any>>;
        wait(): void;
        wait(arg0: number): void;
        "merge(com.probejs.jdoc.document.AbstractDocumentBase)"(other: Internal.AbstractDocumentBase_<any>): Internal.AbstractDocumentBase<any>;
        equals(o: any): boolean;
        hasProperty<P extends Internal.AbstractProperty<P>>(property: P): boolean;
        "merge(com.probejs.jdoc.document.DocumentField)"(other: Internal.DocumentField_): this;
        get "final"(): boolean
        get class(): typeof any
        get type(): Internal.PropertyType<any>
        set "final"(aFinal: boolean)
        get shouldGSON(): boolean
        get value(): Internal.PropertyValue<any, any>
        set name(name: string)
        get name(): string
        get "static"(): boolean
        get mergedComment(): Internal.PropertyComment
        get hidden(): boolean
        set "static"(aStatic: boolean)
    }
    type DocumentField_ = DocumentField;
    class Ghast extends Internal.FlyingMob implements Internal.Enemy {
        constructor(arg0: Internal.EntityType_<Internal.Ghast>, arg1: Internal.Level_)
        isInWall(): boolean;
        getAllSlots(): Internal.Iterable<Internal.ItemStack>;
        getUpVector(arg0: number): Vec3d;
        gameEvent(arg0: Internal.GameEvent_, arg1: Internal.Entity_): void;
        remove(arg0: Internal.Entity$RemovalReason_): void;
        static checkMobSpawnRules(arg0: Internal.EntityType_<Internal.Mob>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        setDefaultMovementSpeedMultiplier(speed: number): void;
        getScale(): number;
        isSuppressingSlidingDownLadder(): boolean;
        getBlockZ(): number;
        isSuppressingBounce(): boolean;
        dampensVibrations(): boolean;
        isSilent(): boolean;
        setTarget(arg0: Internal.LivingEntity_): void;
        "playSound(net.minecraft.sounds.SoundEvent)"(id: Internal.SoundEvent_): void;
        getPitch(): number;
        getPathfindingMalus(arg0: Internal.BlockPathTypes_): number;
        getRandom(): Internal.RandomSource;
        isOnFire(): boolean;
        canReplaceEqualItem(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getPassengersAndSelf(): Internal.Stream<Internal.Entity>;
        rotate(arg0: Internal.Rotation_): number;
        shouldRiderFaceForward(arg0: Player_): boolean;
        getPositionCodec(): Internal.VecDeltaCodec;
        getPickedResult(arg0: Internal.HitResult_): Internal.ItemStack;
        /**
         * @deprecated
        */
        updateFluidHeightAndDoFluidPushing(arg0: Internal.TagKey_<Internal.Fluid>, arg1: number): boolean;
        setMaxUpStep(arg0: number): void;
        convertTo<T extends Internal.Mob>(arg0: Internal.EntityType_<T>, arg1: boolean): T;
        getFallFlyingTicks(): number;
        setPosition(x: number, y: number, z: number): void;
        runCommandSilent(command: string): number;
        chunkPosition(): Internal.ChunkPos;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        "getAttributeBaseValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        dropLeash(arg0: boolean, arg1: boolean): void;
        clearRestriction(): void;
        gameEvent(arg0: Internal.GameEvent_): void;
        "self()"(): Internal.LivingEntity;
        setXxa(arg0: number): void;
        rayTrace(): Internal.RayTraceResultJS;
        alwaysAccepts(): boolean;
        spawnItemParticles(arg0: Internal.ItemStack_, arg1: number): void;
        setDelayedLeashHolderId(arg0: number): void;
        isShiftKeyDown(): boolean;
        isInFluidType(arg0: Internal.FluidState_): boolean;
        "isHolding(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        setUUID(arg0: Internal.UUID_): void;
        getNoActionTime(): number;
        checkBelowWorld(): void;
        isVisuallyCrawling(): boolean;
        isAggressive(): boolean;
        setYya(arg0: number): void;
        shouldUpdateFluidWhileBoating(arg0: Internal.FluidState_, arg1: Internal.Boat_): boolean;
        setMotionZ(z: number): void;
        setDropChance(arg0: Internal.EquipmentSlot_, arg1: number): void;
        "broadcastBreakEvent(net.minecraft.world.InteractionHand)"(arg0: Internal.InteractionHand_): void;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        canFreeze(): boolean;
        ignoreExplosion(): boolean;
        teleportRelative(arg0: number, arg1: number, arg2: number): void;
        getBlockY(): number;
        setBaby(arg0: boolean): void;
        getLastHurtByMob(): Internal.LivingEntity;
        isSpectator(): boolean;
        isInWaterOrBubble(): boolean;
        setMainHandItem(item: Internal.ItemStack_): void;
        removeEffectNoUpdate(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        updateFluidHeightAndDoFluidPushing(): void;
        spawnAtLocation(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        getPersistentData(): Internal.CompoundTag;
        getHealth(): number;
        getMaxHealth(): number;
        getPortalCooldown(): number;
        getItem(): Internal.ItemStack;
        setPathfindingMalus(arg0: Internal.BlockPathTypes_, arg1: number): void;
        causeFallDamage(arg0: number, arg1: number, arg2: DamageSource_): boolean;
        getRandomZ(arg0: number): number;
        setAggressive(arg0: boolean): void;
        releaseUsingItem(): void;
        setRemoved(arg0: Internal.Entity$RemovalReason_): void;
        getPosition(arg0: number): Vec3d;
        removeFreeWill(): void;
        getDistanceSq(arg0: number, arg1: number, arg2: number): number;
        isInWaterRainOrBubble(): boolean;
        getRemovalReason(): Internal.Entity$RemovalReason;
        removeWhenFarAway(arg0: number): boolean;
        wait(arg0: number): void;
        isIgnoringBlockTriggers(): boolean;
        setRecordPlayingNearby(arg0: BlockPos_, arg1: boolean): void;
        getHandHoldingItemAngle(arg0: Internal.Item_): Vec3d;
        hasItemInSlot(arg0: Internal.EquipmentSlot_): boolean;
        canUpdate(arg0: boolean): void;
        getIndirectPassengers(): Internal.Iterable<Internal.Entity>;
        getEyeInFluidType(): Internal.FluidType;
        distanceToSqr(arg0: Vec3d_): number;
        resetFallDistance(): void;
        canSprint(): boolean;
        blockPosition(): BlockPos;
        isSteppingCarefully(): boolean;
        setBoundingBox(arg0: Internal.AABB_): void;
        isAmbientCreature(): boolean;
        getSoundFromFluidType(arg0: Internal.FluidType_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        "spawnAtLocation(net.minecraft.world.item.ItemStack,float)"(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        addAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        getBlockX(): number;
        /**
         * @deprecated
        */
        getLightLevelDependentMagicValue(): number;
        isFallFlying(): boolean;
        getEncodeId(): string;
        getY(arg0: number): number;
        setZza(arg0: number): void;
        getBlock(): Internal.BlockContainerJS;
        getMaxHeadXRot(): number;
        getNbt(): Internal.CompoundTag;
        setEquipment(slot: Internal.EquipmentSlot_, item: Internal.ItemStack_): void;
        setInvisible(arg0: boolean): void;
        randomTeleport(arg0: number, arg1: number, arg2: number, arg3: boolean): boolean;
        invalidateCaps(): void;
        getName(): Internal.Component;
        playAmbientSound(): void;
        getEffect(arg0: Internal.MobEffect_): Internal.MobEffectInstance;
        setTotalMovementSpeedMultiplier(speed: number): void;
        onGround(): boolean;
        getControlledVehicle(): Internal.Entity;
        setHealth(arg0: number): void;
        isOnSameTeam(arg0: Internal.Entity_): boolean;
        attack(arg0: DamageSource_, arg1: number): boolean;
        onInsideBubbleColumn(arg0: boolean): void;
        getArmorValue(): number;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        tick(): void;
        getEyePosition(): Vec3d;
        getEyeHeight(): number;
        setDiscardFriction(arg0: boolean): void;
        hasPassenger(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getKillCredit(): Internal.LivingEntity;
        getYaw(): number;
        swing(arg0: Internal.InteractionHand_, arg1: boolean): void;
        isPushedByFluid(arg0: Internal.FluidType_): boolean;
        getUsedItemHand(): Internal.InteractionHand;
        setDefaultMovementSpeed(speed: number): void;
        sinkInFluid(arg0: Internal.FluidType_): void;
        canAttackType(arg0: Internal.EntityType_<any>): boolean;
        hasPermissions(arg0: number): boolean;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        canEntityBeSeen(entity: Internal.LivingEntity_): boolean;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        getBrain(): Internal.Brain<any>;
        setCustomNameVisible(arg0: boolean): void;
        isAlliedTo(arg0: Internal.Team_): boolean;
        static createMobAttributes(): Internal.AttributeSupplier$Builder;
        isAutoSpinAttack(): boolean;
        getControllingPassenger(): Internal.LivingEntity;
        canFireProjectileWeapon(arg0: Internal.ProjectileWeaponItem_): boolean;
        getRemainingFireTicks(): number;
        getScriptType(): Internal.ScriptType;
        onlyOpCanSetNbt(): boolean;
        shouldDiscardFriction(): boolean;
        startRiding(arg0: Internal.Entity_): boolean;
        saveWithoutId(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        getForward(): Vec3d;
        serializeNBT(): Internal.Tag;
        fireImmune(): boolean;
        addMotion(arg0: number, arg1: number, arg2: number): void;
        getMaxFallDistance(): number;
        isHolding(arg0: Internal.Item_): boolean;
        setFeetArmorItem(item: Internal.ItemStack_): void;
        getZ(arg0: number): number;
        hasCustomOutlineRendering(arg0: Player_): boolean;
        getId(): number;
        static areAllEffectsAmbient(arg0: Internal.Collection_<Internal.MobEffectInstance>): boolean;
        canBeHitByProjectile(): boolean;
        doHurtTarget(arg0: Internal.Entity_): boolean;
        getTicksFrozen(): number;
        handler$zcl000$isInvisibleTo(arg0: Player_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getRandomX(arg0: number): number;
        getEyeY(): number;
        spawnAtLocation(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        pick(arg0: number, arg1: number, arg2: boolean): Internal.HitResult;
        getVoicePitch(): number;
        setStatusMessage(message: Internal.Component_): void;
        skipDropExperience(): void;
        setSleepingPos(arg0: BlockPos_): void;
        getBoundingBox(): Internal.AABB;
        isInWaterOrRain(): boolean;
        isDescending(): boolean;
        getAttributeBaseValue(arg0: Internal.Attribute_): number;
        sendEffectToPassengers(arg0: Internal.MobEffectInstance_): void;
        setItemSlot(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        getHeadRotSpeed(): number;
        getYHeadRot(): number;
        equals(arg0: any): boolean;
        getViewYRot(arg0: number): number;
        getProjectile(arg0: Internal.ItemStack_): Internal.ItemStack;
        dismountsUnderwater(): boolean;
        isAffectedByPotions(): boolean;
        addTag(arg0: string): boolean;
        playerTouch(arg0: Player_): void;
        getEyeHeight(arg0: Internal.Pose_): number;
        getAddEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        syncPacketPositionCodec(arg0: number, arg1: number, arg2: number): void;
        setAbsorptionAmount(arg0: number): void;
        isWithinRestriction(arg0: BlockPos_): boolean;
        static getEquipmentForSlot(arg0: Internal.EquipmentSlot_, arg1: number): Internal.Item;
        getTeam(): Internal.Team;
        shouldRenderAtSqrDistance(arg0: number): boolean;
        damageSources(): Internal.DamageSources;
        removeAllGoals(arg0: Internal.Predicate_<Internal.Goal>): void;
        swing(): void;
        setTicksFrozen(arg0: number): void;
        getUseItem(): Internal.ItemStack;
        recreateFromPacket(arg0: Internal.ClientboundAddEntityPacket_): void;
        getMyRidingOffset(): number;
        canStartSwimming(): boolean;
        dismountTo(arg0: number, arg1: number, arg2: number): void;
        setDeltaMovement(arg0: Vec3d_): void;
        getLeashOffset(arg0: number): Vec3d;
        isBaby(): boolean;
        hasCustomName(): boolean;
        getSwimAmount(arg0: number): number;
        damageEquipment(slot: Internal.EquipmentSlot_): void;
        isLiving(): boolean;
        isGlowing(): boolean;
        getX(): number;
        "isInFluidType(net.minecraft.world.level.material.FluidState)"(arg0: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        canBreatheUnderwater(): boolean;
        isVehicle(): boolean;
        die(arg0: DamageSource_): void;
        removeAllEffects(): boolean;
        getLeashOffset(): Vec3d;
        hasLineOfSight(arg0: Internal.Entity_): boolean;
        onClimbable(): boolean;
        isAttackable(): boolean;
        spawnAtLocation(arg0: Internal.ItemStack_): Internal.ItemEntity;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        thunderHit(arg0: Internal.ServerLevel_, arg1: Internal.LightningBolt_): void;
        setIsInPowderSnow(arg0: boolean): void;
        doEnchantDamageEffects(arg0: Internal.LivingEntity_, arg1: Internal.Entity_): void;
        setCustomName(arg0: Internal.Component_): void;
        getSlot(arg0: number): Internal.SlotAccess;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        getTeamId(): string;
        stopSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        canBeRiddenUnderFluidType(arg0: Internal.FluidType_, arg1: Internal.Entity_): boolean;
        setStingerCount(arg0: number): void;
        handler$zcl000$setTicksFrozen(arg0: number, arg1: Internal.CallbackInfo_): void;
        isUnderWater(): boolean;
        stopRiding(): void;
        getMaxHeadYRot(): number;
        getLeashHolder(): Internal.Entity;
        isCustomNameVisible(): boolean;
        isSupportedBy(arg0: BlockPos_): boolean;
        getPistonPushReaction(): Internal.PushReaction;
        getX(arg0: number): number;
        shouldRiderSit(): boolean;
        getSensing(): Internal.Sensing;
        lookAt(arg0: Internal.EntityAnchorArgument$Anchor_, arg1: Vec3d_): void;
        getLegsArmorItem(): Internal.ItemStack;
        captureDrops(arg0: Internal.Collection_<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getLootTableSeed(): number;
        getDeltaMovement(): Vec3d;
        isInFluidType(arg0: Internal.FluidType_): boolean;
        canTakeItem(arg0: Internal.ItemStack_): boolean;
        getFluidMotionScale(arg0: Internal.FluidType_): number;
        getMotionX(): number;
        "onSyncedDataUpdated(java.util.List)"(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        shouldDropExperience(): boolean;
        hasPassenger(arg0: Internal.Entity_): boolean;
        canBeLeashed(arg0: Player_): boolean;
        hasIndirectPassenger(arg0: Internal.Entity_): boolean;
        getEntityData(): Internal.SynchedEntityData;
        setSecondsOnFire(arg0: number): void;
        moveTo(arg0: number, arg1: number, arg2: number): void;
        "getDisplayName()"(): Internal.Component;
        getLootTable(): ResourceLocation;
        getTicksUsingItem(): number;
        handleInsidePortal(arg0: BlockPos_): void;
        getArrowCount(): number;
        getPotionEffects(): Internal.EntityPotionEffectsJS;
        getMoveControl(): Internal.MoveControl;
        setMotion(arg0: number, arg1: number, arg2: number): void;
        playSound(arg0: Internal.SoundEvent_): void;
        updateFluidHeightAndDoFluidPushing(arg0: Internal.Predicate_<Internal.FluidState>): void;
        absMoveTo(arg0: number, arg1: number, arg2: number): void;
        isOnRails(): boolean;
        getStingerCount(): number;
        getDefaultMovementSpeed(): number;
        restoreFrom(arg0: Internal.Entity_): void;
        getFallSounds(): Internal.LivingEntity$Fallsounds;
        getAttributeTotalValue(attribute: Internal.Attribute_): number;
        getDimensionChangingDelay(): number;
        isPeacefulCreature(): boolean;
        setLivingEntityFlag(arg0: number, arg1: boolean): void;
        setOnGround(arg0: boolean): void;
        addEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): boolean;
        ate(): void;
        setPos(arg0: number, arg1: number, arg2: number): void;
        setYaw(arg0: number): void;
        getPickRadius(): number;
        notify(): void;
        getFirstTick(): boolean;
        setPersistenceRequired(): void;
        getLastHurtByMobTimestamp(): number;
        getVehicle(): Internal.Entity;
        isEffectiveAi(): boolean;
        startRiding(arg0: Internal.Entity_, arg1: boolean): boolean;
        setSpawnCancelled(arg0: boolean): void;
        getStringUuid(): string;
        isRemoved(): boolean;
        setSwimming(arg0: boolean): void;
        canHydrateInFluidType(arg0: Internal.FluidType_): boolean;
        getMainArm(): Internal.HumanoidArm;
        teleportToWithTicket(arg0: number, arg1: number, arg2: number): void;
        checkSpawnRules(arg0: Internal.LevelAccessor_, arg1: Internal.MobSpawnType_): boolean;
        spawnAnim(): void;
        getJumpBoostPower(): number;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        getRotationVector(): Internal.Vec2;
        self(): Internal.Entity;
        refreshDimensions(): void;
        getHurtDir(): number;
        isSprinting(): boolean;
        isMaxGroupSizeReached(arg0: number): boolean;
        "getAttributeValue(net.minecraft.world.entity.ai.attributes.Attribute)"(arg0: Internal.Attribute_): number;
        "isHolding(net.minecraft.world.item.Item)"(arg0: Internal.Item_): boolean;
        "spawnAtLocation(net.minecraft.world.level.ItemLike)"(arg0: Internal.ItemLike_): Internal.ItemEntity;
        getMotionY(): number;
        getOffhandItem(): Internal.ItemStack;
        canCollideWith(arg0: Internal.Entity_): boolean;
        getEyePosition(arg0: number): Vec3d;
        setShiftKeyDown(arg0: boolean): void;
        getPassengers(): Internal.EntityArrayList;
        getBlockExplosionResistance(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.FluidState_, arg5: number): number;
        getFluidFallDistanceModifier(arg0: Internal.FluidType_): number;
        getMaxHeightFluidType(): Internal.FluidType;
        getZ(): number;
        clearSleepingPos(): void;
        canSpawnSprintParticle(): boolean;
        "moveTo(net.minecraft.core.BlockPos,float,float)"(arg0: BlockPos_, arg1: number, arg2: number): void;
        teleportTo(arg0: number, arg1: number, arg2: number): void;
        getLastHurtMob(): Internal.LivingEntity;
        getAttributeBaseValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        getServer(): Internal.MinecraftServer;
        getExperienceReward(): number;
        getSelfAndPassengers(): Internal.Stream<Internal.Entity>;
        moveRelative(arg0: number, arg1: Vec3d_): void;
        isAddedToWorld(): boolean;
        getFirstPassenger(): Internal.Entity;
        handler$zbn000$curio$canFreeze(arg0: Internal.CallbackInfoReturnable_<any>): void;
        heal(arg0: number): void;
        saveAsPassenger(arg0: Internal.CompoundTag_): boolean;
        getSpawnType(): Internal.MobSpawnType;
        setLastHurtMob(arg0: Internal.Entity_): void;
        setLastHurtByMob(arg0: Internal.LivingEntity_): void;
        interact(arg0: Player_, arg1: Internal.InteractionHand_): Internal.InteractionResult;
        getDismountLocationForPassenger(arg0: Internal.LivingEntity_): Vec3d;
        isCharging(): boolean;
        checkSlowFallDistance(): void;
        getSoundSource(): Internal.SoundSource;
        canStandOnFluid(arg0: Internal.FluidState_): boolean;
        getLastDamageSource(): DamageSource;
        setNoActionTime(arg0: number): void;
        setMovementSpeedAddition(speed: number): void;
        equipmentHasChanged(arg0: Internal.ItemStack_, arg1: Internal.ItemStack_): boolean;
        getPose(): Internal.Pose;
        touchingUnloadedChunk(): boolean;
        modifyAttribute(attribute: Internal.Attribute_, identifier: string, d: number, operation: Internal.AttributeModifier$Operation_): void;
        getAttribute(arg0: Internal.Attribute_): Internal.AttributeInstance;
        getLookAngle(): Vec3d;
        setPositionAndRotation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        canBeAffected(arg0: Internal.MobEffectInstance_): boolean;
        getAmbientSoundInterval(): number;
        getRestrictCenter(): BlockPos;
        setArrowCount(arg0: number): void;
        getMotionZ(): number;
        isLeftHanded(): boolean;
        removeVehicle(): void;
        isPersistenceRequired(): boolean;
        isInvisible(): boolean;
        is(arg0: Internal.Entity_): boolean;
        setZ(z: number): void;
        getBedOrientation(): Internal.Direction;
        getY(): number;
        ejectPassengers(): void;
        removeEffect(arg0: Internal.MobEffect_): boolean;
        hashCode(): number;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        eat(arg0: Internal.Level_, arg1: Internal.ItemStack_): Internal.ItemStack;
        getProfile(): Internal.GameProfile;
        isDeadOrDying(): boolean;
        setHeadArmorItem(item: Internal.ItemStack_): void;
        static setViewScale(arg0: number): void;
        take(arg0: Internal.Entity_, arg1: number): void;
        isWithinMeleeAttackRange(arg0: Internal.LivingEntity_): boolean;
        setLevelCallback(arg0: Internal.EntityInLevelCallback_): void;
        broadcastBreakEvent(arg0: Internal.EquipmentSlot_): void;
        getLookControl(): Internal.LookControl;
        showVehicleHealth(): boolean;
        getDistance(pos: BlockPos_): number;
        isBlocking(): boolean;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number): void;
        removeAttribute(attribute: Internal.Attribute_, identifier: string): void;
        playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        getExplosionPower(): number;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        handler$zco000$handleEquipmentChanges(arg0: Internal.CallbackInfoReturnable_<any>): void;
        canAttack(arg0: Internal.LivingEntity_): boolean;
        getOffHandItem(): Internal.ItemStack;
        startSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isOnScoreboardTeam(teamId: string): boolean;
        /**
         * @deprecated
        */
        isPushedByFluid(): boolean;
        startUsingItem(arg0: Internal.InteractionHand_): void;
        position(): Vec3d;
        static getEquipmentSlotForItem(arg0: Internal.ItemStack_): Internal.EquipmentSlot;
        getEquipment(slot: Internal.EquipmentSlot_): Internal.ItemStack;
        getArmorCoverPercentage(): number;
        displayFireAnimation(): boolean;
        handleRelativeFrictionAndCalculateMovement(arg0: Vec3d_, arg1: number): Vec3d;
        turn(arg0: number, arg1: number): void;
        getAirSupply(): number;
        getRopeHoldPosition(arg0: number): Vec3d;
        copyPosition(arg0: Internal.Entity_): void;
        onAddedToWorld(): void;
        "hasPassenger(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        isCrouching(): boolean;
        moveTo(arg0: BlockPos_, arg1: number, arg2: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        "getAttributeBaseValue(net.minecraft.world.entity.ai.attributes.Attribute)"(attribute: Internal.Attribute_): number;
        readAdditionalSaveData(arg0: Internal.CompoundTag_): void;
        onLeaveCombat(): void;
        getMotionDirection(): Internal.Direction;
        canBeCollidedWith(): boolean;
        setY(y: number): void;
        getAttributeValue(arg0: Internal.Attribute_): number;
        getFeetBlockState(): Internal.BlockState;
        lavaHurt(): void;
        handleDamageEvent(arg0: DamageSource_): void;
        isWithinRestriction(): boolean;
        canChangeDimensions(): boolean;
        changeDimension(arg0: Internal.ServerLevel_, arg1: Internal.ITeleporter_): Internal.Entity;
        jumpInFluid(arg0: Internal.FluidType_): void;
        getCommandSenderWorld(): Internal.Level;
        positionRider(arg0: Internal.Entity_): void;
        baseTick(): void;
        getTotalMovementSpeed(): number;
        broadcastToPlayer(arg0: Internal.ServerPlayer_): boolean;
        changeDimension(arg0: Internal.ServerLevel_): Internal.Entity;
        moveInFluid(arg0: Internal.FluidState_, arg1: Vec3d_, arg2: number): boolean;
        getSleepingPos(): Internal.Optional<BlockPos>;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        damageHeldItem(): void;
        getCustomName(): Internal.Component;
        getClass(): typeof any;
        "self()"(): Internal.Entity;
        isVisuallySwimming(): boolean;
        getMaxAirSupply(): number;
        canTrample(arg0: Internal.BlockState_, arg1: BlockPos_, arg2: number): boolean;
        attack(hp: number): void;
        canSwimInFluidType(arg0: Internal.FluidType_): boolean;
        setItemInHand(arg0: Internal.InteractionHand_, arg1: Internal.ItemStack_): void;
        setMaxHealth(hp: number): void;
        getFacing(): Internal.Direction;
        getAttributes(): Internal.AttributeMap;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>, arg1: boolean): boolean;
        isSpawnCancelled(): boolean;
        "hasPassenger(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getDimensions(arg0: Internal.Pose_): Internal.EntityDimensions;
        isPassengerOfSameVehicle(arg0: Internal.Entity_): boolean;
        getBoundingBoxForCulling(): Internal.AABB;
        isSwimming(): boolean;
        getTarget(): Internal.LivingEntity;
        setSprinting(arg0: boolean): void;
        mayInteract(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        restrictTo(arg0: BlockPos_, arg1: number): void;
        setPortalCooldown(): void;
        getAttackAnim(arg0: number): number;
        setX(x: number): void;
        trackingPosition(): Vec3d;
        getNameTagOffsetY(): number;
        isInvulnerable(): boolean;
        isInLava(): boolean;
        getPortalWaitTime(): number;
        isInWater(): boolean;
        getBlockStateOn(): Internal.BlockState;
        awardKillScore(arg0: Internal.Entity_, arg1: number, arg2: DamageSource_): void;
        /**
         * @deprecated
        */
        finalizeSpawn(arg0: Internal.ServerLevelAccessor_, arg1: Internal.DifficultyInstance_, arg2: Internal.MobSpawnType_, arg3: Internal.SpawnGroupData_, arg4: Internal.CompoundTag_): Internal.SpawnGroupData;
        getItemBySlot(arg0: Internal.EquipmentSlot_): Internal.ItemStack;
        wantsToPickUp(arg0: Internal.ItemStack_): boolean;
        getFluidJumpThreshold(): number;
        "setPositionAndRotation(double,double,double,float,float)"(x: number, y: number, z: number, yaw: number, pitch: number): void;
        isInvisibleTo(arg0: Player_): boolean;
        hasEffect(arg0: Internal.MobEffect_): boolean;
        swing(arg0: Internal.InteractionHand_): void;
        getHeldItem(hand: Internal.InteractionHand_): Internal.ItemStack;
        stopSleeping(): void;
        setAirSupply(arg0: number): void;
        getRootVehicle(): Internal.Entity;
        getOnPos(): BlockPos;
        onPathfindingDone(): void;
        save(arg0: Internal.CompoundTag_): boolean;
        isUndead(): boolean;
        static createLivingAttributes(): Internal.AttributeSupplier$Builder;
        getLocalBoundsForPose(arg0: Internal.Pose_): Internal.AABB;
        isNoGravity(): boolean;
        getStepHeight(): number;
        curePotionEffects(arg0: Internal.ItemStack_): boolean;
        stopUsingItem(): void;
        isSleeping(): boolean;
        onItemPickup(arg0: Internal.ItemEntity_): void;
        acceptsFailure(): boolean;
        setCharging(arg0: boolean): void;
        setOnGroundWithKnownMovement(arg0: boolean, arg1: Vec3d_): void;
        getFluidFallingAdjustedMovement(arg0: number, arg1: boolean, arg2: Vec3d_): Vec3d;
        setOldPosAndRot(): void;
        isFree(arg0: number, arg1: number, arg2: number): boolean;
        updateSwimming(): void;
        getDismountPoses(): Internal.ImmutableList<Internal.Pose>;
        isHolding(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        getLastHurtMobTimestamp(): number;
        "moveTo(double,double,double)"(arg0: number, arg1: number, arg2: number): void;
        getSpeed(): number;
        setRemainingFireTicks(arg0: number): void;
        shouldInformAdmins(): boolean;
        canFluidExtinguish(arg0: Internal.FluidType_): boolean;
        rideTick(): void;
        /**
         * @deprecated
        */
        getOnPosLegacy(): BlockPos;
        setPos(arg0: Vec3d_): void;
        wait(): void;
        damageHeldItem(hand: Internal.InteractionHand_, amount: number, onBroken: Internal.Consumer_<Internal.ItemStack>): void;
        getUuid(): Internal.UUID;
        setCanPickUpLoot(arg0: boolean): void;
        setOffHandItem(item: Internal.ItemStack_): void;
        getMainHandItem(): Internal.ItemStack;
        spawn(): void;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        setNoAi(arg0: boolean): void;
        teleportTo(arg0: Internal.ServerLevel_, arg1: number, arg2: number, arg3: number, arg4: Internal.Set_<Internal.RelativeMovement>, arg5: number, arg6: number): boolean;
        shouldShowName(): boolean;
        getArmorSlots(): Internal.Iterable<Internal.ItemStack>;
        setSilent(arg0: boolean): void;
        canPickUpLoot(): boolean;
        hasExactlyOnePlayerPassenger(): boolean;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        static checkGhastSpawnRules(arg0: Internal.EntityType_<Internal.Ghast>, arg1: Internal.LevelAccessor_, arg2: Internal.MobSpawnType_, arg3: BlockPos_, arg4: Internal.RandomSource_): boolean;
        canBeSeenAsEnemy(): boolean;
        kill(): void;
        onEnterCombat(): void;
        setLeftHanded(arg0: boolean): void;
        getActiveEffects(): Internal.Collection<Internal.MobEffectInstance>;
        isOnPortalCooldown(): boolean;
        canAttack(arg0: Internal.LivingEntity_, arg1: Internal.TargetingConditions_): boolean;
        animateHurt(arg0: number): void;
        getAttributeValue(arg0: Internal.Holder_<Internal.Attribute>): number;
        static resetForwardDirectionOfRelativePortalPosition(arg0: Vec3d_): Vec3d;
        setPitch(arg0: number): void;
        isMultipartEntity(): boolean;
        hasRestriction(): boolean;
        setPosRaw(arg0: number, arg1: number, arg2: number): void;
        getHeadArmorItem(): Internal.ItemStack;
        handleEntityEvent(arg0: number): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntityDimensions;
        getParts(): Internal.PartEntity<any>[];
        isUsingItem(): boolean;
        isAlwaysTicking(): boolean;
        interactAt(arg0: Player_, arg1: Vec3d_, arg2: Internal.InteractionHand_): Internal.InteractionResult;
        deserializeNBT(arg0: Internal.Tag_): void;
        lerpTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onPassengerTurned(arg0: Internal.Entity_): void;
        revive(): void;
        spawnAtLocation(arg0: Internal.ItemLike_): Internal.ItemEntity;
        getBbWidth(): number;
        isEyeInFluidType(arg0: Internal.FluidType_): boolean;
        getForgePersistentData(): Internal.CompoundTag;
        addDeltaMovement(arg0: Vec3d_): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike,int)"(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        setInvulnerable(arg0: boolean): void;
        canDrownInFluidType(arg0: Internal.FluidType_): boolean;
        "getName()"(): Internal.Component;
        push(arg0: Internal.Entity_): void;
        isInFluidType(): boolean;
        mirror(arg0: Internal.Mirror_): number;
        canUpdate(): boolean;
        knockback(arg0: number, arg1: number, arg2: number): void;
        getTicksRequiredToFreeze(): number;
        maxUpStep(): number;
        handler$zco000$isCurrentlyGlowing(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getVisibilityPercent(arg0: Internal.Entity_): number;
        setGlowing(arg0: boolean): void;
        getMaxSpawnClusterSize(): number;
        load(arg0: Internal.CompoundTag_): void;
        "broadcastBreakEvent(net.minecraft.world.entity.EquipmentSlot)"(arg0: Internal.EquipmentSlot_): void;
        setLeashedTo(arg0: Internal.Entity_, arg1: boolean): void;
        isAlive(): boolean;
        handler$zdd000$changeGlowOutline(arg0: Internal.CallbackInfoReturnable_<any>): void;
        startSleeping(arg0: BlockPos_): void;
        getBbHeight(): number;
        getMeleeAttackRangeSqr(arg0: Internal.LivingEntity_): number;
        getUsername(): string;
        move(arg0: Internal.MoverType_, arg1: Vec3d_): void;
        getTags(): Internal.Set<string>;
        getViewVector(arg0: number): Vec3d;
        onRemovedFromWorld(): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        isPickable(): boolean;
        setYHeadRot(arg0: number): void;
        getLastAttacker(): Internal.LivingEntity;
        hasControllingPassenger(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number, arg2: number): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        setJumping(arg0: boolean): void;
        onPathfindingStart(): void;
        getPickResult(): Internal.ItemStack;
        getPercentFrozen(): number;
        "getMainHandItem()"(): Internal.ItemStack;
        getAbsorptionAmount(): number;
        getRandomY(): number;
        setPortalCooldown(arg0: number): void;
        getDisplayName(): Internal.Component;
        shouldBlockExplode(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number): boolean;
        hasGlowingTag(): boolean;
        setPosition(block: Internal.BlockContainerJS_): void;
        getMobType(): Internal.MobType;
        isLeashed(): boolean;
        travel(arg0: Vec3d_): void;
        addEffect(arg0: Internal.MobEffectInstance_): boolean;
        getItemInHand(arg0: Internal.InteractionHand_): Internal.ItemStack;
        getFluidTypeHeight(arg0: Internal.FluidType_): number;
        shouldBeSaved(): boolean;
        getViewXRot(arg0: number): number;
        canRiderInteract(): boolean;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        removeTag(arg0: string): boolean;
        isHoldingInAnyHand(i: Internal.Ingredient_): boolean;
        setPose(arg0: Internal.Pose_): void;
        /**
         * @deprecated
        */
        getFluidHeight(arg0: Internal.TagKey_<Internal.Fluid>): number;
        canSpawnSoulSpeedParticle(): boolean;
        getReachDistance(): number;
        static collideBoundingBox(arg0: Internal.Entity_, arg1: Vec3d_, arg2: Internal.AABB_, arg3: Internal.Level_, arg4: Internal.List_<Internal.VoxelShape>): Vec3d;
        getEntityType(): Internal.EntityType<any>;
        isWaterCreature(): boolean;
        toString(): string;
        notifyAll(): void;
        aiStep(): void;
        getPassengersRidingOffset(): number;
        setAttributeBaseValue(attribute: Internal.Attribute_, value: number): void;
        "isInFluidType(java.util.function.BiPredicate)"(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        distanceToEntitySqr(arg0: Internal.Entity_): number;
        setLastHurtByPlayer(arg0: Player_): void;
        "getServer()"(): Internal.MinecraftServer;
        isFrame(): boolean;
        broadcastBreakEvent(arg0: Internal.InteractionHand_): void;
        setLegsArmorItem(item: Internal.ItemStack_): void;
        wasExperienceConsumed(): boolean;
        isPushable(): boolean;
        setYBodyRot(arg0: number): void;
        foodEaten(is: Internal.ItemStack_): void;
        discard(): void;
        onClientRemoval(): void;
        self(): Internal.LivingEntity;
        sendSystemMessage(arg0: Internal.Component_): void;
        acceptsSuccess(): boolean;
        reviveCaps(): void;
        getDistance(x: number, y: number, z: number): number;
        setMotionY(y: number): void;
        setNoGravity(arg0: boolean): void;
        static createAttributes(): Internal.AttributeSupplier$Builder;
        getUseItemRemainingTicks(): number;
        setRotation(yaw: number, pitch: number): void;
        attackable(): boolean;
        createCommandSourceStack(): Internal.CommandSourceStack;
        getNavigation(): Internal.PathNavigation;
        isControlledByLocalInstance(): boolean;
        isMonster(): boolean;
        getLastClimbablePos(): Internal.Optional<BlockPos>;
        getEatingSound(arg0: Internal.ItemStack_): Internal.SoundEvent;
        getPerceivedTargetDistanceSquareForMeleeAttack(arg0: Internal.LivingEntity_): number;
        calculateEntityAnimation(arg0: boolean): void;
        getHorizontalFacing(): Internal.Direction;
        onSyncedDataUpdated(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        setId(arg0: number): void;
        getType(): string;
        forceAddEffect(arg0: Internal.MobEffectInstance_, arg1: Internal.Entity_): void;
        isDamageSourceBlocked(arg0: DamageSource_): boolean;
        getLightProbePosition(arg0: number): Vec3d;
        setChestArmorItem(item: Internal.ItemStack_): void;
        getActiveEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>;
        onAboveBubbleCol(arg0: boolean): void;
        onEquipItem(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_, arg2: Internal.ItemStack_): void;
        "playSound(net.minecraft.sounds.SoundEvent,float,float)"(id: Internal.SoundEvent_, volume: number, pitch: number): void;
        isPassenger(): boolean;
        hasPose(arg0: Internal.Pose_): boolean;
        checkDespawn(): void;
        isInvulnerableTo(arg0: DamageSource_): boolean;
        makeStuckInBlock(arg0: Internal.BlockState_, arg1: Vec3d_): void;
        /**
         * @deprecated
        */
        isEyeInFluid(arg0: Internal.TagKey_<Internal.Fluid>): boolean;
        isSensitiveToWater(): boolean;
        handler$zco000$updateInvisibilityStatus(arg0: Internal.CallbackInfo_): void;
        skipAttackInteraction(arg0: Internal.Entity_): boolean;
        lookAt(arg0: Internal.Entity_, arg1: number, arg2: number): void;
        setHeldItem(hand: Internal.InteractionHand_, item: Internal.ItemStack_): void;
        lerpMotion(arg0: number, arg1: number, arg2: number): void;
        "getAttributeValue(net.minecraft.core.Holder)"(arg0: Internal.Holder_<Internal.Attribute>): number;
        equipItemIfPossible(arg0: Internal.ItemStack_): Internal.ItemStack;
        shouldRender(arg0: number, arg1: number, arg2: number): boolean;
        onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>): void;
        getJumpControl(): Internal.JumpControl;
        lerpHeadTo(arg0: number, arg1: number): void;
        canDisableShield(): boolean;
        getFeetArmorItem(): Internal.ItemStack;
        static getViewScale(): number;
        setMotionX(x: number): void;
        getHandSlots(): Internal.Iterable<Internal.ItemStack>;
        handler$zcl000$isAlliedTo(arg0: Internal.Entity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        distanceToEntity(arg0: Internal.Entity_): number;
        getVisualRotationYInDegrees(): number;
        setSpeed(arg0: number): void;
        requiresCustomPersistence(): boolean;
        wait(arg0: number, arg1: number): void;
        getTeamColor(): number;
        isDiscrete(): boolean;
        setNbt(nbt: Internal.CompoundTag_): void;
        unRide(): void;
        getLevel(): Internal.Level;
        "spawnAtLocation(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): Internal.ItemEntity;
        getCombatTracker(): Internal.CombatTracker;
        "isInFluidType(net.minecraftforge.fluids.FluidType)"(arg0: Internal.FluidType_): boolean;
        checkSpawnObstruction(arg0: Internal.LevelReader_): boolean;
        extinguish(): void;
        updateDynamicGameEventListener(arg0: Internal.BiConsumer_<Internal.DynamicGameEventListener<any>, Internal.ServerLevel>): void;
        getRestrictRadius(): number;
        moveTo(arg0: Vec3d_): void;
        isColliding(arg0: BlockPos_, arg1: Internal.BlockState_): boolean;
        "onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor)"(arg0: Internal.EntityDataAccessor_<any>): void;
        "swing(net.minecraft.world.InteractionHand)"(hand: Internal.InteractionHand_): void;
        isNoAi(): boolean;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        extinguishFire(): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getChestArmorItem(): Internal.ItemStack;
        damageEquipment(slot: Internal.EquipmentSlot_, amount: number): void;
        tell(message: Internal.Component_): void;
        isInvertedHealAndHarm(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number): boolean;
        canHoldItem(arg0: Internal.ItemStack_): boolean;
        getDistanceSq(pos: BlockPos_): number;
        indicateDamage(arg0: number, arg1: number): void;
        canBeSeenByAnyone(): boolean;
        killedEntity(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): boolean;
        handler$zco000$getArmorCoverPercentage(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getClassification(arg0: boolean): Internal.MobCategory;
        isFreezing(): boolean;
        isFullyFrozen(): boolean;
        runCommand(command: string): number;
        setGuaranteedDrop(arg0: Internal.EquipmentSlot_): void;
        setSharedFlagOnFire(arg0: boolean): void;
        get inWall(): boolean
        get allSlots(): Internal.Iterable<Internal.ItemStack>
        set defaultMovementSpeedMultiplier(speed: number)
        get scale(): number
        get suppressingSlidingDownLadder(): boolean
        get blockZ(): number
        get suppressingBounce(): boolean
        get silent(): boolean
        set target(arg0: Internal.LivingEntity_)
        get pitch(): number
        get random(): Internal.RandomSource
        get onFire(): boolean
        get passengersAndSelf(): Internal.Stream<Internal.Entity>
        get positionCodec(): Internal.VecDeltaCodec
        set maxUpStep(arg0: number)
        get fallFlyingTicks(): number
        set xxa(arg0: number)
        set delayedLeashHolderId(arg0: number)
        get shiftKeyDown(): boolean
        set UUID(arg0: Internal.UUID_)
        get noActionTime(): number
        get visuallyCrawling(): boolean
        get aggressive(): boolean
        set yya(arg0: number)
        set motionZ(z: number)
        get blockY(): number
        set baby(arg0: boolean)
        get lastHurtByMob(): Internal.LivingEntity
        get spectator(): boolean
        get inWaterOrBubble(): boolean
        set mainHandItem(item: Internal.ItemStack_)
        get persistentData(): Internal.CompoundTag
        get health(): number
        get maxHealth(): number
        get portalCooldown(): number
        get item(): Internal.ItemStack
        set aggressive(arg0: boolean)
        set removed(arg0: Internal.Entity$RemovalReason_)
        get inWaterRainOrBubble(): boolean
        get removalReason(): Internal.Entity$RemovalReason
        get ignoringBlockTriggers(): boolean
        get indirectPassengers(): Internal.Iterable<Internal.Entity>
        get eyeInFluidType(): Internal.FluidType
        get steppingCarefully(): boolean
        set boundingBox(arg0: Internal.AABB_)
        get ambientCreature(): boolean
        get blockX(): number
        /**
         * @deprecated
        */
        get lightLevelDependentMagicValue(): number
        get fallFlying(): boolean
        get encodeId(): string
        set zza(arg0: number)
        get block(): Internal.BlockContainerJS
        get maxHeadXRot(): number
        get nbt(): Internal.CompoundTag
        set invisible(arg0: boolean)
        get name(): Internal.Component
        set totalMovementSpeedMultiplier(speed: number)
        get controlledVehicle(): Internal.Entity
        set health(arg0: number)
        get armorValue(): number
        get eyePosition(): Vec3d
        get eyeHeight(): number
        set discardFriction(arg0: boolean)
        get killCredit(): Internal.LivingEntity
        get yaw(): number
        get usedItemHand(): Internal.InteractionHand
        set defaultMovementSpeed(speed: number)
        get brain(): Internal.Brain<any>
        set customNameVisible(arg0: boolean)
        get autoSpinAttack(): boolean
        get controllingPassenger(): Internal.LivingEntity
        get remainingFireTicks(): number
        get scriptType(): Internal.ScriptType
        get forward(): Vec3d
        get maxFallDistance(): number
        set feetArmorItem(item: Internal.ItemStack_)
        get id(): number
        get ticksFrozen(): number
        get eyeY(): number
        get voicePitch(): number
        set statusMessage(message: Internal.Component_)
        set sleepingPos(arg0: BlockPos_)
        get boundingBox(): Internal.AABB
        get inWaterOrRain(): boolean
        get descending(): boolean
        get headRotSpeed(): number
        get YHeadRot(): number
        get affectedByPotions(): boolean
        get addEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>
        set absorptionAmount(arg0: number)
        get team(): Internal.Team
        set ticksFrozen(arg0: number)
        get useItem(): Internal.ItemStack
        get myRidingOffset(): number
        set deltaMovement(arg0: Vec3d_)
        get baby(): boolean
        get living(): boolean
        get glowing(): boolean
        get x(): number
        get vehicle(): boolean
        get leashOffset(): Vec3d
        get attackable(): boolean
        set isInPowderSnow(arg0: boolean)
        set customName(arg0: Internal.Component_)
        get teamId(): string
        set stingerCount(arg0: number)
        get underWater(): boolean
        get maxHeadYRot(): number
        get leashHolder(): Internal.Entity
        get customNameVisible(): boolean
        get pistonPushReaction(): Internal.PushReaction
        get sensing(): Internal.Sensing
        get legsArmorItem(): Internal.ItemStack
        get lootTableSeed(): number
        get deltaMovement(): Vec3d
        get motionX(): number
        get entityData(): Internal.SynchedEntityData
        set secondsOnFire(arg0: number)
        get "displayName()"(): Internal.Component
        get lootTable(): ResourceLocation
        get ticksUsingItem(): number
        get arrowCount(): number
        get potionEffects(): Internal.EntityPotionEffectsJS
        get moveControl(): Internal.MoveControl
        get onRails(): boolean
        get stingerCount(): number
        get defaultMovementSpeed(): number
        get fallSounds(): Internal.LivingEntity$Fallsounds
        get dimensionChangingDelay(): number
        get peacefulCreature(): boolean
        set onGround(arg0: boolean)
        set yaw(arg0: number)
        get pickRadius(): number
        get firstTick(): boolean
        get lastHurtByMobTimestamp(): number
        get vehicle(): Internal.Entity
        get effectiveAi(): boolean
        set spawnCancelled(arg0: boolean)
        get stringUuid(): string
        get removed(): boolean
        set swimming(arg0: boolean)
        get mainArm(): Internal.HumanoidArm
        get jumpBoostPower(): number
        get rotationVector(): Internal.Vec2
        get hurtDir(): number
        get sprinting(): boolean
        get motionY(): number
        get offhandItem(): Internal.ItemStack
        set shiftKeyDown(arg0: boolean)
        get passengers(): Internal.EntityArrayList
        get maxHeightFluidType(): Internal.FluidType
        get z(): number
        get lastHurtMob(): Internal.LivingEntity
        get server(): Internal.MinecraftServer
        get experienceReward(): number
        get selfAndPassengers(): Internal.Stream<Internal.Entity>
        get addedToWorld(): boolean
        get firstPassenger(): Internal.Entity
        get spawnType(): Internal.MobSpawnType
        set lastHurtMob(arg0: Internal.Entity_)
        set lastHurtByMob(arg0: Internal.LivingEntity_)
        get charging(): boolean
        get soundSource(): Internal.SoundSource
        get lastDamageSource(): DamageSource
        set noActionTime(arg0: number)
        set movementSpeedAddition(speed: number)
        get pose(): Internal.Pose
        get lookAngle(): Vec3d
        get ambientSoundInterval(): number
        get restrictCenter(): BlockPos
        set arrowCount(arg0: number)
        get motionZ(): number
        get leftHanded(): boolean
        get persistenceRequired(): boolean
        get invisible(): boolean
        set z(z: number)
        get bedOrientation(): Internal.Direction
        get y(): number
        get profile(): Internal.GameProfile
        get deadOrDying(): boolean
        set headArmorItem(item: Internal.ItemStack_)
        set viewScale(arg0: number)
        set levelCallback(arg0: Internal.EntityInLevelCallback_)
        get lookControl(): Internal.LookControl
        get blocking(): boolean
        get explosionPower(): number
        get offHandItem(): Internal.ItemStack
        /**
         * @deprecated
        */
        get pushedByFluid(): boolean
        get armorCoverPercentage(): number
        get airSupply(): number
        get crouching(): boolean
        get player(): boolean
        get animal(): boolean
        get motionDirection(): Internal.Direction
        set y(y: number)
        get feetBlockState(): Internal.BlockState
        get withinRestriction(): boolean
        get commandSenderWorld(): Internal.Level
        get totalMovementSpeed(): number
        get sleepingPos(): Internal.Optional<BlockPos>
        get customName(): Internal.Component
        get class(): typeof any
        get visuallySwimming(): boolean
        get maxAirSupply(): number
        set maxHealth(hp: number)
        get facing(): Internal.Direction
        get attributes(): Internal.AttributeMap
        get spawnCancelled(): boolean
        get boundingBoxForCulling(): Internal.AABB
        get swimming(): boolean
        get target(): Internal.LivingEntity
        set sprinting(arg0: boolean)
        set x(x: number)
        get nameTagOffsetY(): number
        get invulnerable(): boolean
        get inLava(): boolean
        get portalWaitTime(): number
        get inWater(): boolean
        get blockStateOn(): Internal.BlockState
        get fluidJumpThreshold(): number
        set airSupply(arg0: number)
        get rootVehicle(): Internal.Entity
        get onPos(): BlockPos
        get undead(): boolean
        get noGravity(): boolean
        get stepHeight(): number
        get sleeping(): boolean
        set charging(arg0: boolean)
        get dismountPoses(): Internal.ImmutableList<Internal.Pose>
        get lastHurtMobTimestamp(): number
        get speed(): number
        set remainingFireTicks(arg0: number)
        /**
         * @deprecated
        */
        get onPosLegacy(): BlockPos
        set pos(arg0: Vec3d_)
        get uuid(): Internal.UUID
        set canPickUpLoot(arg0: boolean)
        set offHandItem(item: Internal.ItemStack_)
        get mainHandItem(): Internal.ItemStack
        set noAi(arg0: boolean)
        get armorSlots(): Internal.Iterable<Internal.ItemStack>
        set silent(arg0: boolean)
        set leftHanded(arg0: boolean)
        get activeEffects(): Internal.Collection<Internal.MobEffectInstance>
        get onPortalCooldown(): boolean
        set pitch(arg0: number)
        get multipartEntity(): boolean
        get headArmorItem(): Internal.ItemStack
        get parts(): Internal.PartEntity<any>[]
        get usingItem(): boolean
        get alwaysTicking(): boolean
        get bbWidth(): number
        get forgePersistentData(): Internal.CompoundTag
        set invulnerable(arg0: boolean)
        get "name()"(): Internal.Component
        get inFluidType(): boolean
        get ticksRequiredToFreeze(): number
        set glowing(arg0: boolean)
        get maxSpawnClusterSize(): number
        get alive(): boolean
        get bbHeight(): number
        get username(): string
        get tags(): Internal.Set<string>
        get pickable(): boolean
        set YHeadRot(arg0: number)
        get lastAttacker(): Internal.LivingEntity
        set jumping(arg0: boolean)
        get pickResult(): Internal.ItemStack
        get percentFrozen(): number
        get "mainHandItem()"(): Internal.ItemStack
        get absorptionAmount(): number
        get randomY(): number
        set portalCooldown(arg0: number)
        get displayName(): Internal.Component
        set position(block: Internal.BlockContainerJS_)
        get mobType(): Internal.MobType
        get leashed(): boolean
        set pose(arg0: Internal.Pose_)
        get reachDistance(): number
        get entityType(): Internal.EntityType<any>
        get waterCreature(): boolean
        get passengersRidingOffset(): number
        set lastHurtByPlayer(arg0: Player_)
        get "server()"(): Internal.MinecraftServer
        get frame(): boolean
        set legsArmorItem(item: Internal.ItemStack_)
        get pushable(): boolean
        set YBodyRot(arg0: number)
        set motionY(y: number)
        set noGravity(arg0: boolean)
        get useItemRemainingTicks(): number
        get navigation(): Internal.PathNavigation
        get controlledByLocalInstance(): boolean
        get monster(): boolean
        get lastClimbablePos(): Internal.Optional<BlockPos>
        get horizontalFacing(): Internal.Direction
        set id(arg0: number)
        get type(): string
        set chestArmorItem(item: Internal.ItemStack_)
        get activeEffectsMap(): Internal.Map<Internal.MobEffect, Internal.MobEffectInstance>
        get passenger(): boolean
        get sensitiveToWater(): boolean
        get jumpControl(): Internal.JumpControl
        get feetArmorItem(): Internal.ItemStack
        get viewScale(): number
        set motionX(x: number)
        get handSlots(): Internal.Iterable<Internal.ItemStack>
        get visualRotationYInDegrees(): number
        set speed(arg0: number)
        get teamColor(): number
        get discrete(): boolean
        set nbt(nbt: Internal.CompoundTag_)
        get level(): Internal.Level
        get combatTracker(): Internal.CombatTracker
        get restrictRadius(): number
        get noAi(): boolean
        get chestArmorItem(): Internal.ItemStack
        get invertedHealAndHarm(): boolean
        get freezing(): boolean
        get fullyFrozen(): boolean
        set guaranteedDrop(arg0: Internal.EquipmentSlot_)
        set sharedFlagOnFire(arg0: boolean)
    }
    type Ghast_ = Ghast;
    class SpellDamageSource extends DamageSource {
        getClass(): typeof any;
        get(): DamageSource;
        getFreezeTicks(): number;
        getSourcePosition(): Vec3d;
        static source(arg0: Internal.Entity_, arg1: Internal.AbstractSpell_): Internal.SpellDamageSource;
        scalesWithDifficulty(): boolean;
        typeHolder(): Internal.Holder<Internal.DamageType>;
        "is(net.minecraft.tags.TagKey)"(arg0: Internal.TagKey_<Internal.DamageType>): boolean;
        notify(): void;
        getLocalizedDeathMessage(arg0: Internal.LivingEntity_): Internal.Component;
        wait(arg0: number, arg1: number): void;
        setFireTime(arg0: number): this;
        is(arg0: Internal.TagKey_<Internal.DamageType>): boolean;
        type(): Internal.DamageType;
        "is(net.minecraft.resources.ResourceKey)"(arg0: Internal.ResourceKey_<Internal.DamageType>): boolean;
        getType(): string;
        getActual(): Internal.Entity;
        getPlayer(): Player;
        setLifestealPercent(arg0: number): this;
        getFireTime(): number;
        spell(): Internal.AbstractSpell;
        getLifestealPercent(): number;
        toString(): string;
        isIndirect(): boolean;
        setFreezeTicks(arg0: number): this;
        getImmediate(): Internal.Entity;
        notifyAll(): void;
        getFoodExhaustion(): number;
        sourcePositionRaw(): Vec3d;
        is(arg0: Internal.ResourceKey_<Internal.DamageType>): boolean;
        hashCode(): number;
        isCreativePlayer(): boolean;
        static source(arg0: Internal.Entity_, arg1: Internal.Entity_, arg2: Internal.AbstractSpell_): Internal.SpellDamageSource;
        wait(): void;
        wait(arg0: number): void;
        hasPostHitEffects(): boolean;
        equals(arg0: any): boolean;
        get class(): typeof any
        get freezeTicks(): number
        get sourcePosition(): Vec3d
        set fireTime(arg0: number)
        get type(): string
        get actual(): Internal.Entity
        get player(): Player
        set lifestealPercent(arg0: number)
        get fireTime(): number
        get lifestealPercent(): number
        get indirect(): boolean
        set freezeTicks(arg0: number)
        get immediate(): Internal.Entity
        get foodExhaustion(): number
        get creativePlayer(): boolean
    }
    type SpellDamageSource_ = SpellDamageSource;
    class ThreeLayersFeatureSize extends Internal.FeatureSize {
        constructor(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.OptionalInt_)
        getClass(): typeof any;
        hashCode(): number;
        minClippedHeight(): Internal.OptionalInt;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        getSizeAtHeight(arg0: number, arg1: number): number;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        static readonly CODEC: Internal.Codec<Internal.ThreeLayersFeatureSize>;
    }
    type ThreeLayersFeatureSize_ = ThreeLayersFeatureSize;
    class RecipeJS implements Internal.CustomJavaToJsWrapper, Internal.RecipeKJS {
        constructor()
        /**
         * @deprecated
        */
        getGroup(): string;
        convertJavaToJs(cx: Internal.Context_, scope: Internal.Scriptable_, staticType: typeof any): Internal.Scriptable;
        getSerializationTypeFunction(): Internal.RecipeTypeFunction;
        inputValues(): Internal.RecipeComponentValue<any>[];
        notify(): void;
        /**
         * **NOTE**: Only valid via calling `recipes.kubejs.shaped` or `recipes.kubejs.shapeless`
         * 
        */
        replaceIngredient(filter: Internal.IngredientActionFilter_, item: Internal.ItemStack_): this;
        /**
         * **NOTE**: Only valid via calling `recipes.kubejs.shaped` or `recipes.kubejs.shapeless`
         * 
        */
        customIngredientAction(filter: Internal.IngredientActionFilter_, id: string): this;
        remove(): void;
        writeOutputFluid(value: Internal.OutputFluid_): Internal.JsonElement;
        stage(s: string): this;
        readOutputFluid(from: any): Internal.OutputFluid;
        inputItemHasPriority(from: any): boolean;
        getOriginalRecipe(): Internal.Recipe<any>;
        group(g: string): this;
        hasChanged(): boolean;
        initValues(created: boolean): void;
        createRecipe(): Internal.Recipe<any>;
        readInputItem(from: any): InputItem;
        /**
         * **NOTE**: Only valid via calling `recipes.kubejs.shaped` or `recipes.kubejs.shapeless`
         * 
        */
        modifyResult(callback: Internal.ModifyRecipeResultCallback_): this;
        get(key: string): any;
        outputItemHasPriority(from: any): boolean;
        replaceInput(match: Internal.ReplacementMatch_, with_: Internal.InputReplacement_): boolean;
        id(_id: ResourceLocation_): this;
        /**
         * @deprecated
        */
        getType(): ResourceLocation;
        getOriginalRecipeResult(): Internal.ItemStack;
        inputFluidHasPriority(from: any): boolean;
        setValue<T>(key: Internal.RecipeKey_<T>, value: T): this;
        wait(): void;
        readInputFluid(from: any): Internal.InputFluid;
        set(key: string, value: any): this;
        getAllValueMap(): Internal.Map<string, Internal.RecipeComponentValue<any>>;
        getFromToString(): string;
        getClass(): typeof any;
        outputFluidHasPriority(from: any): boolean;
        writeInputItem(value: InputItem_): Internal.JsonElement;
        outputValues(): Internal.RecipeComponentValue<any>[];
        /**
         * @deprecated
        */
        getSchema(): Internal.RecipeSchema;
        deserialize(merge: boolean): void;
        wait(arg0: number, arg1: number): void;
        writeOutputItem(value: OutputItem_): Internal.JsonElement;
        getValue<T>(key: Internal.RecipeKey_<T>): T;
        ingredientAction(filter: Internal.IngredientActionFilter_, action: Internal.IngredientAction_): this;
        serialize(): void;
        getPath(): string;
        /**
         * **NOTE**: Only valid via calling `recipes.kubejs.shaped` or `recipes.kubejs.shapeless`
         * 
        */
        keepIngredient(filter: Internal.IngredientActionFilter_): this;
        getMod(): string;
        hasOutput(match: Internal.ReplacementMatch_): boolean;
        toString(): string;
        notifyAll(): void;
        writeInputFluid(value: Internal.InputFluid_): Internal.JsonElement;
        consumeIngredient(filter: Internal.IngredientActionFilter_): this;
        /**
         * **NOTE**: Only valid via calling `recipes.kubejs.shaped` or `recipes.kubejs.shapeless`
         * 
        */
        damageIngredient(filter: Internal.IngredientActionFilter_): this;
        getId(): string;
        save(): void;
        afterLoaded(): void;
        /**
         * @deprecated
        */
        setGroup(group: string): void;
        hashCode(): number;
        merge(j: Internal.JsonObject_): this;
        /**
         * @deprecated
        */
        getOrCreateId(): ResourceLocation;
        damageIngredient(filter: Internal.IngredientActionFilter_, damage: number): this;
        readOutputItem(from: any): OutputItem;
        hasInput(match: Internal.ReplacementMatch_): boolean;
        getOriginalRecipeIngredients(): Internal.List<Internal.Ingredient>;
        wait(arg0: number): void;
        replaceOutput(match: Internal.ReplacementMatch_, with_: Internal.OutputReplacement_): boolean;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        get group(): string
        get serializationTypeFunction(): Internal.RecipeTypeFunction
        get originalRecipe(): Internal.Recipe<any>
        /**
         * @deprecated
        */
        get type(): ResourceLocation
        get originalRecipeResult(): Internal.ItemStack
        get allValueMap(): Internal.Map<string, Internal.RecipeComponentValue<any>>
        get fromToString(): string
        get class(): typeof any
        /**
         * @deprecated
        */
        get schema(): Internal.RecipeSchema
        get path(): string
        get mod(): string
        get id(): string
        /**
         * @deprecated
        */
        set group(group: string)
        /**
         * @deprecated
        */
        get orCreateId(): ResourceLocation
        get originalRecipeIngredients(): Internal.List<Internal.Ingredient>
        type: Internal.RecipeTypeFunction;
        removed: boolean;
        originalJson: Internal.JsonObject;
        json: Internal.JsonObject;
        newRecipe: boolean;
        changed: boolean;
        static itemErrors: (false) & (boolean);
        id: ResourceLocation;
        modifyResult: Internal.ModifyRecipeResultCallback;
    }
    type RecipeJS_ = RecipeJS;
    class TrappedChestBlockEntity extends Internal.ChestBlockEntity {
        constructor(arg0: BlockPos_, arg1: Internal.BlockState_)
        stopOpen(arg0: Player_): void;
        requestModelDataUpdate(): void;
        getOpenNess(arg0: number): number;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        clear(ingredient: Internal.Ingredient_): void;
        find(): number;
        hasAnyOf(arg0: Internal.Set_<Internal.Item>): boolean;
        setBlockState(arg0: Internal.BlockState_): void;
        removeItem(arg0: number, arg1: number): Internal.ItemStack;
        load(arg0: Internal.CompoundTag_): void;
        abstract setChanged(): void;
        saveWithoutMetadata(): Internal.CompoundTag;
        "setChanged()"(): void;
        hasAnyMatching(arg0: Internal.Predicate_<Internal.ItemStack>): boolean;
        kjs$self(): Internal.Container;
        getWidth(): number;
        setRemoved(): void;
        "isEmpty()"(): boolean;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        hasCustomName(): boolean;
        getType(): Internal.BlockEntityType<any>;
        getItem(arg0: number): Internal.ItemStack;
        getCustomName(): Internal.Component;
        isItemValid(slot: number, stack: Internal.ItemStack_): boolean;
        getRenderBoundingBox(): Internal.AABB;
        getDisplayName(): Internal.Component;
        getClass(): typeof any;
        static getPosFromTag(arg0: Internal.CompoundTag_): BlockPos;
        setCustomName(arg0: Internal.Component_): void;
        countItem(arg0: Internal.Item_): number;
        onChunkUnloaded(): void;
        saveToItem(arg0: Internal.ItemStack_): void;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        static addEntityType(arg0: Internal.CompoundTag_, arg1: Internal.BlockEntityType_<any>): void;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        startOpen(arg0: Player_): void;
        canPlaceItem(arg0: number, arg1: Internal.ItemStack_): boolean;
        createMenu(arg0: number, arg1: Internal.Inventory_, arg2: Player_): Internal.AbstractContainerMenu;
        getUpdatePacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        clearRemoved(): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.BlockEntity>): boolean;
        getHeight(): number;
        countNonEmpty(): number;
        getPersistentData(): Internal.CompoundTag;
        toString(): string;
        triggerEvent(arg0: number, arg1: number): boolean;
        hasLevel(): boolean;
        notifyAll(): void;
        canTakeItem(arg0: Internal.Container_, arg1: number, arg2: Internal.ItemStack_): boolean;
        insertItem(slot: number, stack: Internal.ItemStack_, simulate: boolean): Internal.ItemStack;
        unpackLootTable(arg0: Player_): void;
        recheckOpen(): void;
        clear(): void;
        wait(arg0: number): void;
        static swapContents(arg0: Internal.ChestBlockEntity_, arg1: Internal.ChestBlockEntity_): void;
        static getOpenCount(arg0: Internal.BlockGetter_, arg1: BlockPos_): number;
        clearContent(): void;
        reviveCaps(): void;
        countNonEmpty(ingredient: Internal.Ingredient_): number;
        static tryClear(arg0: any): void;
        getUpdateTag(): Internal.CompoundTag;
        handleUpdateTag(arg0: Internal.CompoundTag_): void;
        setStackInSlot(slot: number, stack: Internal.ItemStack_): void;
        setLevel(arg0: Internal.Level_): void;
        notify(): void;
        getSlots(): number;
        getBlockPos(): BlockPos;
        isRemoved(): boolean;
        onLoad(): void;
        getContainerSize(): number;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        static lidAnimateTick(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.ChestBlockEntity_): void;
        setItem(arg0: number, arg1: Internal.ItemStack_): void;
        invalidateCaps(): void;
        getName(): Internal.Component;
        getBlockState(): Internal.BlockState;
        getSlotLimit(slot: number): number;
        getMaxStackSize(): number;
        static setLootTable(arg0: Internal.BlockGetter_, arg1: Internal.RandomSource_, arg2: BlockPos_, arg3: ResourceLocation_): void;
        removeItemNoUpdate(arg0: number): Internal.ItemStack;
        static stillValidBlockEntity(arg0: Internal.BlockEntity_, arg1: Player_): boolean;
        static loadStatic(arg0: BlockPos_, arg1: Internal.BlockState_, arg2: Internal.CompoundTag_): Internal.BlockEntity;
        wait(): void;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        setLootTable(arg0: ResourceLocation_, arg1: number): void;
        count(ingredient: Internal.Ingredient_): number;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        count(): number;
        saveWithId(): Internal.CompoundTag;
        isEmpty(): boolean;
        wait(arg0: number, arg1: number): void;
        getLevel(): Internal.Level;
        onlyOpCanSetNbt(): boolean;
        extractItem(slot: number, amount: number, simulate: boolean): Internal.ItemStack;
        getBlock(level: Internal.Level_): Internal.BlockContainerJS;
        static stillValidBlockEntity(arg0: Internal.BlockEntity_, arg1: Player_, arg2: number): boolean;
        getStackInSlot(slot: number): Internal.ItemStack;
        saveWithFullMetadata(): Internal.CompoundTag;
        onDataPacket(arg0: Internal.Connection_, arg1: Internal.ClientboundBlockEntityDataPacket_): void;
        hasCustomOutlineRendering(arg0: Player_): boolean;
        asContainer(): Internal.Container;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.BlockEntity>): boolean;
        deserializeNBT(arg0: Internal.Tag_): void;
        getAllItems(): Internal.List<Internal.ItemStack>;
        insertItem(stack: Internal.ItemStack_, simulate: boolean): Internal.ItemStack;
        serializeNBT(): Internal.CompoundTag;
        stillValid(arg0: Player_): boolean;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        hashCode(): number;
        static canUnlock(arg0: Player_, arg1: Internal.LockCode_, arg2: Internal.Component_): boolean;
        getModelData(): Internal.ModelData;
        isMutable(): boolean;
        find(ingredient: Internal.Ingredient_): number;
        canOpen(arg0: Player_): boolean;
        equals(arg0: any): boolean;
        set blockState(arg0: Internal.BlockState_)
        get width(): number
        get "empty()"(): boolean
        get type(): Internal.BlockEntityType<any>
        get customName(): Internal.Component
        get renderBoundingBox(): Internal.AABB
        get displayName(): Internal.Component
        get class(): typeof any
        set customName(arg0: Internal.Component_)
        get updatePacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get height(): number
        get persistentData(): Internal.CompoundTag
        get updateTag(): Internal.CompoundTag
        set level(arg0: Internal.Level_)
        get slots(): number
        get blockPos(): BlockPos
        get removed(): boolean
        get containerSize(): number
        get name(): Internal.Component
        get blockState(): Internal.BlockState
        get maxStackSize(): number
        get empty(): boolean
        get level(): Internal.Level
        get allItems(): Internal.List<Internal.ItemStack>
        get modelData(): Internal.ModelData
        get mutable(): boolean
    }
    type TrappedChestBlockEntity_ = TrappedChestBlockEntity;
    class GenerationStep$Carving extends Internal.Enum<Internal.GenerationStep$Carving> implements Internal.StringRepresentable {
        getClass(): typeof any;
        static fromEnumWithMapping<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>, arg1: Internal.Function_<string, string>): Internal.StringRepresentable$EnumCodec<E>;
        getSerializedName(): string;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        static values(): Internal.GenerationStep$Carving[];
        compareTo(arg0: any): number;
        static fromEnum<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>): Internal.StringRepresentable$EnumCodec<E>;
        getName(): string;
        getDeclaringClass(): typeof Internal.GenerationStep$Carving;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.GenerationStep$Carving>>;
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        toString(): string;
        notifyAll(): void;
        name(): string;
        hashCode(): number;
        static keys(arg0: Internal.StringRepresentable_[]): Internal.Keyable;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        static valueOf(arg0: string): Internal.GenerationStep$Carving;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        "compareTo(net.minecraft.world.level.levelgen.GenerationStep$Carving)"(arg0: Internal.GenerationStep$Carving_): number;
        compareTo(arg0: Internal.GenerationStep$Carving_): number;
        get class(): typeof any
        get serializedName(): string
        get name(): string
        get declaringClass(): typeof Internal.GenerationStep$Carving
        static readonly AIR: (Internal.GenerationStep$Carving) & (Internal.GenerationStep$Carving);
        static readonly LIQUID: (Internal.GenerationStep$Carving) & (Internal.GenerationStep$Carving);
        static readonly CODEC: Internal.Codec<Internal.GenerationStep$Carving>;
    }
    type GenerationStep$Carving_ = "liquid" | "air" | GenerationStep$Carving;
    class KnockbackEnchantment extends Internal.Enchantment {
        getClass(): typeof any;
        getDamageProtection(arg0: number, arg1: DamageSource_): number;
        getFullname(arg0: number): Internal.Component;
        isCompatibleWith(arg0: Internal.Enchantment_): boolean;
        getRarity(): Internal.Enchantment$Rarity;
        isTradeable(): boolean;
        isTreasureOnly(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getMaxCost(arg0: number): number;
        isDiscoverable(): boolean;
        getMinCost(arg0: number): number;
        static byId(arg0: number): Internal.Enchantment;
        getDescriptionId(): string;
        doPostHurt(arg0: Internal.LivingEntity_, arg1: Internal.Entity_, arg2: number): void;
        toString(): string;
        getMaxLevel(): number;
        doPostAttack(arg0: Internal.LivingEntity_, arg1: Internal.Entity_, arg2: number): void;
        notifyAll(): void;
        getSlotItems(arg0: Internal.LivingEntity_): Internal.Map<Internal.EquipmentSlot, Internal.ItemStack>;
        getMinLevel(): number;
        /**
         * @deprecated
        */
        getDamageBonus(arg0: number, arg1: Internal.MobType_): number;
        hashCode(): number;
        isCurse(): boolean;
        allowedInCreativeTab(arg0: Internal.Item_, arg1: Internal.Set_<Internal.EnchantmentCategory>): boolean;
        wait(): void;
        getDamageBonus(arg0: number, arg1: Internal.MobType_, arg2: Internal.ItemStack_): number;
        wait(arg0: number): void;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_): boolean;
        equals(arg0: any): boolean;
        canEnchant(arg0: Internal.ItemStack_): boolean;
        isAllowedOnBooks(): boolean;
        get class(): typeof any
        get rarity(): Internal.Enchantment$Rarity
        get tradeable(): boolean
        get treasureOnly(): boolean
        get discoverable(): boolean
        get descriptionId(): string
        get maxLevel(): number
        get minLevel(): number
        get curse(): boolean
        get allowedOnBooks(): boolean
    }
    type KnockbackEnchantment_ = KnockbackEnchantment;
    class CarpetBlock extends Internal.Block {
        constructor(arg0: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getDescriptionId(): string;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        setFriction(arg0: number): void;
        getTypeData(): Internal.CompoundTag;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getSpeedFactor(): number;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Player_): void;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Player_): Internal.ItemStack;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getRenderPropertiesInternal(): any;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setRequiresTool(v: boolean): void;
        setSpeedFactor(arg0: number): void;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        getFriction(): number;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        wait(arg0: number): void;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        notify(): void;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        setDestroySpeed(v: number): void;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Player_): boolean;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        wait(): void;
        /**
         * @deprecated
        */
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        setIsRandomlyTicking(arg0: boolean): void;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<Internal.Component>, arg3: Internal.TooltipFlag_): void;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        /**
         * @deprecated
        */
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static stateById(arg0: number): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        /**
         * @deprecated
        */
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        get descriptionId(): string
        /**
         * @deprecated
        */
        get explosionResistance(): number
        set friction(arg0: number)
        get typeData(): Internal.CompoundTag
        get jumpFactor(): number
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        set destroySpeed(v: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get name(): Internal.MutableComponent
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        get mod(): string
        set soundType(arg0: SoundType_)
        set hasCollision(arg0: boolean)
    }
    type CarpetBlock_ = CarpetBlock;
    class Variant extends Internal.Enum<Internal.Variant> implements Internal.StringRepresentable {
        getClass(): typeof any;
        static fromEnumWithMapping<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>, arg1: Internal.Function_<string, string>): Internal.StringRepresentable$EnumCodec<E>;
        getSerializedName(): string;
        static valueOf(arg0: string): Internal.Variant;
        compareTo(arg0: Internal.Variant_): number;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.Variant>>;
        static fromEnum<E extends Internal.Enum<E> & Internal.StringRepresentable>(arg0: Internal.Supplier_<E[]>): Internal.StringRepresentable$EnumCodec<E>;
        getId(): number;
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        toString(): string;
        static values(): Internal.Variant[];
        notifyAll(): void;
        name(): string;
        hashCode(): number;
        static keys(arg0: Internal.StringRepresentable_[]): Internal.Keyable;
        getDeclaringClass(): typeof Internal.Variant;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(net.minecraft.world.entity.animal.horse.Variant)"(arg0: Internal.Variant_): number;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        static byId(arg0: number): Internal.Variant;
        get class(): typeof any
        get serializedName(): string
        get id(): number
        get declaringClass(): typeof Internal.Variant
        static readonly CODEC: Internal.Codec<Internal.Variant>;
        static readonly WHITE: (Internal.Variant) & (Internal.Variant);
        static readonly BLACK: (Internal.Variant) & (Internal.Variant);
        static readonly DARK_BROWN: (Internal.Variant) & (Internal.Variant);
        static readonly CREAMY: (Internal.Variant) & (Internal.Variant);
        static readonly BROWN: (Internal.Variant) & (Internal.Variant);
        static readonly GRAY: (Internal.Variant) & (Internal.Variant);
        static readonly CHESTNUT: (Internal.Variant) & (Internal.Variant);
    }
    type Variant_ = Variant | "white" | "brown" | "gray" | "black" | "dark_brown" | "creamy" | "chestnut";
    class RenderStateShard$DepthTestStateShard extends Internal.RenderStateShard {
        constructor(arg0: string, arg1: number)
        getClass(): typeof any;
        clearRenderState(): void;
        hashCode(): number;
        toString(): string;
        setupRenderState(): void;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
    }
    type RenderStateShard$DepthTestStateShard_ = RenderStateShard$DepthTestStateShard;
    interface PalettedContainerRO <T> {
        abstract recreate(): Internal.PalettedContainer<T>;
        abstract maybeHas(arg0: Internal.Predicate_<T>): boolean;
        abstract write(arg0: Internal.FriendlyByteBuf_): void;
        abstract getSerializedSize(): number;
        abstract pack(arg0: Internal.IdMap_<T>, arg1: Internal.PalettedContainer$Strategy_): Internal.PalettedContainerRO$PackedData<T>;
        abstract getAll(arg0: Internal.Consumer_<T>): void;
        abstract get(arg0: number, arg1: number, arg2: number): T;
        abstract count(arg0: Internal.PalettedContainer$CountConsumer_<T>): void;
        get serializedSize(): number
    }
    type PalettedContainerRO_<T> = PalettedContainerRO<T>;
    class LevelChunk$EntityCreationType extends Internal.Enum<Internal.LevelChunk$EntityCreationType> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        static valueOf(arg0: string): Internal.LevelChunk$EntityCreationType;
        compareTo(arg0: Internal.LevelChunk$EntityCreationType_): number;
        toString(): string;
        notifyAll(): void;
        notify(): void;
        static values(): Internal.LevelChunk$EntityCreationType[];
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        wait(arg0: number): void;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.LevelChunk$EntityCreationType>>;
        getDeclaringClass(): typeof Internal.LevelChunk$EntityCreationType;
        "compareTo(net.minecraft.world.level.chunk.LevelChunk$EntityCreationType)"(arg0: Internal.LevelChunk$EntityCreationType_): number;
        get class(): typeof any
        get declaringClass(): typeof Internal.LevelChunk$EntityCreationType
        static readonly IMMEDIATE: (Internal.LevelChunk$EntityCreationType) & (Internal.LevelChunk$EntityCreationType);
        static readonly QUEUED: (Internal.LevelChunk$EntityCreationType) & (Internal.LevelChunk$EntityCreationType);
        static readonly CHECK: (Internal.LevelChunk$EntityCreationType) & (Internal.LevelChunk$EntityCreationType);
    }
    type LevelChunk$EntityCreationType_ = "check" | "immediate" | LevelChunk$EntityCreationType | "queued";
    class LiteralCommandNode <S> extends Internal.CommandNode<S> {
        constructor(arg0: string, arg1: Internal.Command_<S>, arg2: Internal.Predicate_<S>, arg3: Internal.CommandNode_<S>, arg4: Internal.RedirectModifier_<S>, arg5: boolean)
        getClass(): typeof any;
        getRelevantNodes(arg0: Internal.StringReader_): Internal.Collection<Internal.CommandNode<S>>;
        parse(arg0: Internal.StringReader_, arg1: Internal.CommandContextBuilder_<S>): void;
        canUse(arg0: S): boolean;
        listSuggestions(arg0: Internal.CommandContext_<S>, arg1: Internal.SuggestionsBuilder_): Internal.CompletableFuture<Internal.Suggestions>;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        "compareTo(com.mojang.brigadier.tree.CommandNode)"(arg0: Internal.CommandNode_<S>): number;
        compareTo(arg0: any): number;
        getRedirectModifier(): Internal.RedirectModifier<S>;
        isValidInput(arg0: string): boolean;
        getRequirement(): Internal.Predicate<S>;
        getExamples(): Internal.Collection<string>;
        addChild(arg0: Internal.CommandNode_<S>): void;
        getName(): string;
        createBuilder(): Internal.ArgumentBuilder<any, any>;
        getRedirect(): Internal.CommandNode<S>;
        findAmbiguities(arg0: Internal.AmbiguityConsumer_<S>): void;
        getChildren(): Internal.Collection<Internal.CommandNode<S>>;
        toString(): string;
        notifyAll(): void;
        getUsageText(): string;
        hashCode(): number;
        wait(): void;
        compareTo(arg0: Internal.CommandNode_<S>): number;
        wait(arg0: number): void;
        getChild(arg0: string): Internal.CommandNode<S>;
        isFork(): boolean;
        getCommand(): Internal.Command<S>;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        getLiteral(): string;
        get class(): typeof any
        get redirectModifier(): Internal.RedirectModifier<S>
        get requirement(): Internal.Predicate<S>
        get examples(): Internal.Collection<string>
        get name(): string
        get redirect(): Internal.CommandNode<S>
        get children(): Internal.Collection<Internal.CommandNode<S>>
        get usageText(): string
        get fork(): boolean
        get command(): Internal.Command<S>
        get literal(): string
    }
    type LiteralCommandNode_<S> = LiteralCommandNode<S>;
    class SingleItemRecipe$Serializer <T extends Internal.SingleItemRecipe> implements Internal.RecipeSerializer<T> {
        getClass(): typeof any;
        toString(): string;
        "toNetwork(net.minecraft.network.FriendlyByteBuf,net.minecraft.world.item.crafting.Recipe)"(arg0: Internal.FriendlyByteBuf_, arg1: Internal.Recipe_<any>): void;
        notifyAll(): void;
        toNetwork(arg0: Internal.FriendlyByteBuf_, arg1: Internal.Recipe_<any>): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        "toNetwork(net.minecraft.network.FriendlyByteBuf,net.minecraft.world.item.crafting.SingleItemRecipe)"(arg0: Internal.FriendlyByteBuf_, arg1: T): void;
        static register<S extends Internal.RecipeSerializer<T>, T extends Internal.Recipe<any>>(arg0: string, arg1: S): S;
        hashCode(): number;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_): Internal.Recipe<any>;
        wait(): void;
        wait(arg0: number): void;
        toNetwork(arg0: Internal.FriendlyByteBuf_, arg1: T): void;
        fromJson(arg0: ResourceLocation_, arg1: Internal.JsonObject_, arg2: Internal.ICondition$IContext_): T;
        equals(arg0: any): boolean;
        fromNetwork(arg0: ResourceLocation_, arg1: Internal.FriendlyByteBuf_): Internal.Recipe<any>;
        get class(): typeof any
    }
    type SingleItemRecipe$Serializer_<T extends Internal.SingleItemRecipe> = SingleItemRecipe$Serializer<T>;
    class TextureAtlas extends Internal.AbstractTexture implements Internal.Tickable, Internal.Dumpable {
        constructor(arg0: ResourceLocation_)
        getClass(): typeof any;
        upload(arg0: Internal.SpriteLoader$Preparations_): void;
        bind(): void;
        dumpContents(arg0: ResourceLocation_, arg1: Internal.Path_): void;
        getTextureLocations(): Internal.Set<ResourceLocation>;
        cycleAnimationFrames(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        clearTextureData(): void;
        restoreLastBlurMipmap(): void;
        releaseId(): void;
        getId(): number;
        getSprite(arg0: ResourceLocation_): Internal.TextureAtlasSprite;
        toString(): string;
        notifyAll(): void;
        wrapOperation$zgp000$sodiumExtra$tickAnimatedSprites(instance: Internal.TextureAtlasSprite_, original: Internal.Operation_<any>): Internal.TextureAtlasSprite$Ticker;
        tick(): void;
        setBlurMipmap(arg0: boolean, arg1: boolean): void;
        maxSupportedTextureSize(): number;
        hashCode(): number;
        location(): ResourceLocation;
        load(arg0: Internal.ResourceManager_): void;
        wait(): void;
        close(): void;
        updateFilter(arg0: Internal.SpriteLoader$Preparations_): void;
        wait(arg0: number): void;
        setFilter(arg0: boolean, arg1: boolean): void;
        reset(arg0: Internal.TextureManager_, arg1: Internal.ResourceManager_, arg2: ResourceLocation_, arg3: Internal.Executor_): void;
        equals(arg0: any): boolean;
        get class(): typeof any
        get textureLocations(): Internal.Set<ResourceLocation>
        get id(): number
        /**
         * @deprecated
        */
        static readonly LOCATION_BLOCKS: (ResourceLocation) & (ResourceLocation);
        texturesByName: Internal.Map<ResourceLocation, Internal.TextureAtlasSprite>;
        /**
         * @deprecated
        */
        static readonly LOCATION_PARTICLES: (ResourceLocation) & (ResourceLocation);
    }
    type TextureAtlas_ = TextureAtlas;
    class MapItemSavedData extends Internal.SavedData {
        getClass(): typeof any;
        static createForClient(arg0: number, arg1: boolean, arg2: Internal.ResourceKey_<Internal.Level>): Internal.MapItemSavedData;
        getDecorations(): Internal.Iterable<Internal.MapDecoration>;
        tickCarriedBy(arg0: Player_, arg1: Internal.ItemStack_): void;
        addClientSideDecorations(arg0: Internal.List_<Internal.MapDecoration>): void;
        notify(): void;
        setColor(arg0: number, arg1: number, arg2: number): void;
        save(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        wait(arg0: number, arg1: number): void;
        setDirty(): void;
        toggleBanner(arg0: Internal.LevelAccessor_, arg1: BlockPos_): boolean;
        scaled(arg0: number): this;
        getUpdatePacket(arg0: number, arg1: Player_): Internal.Packet<any>;
        setDirty(arg0: boolean): void;
        static load(arg0: Internal.CompoundTag_): Internal.MapItemSavedData;
        isTrackedCountOverLimit(arg0: number): boolean;
        toString(): string;
        updateColor(arg0: number, arg1: number, arg2: number): boolean;
        static addTargetDecoration(arg0: Internal.ItemStack_, arg1: BlockPos_, arg2: string, arg3: Internal.MapDecoration$Type_): void;
        removedFromFrame(arg0: BlockPos_, arg1: number): void;
        notifyAll(): void;
        getHoldingPlayer(arg0: Player_): Internal.MapItemSavedData$HoldingPlayer;
        isDirty(): boolean;
        "save(java.io.File)"(arg0: Internal.File_): void;
        save(arg0: Internal.File_): void;
        hashCode(): number;
        isExplorationMap(): boolean;
        wait(): void;
        wait(arg0: number): void;
        checkBanners(arg0: Internal.BlockGetter_, arg1: number, arg2: number): void;
        locked(): this;
        getBanners(): Internal.Collection<Internal.MapBanner>;
        equals(arg0: any): boolean;
        "save(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        static createFresh(arg0: number, arg1: number, arg2: number, arg3: boolean, arg4: boolean, arg5: Internal.ResourceKey_<Internal.Level>): Internal.MapItemSavedData;
        get class(): typeof any
        get decorations(): Internal.Iterable<Internal.MapDecoration>
        set dirty(arg0: boolean)
        get dirty(): boolean
        get explorationMap(): boolean
        get banners(): Internal.Collection<Internal.MapBanner>
        colors: number[];
        static readonly MAX_SCALE: (4) & (number);
        readonly scale: number;
        readonly locked: boolean;
        readonly centerZ: number;
        readonly dimension: Internal.ResourceKey<Internal.Level>;
        static readonly TRACKED_DECORATION_LIMIT: (256) & (number);
        readonly centerX: number;
    }
    type MapItemSavedData_ = MapItemSavedData;
    interface Byte2LongFunction extends it.unimi.dsi.fastutil.Function<number, number>, Internal.IntToLongFunction {
        /**
         * @deprecated
        */
        compose<T>(arg0: Internal.Function_<T, number>): Internal.Function<T, number>;
        andThenObject<T>(arg0: Internal.Long2ObjectFunction_<T>): Internal.Byte2ObjectFunction<T>;
        "put(byte,long)"(arg0: number, arg1: number): number;
        remove(arg0: number): number;
        composeFloat(arg0: Internal.Float2ByteFunction_): Internal.Float2LongFunction;
        /**
         * @deprecated
        */
        "put(java.lang.Object,java.lang.Object)"(arg0: any, arg1: any): any;
        andThenByte(arg0: Internal.Long2ByteFunction_): Internal.Byte2ByteFunction;
        /**
         * @deprecated
        */
        "get(java.lang.Object)"(arg0: any): number;
        /**
         * @deprecated
        */
        remove(arg0: any): number;
        /**
         * @deprecated
        */
        put(arg0: any, arg1: any): any;
        composeChar(arg0: Internal.Char2ByteFunction_): Internal.Char2LongFunction;
        put(arg0: number, arg1: number): number;
        abstract get(arg0: number): number;
        andThenReference<T>(arg0: Internal.Long2ReferenceFunction_<T>): Internal.Byte2ReferenceFunction<T>;
        composeObject<T>(arg0: Internal.Object2ByteFunction_<T>): Internal.Object2LongFunction<T>;
        /**
         * @deprecated
        */
        getOrDefault(arg0: any, arg1: number): number;
        /**
         * @deprecated
        */
        applyAsLong(arg0: number): number;
        "remove(byte)"(arg0: number): number;
        /**
         * @deprecated
        */
        "getOrDefault(java.lang.Object,java.lang.Long)"(arg0: any, arg1: number): number;
        composeDouble(arg0: Internal.Double2ByteFunction_): Internal.Double2LongFunction;
        identity<T>(): Internal.Function<T, T>;
        /**
         * @deprecated
        */
        "remove(java.lang.Object)"(arg0: any): number;
        /**
         * @deprecated
        */
        "containsKey(java.lang.Object)"(arg0: any): boolean;
        /**
         * @deprecated
        */
        put(arg0: number, arg1: number): number;
        composeInt(arg0: Internal.Int2ByteFunction_): Internal.Int2LongFunction;
        "containsKey(byte)"(arg0: number): boolean;
        /**
         * @deprecated
        */
        getOrDefault(arg0: any, arg1: any): any;
        andThenShort(arg0: Internal.Long2ShortFunction_): Internal.Byte2ShortFunction;
        /**
         * @deprecated
        */
        get(arg0: any): number;
        /**
         * @deprecated
        */
        containsKey(arg0: any): boolean;
        /**
         * @deprecated
        */
        "getOrDefault(java.lang.Object,java.lang.Object)"(arg0: any, arg1: any): any;
        containsKey(arg0: number): boolean;
        andThenInt(arg0: Internal.Long2IntFunction_): Internal.Byte2IntFunction;
        andThenChar(arg0: Internal.Long2CharFunction_): Internal.Byte2CharFunction;
        andThenFloat(arg0: Internal.Long2FloatFunction_): Internal.Byte2FloatFunction;
        getOrDefault(arg0: number, arg1: number): number;
        defaultReturnValue(): number;
        composeReference<T>(arg0: Internal.Reference2ByteFunction_<T>): Internal.Reference2LongFunction<T>;
        abstract "get(byte)"(arg0: number): number;
        andThenDouble(arg0: Internal.Long2DoubleFunction_): Internal.Byte2DoubleFunction;
        andThenLong(arg0: Internal.Long2LongFunction_): this;
        "getOrDefault(byte,long)"(arg0: number, arg1: number): number;
        composeLong(arg0: Internal.Long2ByteFunction_): Internal.Long2LongFunction;
        size(): number;
        composeByte(arg0: Internal.Byte2ByteFunction_): this;
        /**
         * @deprecated
        */
        "put(java.lang.Byte,java.lang.Long)"(arg0: number, arg1: number): number;
        clear(): void;
        apply(arg0: number): number;
        defaultReturnValue(arg0: number): void;
        composeShort(arg0: Internal.Short2ByteFunction_): Internal.Short2LongFunction;
        /**
         * @deprecated
        */
        andThen<T>(arg0: Internal.Function_<number, T>): Internal.Function<number, T>;
    }
    type Byte2LongFunction_ = Byte2LongFunction;
    class Quaterniond implements Internal.Cloneable, Internal.Externalizable, Internal.Quaterniondc {
        constructor()
        constructor(arg0: Internal.AxisAngle4d_)
        constructor(arg0: Internal.Quaternionfc_)
        constructor(arg0: number, arg1: number, arg2: number, arg3: number)
        constructor(arg0: Internal.AxisAngle4f_)
        constructor(arg0: Internal.Quaterniondc_)
        rotateTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.Quaterniond_): this;
        "transform(org.joml.Vector3f)"(arg0: Vec3f_): Vec3f;
        invert(): this;
        scaling(arg0: number): this;
        transformInverse(arg0: Internal.Vector4d_): Internal.Vector4d;
        transformPositiveY(arg0: Vec3f_): Vec3f;
        transformPositiveX(arg0: Internal.Vector3d_): Internal.Vector3d;
        transformUnit(arg0: Internal.Vector4d_): Internal.Vector4d;
        "transformUnit(double,double,double,org.joml.Vector4d)"(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector4d_): Internal.Vector4d;
        mul(arg0: number, arg1: number, arg2: number, arg3: number): this;
        get(arg0: Internal.Matrix4d_): Internal.Matrix4d;
        setFromUnnormalized(arg0: Internal.Matrix3fc_): this;
        transform(arg0: Internal.Vector4d_): Internal.Vector4d;
        static slerp(arg0: Internal.Quaterniond_[], arg1: number[], arg2: Internal.Quaterniond_): Internal.Quaterniondc;
        "transformUnitPositiveZ(org.joml.Vector3f)"(arg0: Vec3f_): Vec3f;
        x(): number;
        transformInverse(arg0: Internal.Vector3d_): Internal.Vector3d;
        transformPositiveY(arg0: Vec4f_): Vec4f;
        dot(arg0: Internal.Quaterniondc_): number;
        transformPositiveX(arg0: Internal.Vector4d_): Internal.Vector4d;
        transformUnit(arg0: Internal.Vector4dc_, arg1: Internal.Vector4d_): Internal.Vector4d;
        "transformUnitPositiveY(org.joml.Vector3f)"(arg0: Vec3f_): Vec3f;
        rotationX(arg0: number): this;
        "set(org.joml.AxisAngle4d)"(arg0: Internal.AxisAngle4d_): this;
        rotateY(arg0: number, arg1: Internal.Quaterniond_): this;
        "get(org.joml.Quaternionf)"(arg0: Quaternionf_): Quaternionf;
        rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number): this;
        transform(arg0: Internal.Vector3d_): Internal.Vector3d;
        positiveY(arg0: Internal.Vector3d_): Internal.Vector3d;
        "transform(double,double,double,org.joml.Vector3d)"(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector3d_): Internal.Vector3d;
        "transformInverse(org.joml.Vector4dc,org.joml.Vector4d)"(arg0: Internal.Vector4dc_, arg1: Internal.Vector4d_): Internal.Vector4d;
        rotateY(arg0: number): this;
        setFromNormalized(arg0: Internal.Matrix3dc_): this;
        normalize(): this;
        premul(arg0: number, arg1: number, arg2: number, arg3: number): this;
        rotateYXZ(arg0: number, arg1: number, arg2: number): this;
        rotateAxis(arg0: number, arg1: Internal.Vector3dc_): this;
        getClass(): typeof any;
        rotateTo(arg0: Internal.Vector3dc_, arg1: Internal.Vector3dc_, arg2: Internal.Quaterniond_): this;
        transformPositiveY(arg0: Internal.Vector3d_): Internal.Vector3d;
        transformPositiveZ(arg0: Vec3f_): Vec3f;
        transformUnit(arg0: Vec4f_): Vec4f;
        "transformInverse(org.joml.Vector4fc,org.joml.Vector4f)"(arg0: Internal.Vector4fc_, arg1: Vec4f_): Vec4f;
        "transformUnitPositiveX(org.joml.Vector3f)"(arg0: Vec3f_): Vec3f;
        "transformPositiveY(org.joml.Vector4d)"(arg0: Internal.Vector4d_): Internal.Vector4d;
        difference(arg0: Internal.Quaterniondc_): this;
        get(arg0: Matrix4f_): Matrix4f;
        conjugate(arg0: Internal.Quaterniond_): this;
        "mul(org.joml.Quaterniondc)"(arg0: Internal.Quaterniondc_): this;
        transform(arg0: Vec4f_): Vec4f;
        transformUnit(arg0: Internal.Vector3fc_, arg1: Vec3f_): Vec3f;
        "setFromNormalized(org.joml.Matrix3fc)"(arg0: Internal.Matrix3fc_): this;
        rotationAxis(arg0: Internal.AxisAngle4f_): this;
        "transformInverseUnit(org.joml.Vector4f)"(arg0: Vec4f_): Vec4f;
        setFromNormalized(arg0: Internal.Matrix4fc_): this;
        transformInverseUnit(arg0: Internal.Vector3fc_, arg1: Vec3f_): Vec3f;
        fromAxisAngleRad(arg0: Internal.Vector3dc_, arg1: number): this;
        static nlerp(arg0: Internal.Quaterniond_[], arg1: number[], arg2: Internal.Quaterniond_): Internal.Quaterniondc;
        y(): number;
        "transformUnit(double,double,double,org.joml.Vector3f)"(arg0: number, arg1: number, arg2: number, arg3: Vec3f_): Vec3f;
        "transformPositiveZ(org.joml.Vector4d)"(arg0: Internal.Vector4d_): Internal.Vector4d;
        transform(arg0: Internal.Vector4dc_, arg1: Internal.Vector4d_): Internal.Vector4d;
        transformPositiveY(arg0: Internal.Vector4d_): Internal.Vector4d;
        rotationYXZ(arg0: number, arg1: number, arg2: number): this;
        transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: Vec3f_): Vec3f;
        "transformInverse(org.joml.Vector3f)"(arg0: Vec3f_): Vec3f;
        transformPositiveZ(arg0: Vec4f_): Vec4f;
        transformUnit(arg0: Internal.Vector3d_): Internal.Vector3d;
        rotateTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): this;
        lookAlong(arg0: Internal.Vector3dc_, arg1: Internal.Vector3dc_): this;
        "transformInverse(org.joml.Vector3fc,org.joml.Vector3f)"(arg0: Internal.Vector3fc_, arg1: Vec3f_): Vec3f;
        rotateZ(arg0: number, arg1: Internal.Quaterniond_): this;
        transformInverse(arg0: Internal.Vector3fc_, arg1: Vec3f_): Vec3f;
        get(arg0: Internal.Matrix3d_): Internal.Matrix3d;
        rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: Internal.Quaterniond_): this;
        transform(arg0: Vec3f_): Vec3f;
        "get(org.joml.Matrix3d)"(arg0: Internal.Matrix3d_): Internal.Matrix3d;
        positiveZ(arg0: Internal.Vector3d_): Internal.Vector3d;
        rotateZ(arg0: number): this;
        wait(arg0: number): void;
        "transformInverse(double,double,double,org.joml.Vector3f)"(arg0: number, arg1: number, arg2: number, arg3: Vec3f_): Vec3f;
        getEulerAnglesZXY(arg0: Internal.Vector3d_): Internal.Vector3d;
        transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: Vec4f_): Vec4f;
        transformPositiveZ(arg0: Internal.Vector3d_): Internal.Vector3d;
        "transformUnit(org.joml.Vector4f)"(arg0: Vec4f_): Vec4f;
        "get(org.joml.Matrix3f)"(arg0: Matrix3f_): Matrix3f;
        "transformInverseUnit(org.joml.Vector3d)"(arg0: Internal.Vector3d_): Internal.Vector3d;
        scale(arg0: number): this;
        rotateAxis(arg0: number, arg1: Internal.Vector3dc_, arg2: Internal.Quaterniond_): this;
        z(): number;
        transformInverseUnit(arg0: Internal.Vector4d_): Internal.Vector4d;
        "transformPositiveY(org.joml.Vector3f)"(arg0: Vec3f_): Vec3f;
        isFinite(): boolean;
        setFromUnnormalized(arg0: Internal.Matrix3dc_): this;
        "transformInverseUnit(double,double,double,org.joml.Vector4f)"(arg0: number, arg1: number, arg2: number, arg3: Vec4f_): Vec4f;
        transformUnitPositiveX(arg0: Vec3f_): Vec3f;
        equals(arg0: Internal.Quaterniondc_, arg1: number): boolean;
        normalize(arg0: Internal.Quaterniond_): this;
        get(arg0: Internal.AxisAngle4d_): Internal.AxisAngle4d;
        rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: Internal.Quaterniond_): this;
        transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector3d_): Internal.Vector3d;
        "transform(double,double,double,org.joml.Vector4d)"(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector4d_): Internal.Vector4d;
        transformPositiveZ(arg0: Internal.Vector4d_): Internal.Vector4d;
        transformUnit(arg0: Vec3f_): Vec3f;
        rotationZ(arg0: number): this;
        conjugateBy(arg0: Internal.Quaterniondc_, arg1: Internal.Quaterniond_): this;
        "transformPositiveX(org.joml.Vector4f)"(arg0: Vec4f_): Vec4f;
        "setFromUnnormalized(org.joml.Matrix4fc)"(arg0: Internal.Matrix4fc_): this;
        "transform(org.joml.Vector4d)"(arg0: Internal.Vector4d_): Internal.Vector4d;
        transformInverseUnit(arg0: Internal.Vector4fc_, arg1: Vec4f_): Vec4f;
        "transformUnitPositiveZ(org.joml.Vector4d)"(arg0: Internal.Vector4d_): Internal.Vector4d;
        setFromUnnormalized(arg0: Internal.Matrix4fc_): this;
        "nlerpIterative(org.joml.Quaterniondc,double,double,org.joml.Quaterniond)"(arg0: Internal.Quaterniondc_, arg1: number, arg2: number, arg3: Internal.Quaterniond_): this;
        wait(): void;
        "transformPositiveX(org.joml.Vector3d)"(arg0: Internal.Vector3d_): Internal.Vector3d;
        setFromNormalized(arg0: Internal.Matrix3fc_): this;
        "transformUnit(org.joml.Vector4dc,org.joml.Vector4d)"(arg0: Internal.Vector4dc_, arg1: Internal.Vector4d_): Internal.Vector4d;
        transformInverse(arg0: Vec4f_): Vec4f;
        premul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Quaterniond_): this;
        transform(arg0: Internal.Vector3fc_, arg1: Vec3f_): Vec3f;
        transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector4d_): Internal.Vector4d;
        "transformInverseUnit(double,double,double,org.joml.Vector3f)"(arg0: number, arg1: number, arg2: number, arg3: Vec3f_): Vec3f;
        "get(org.joml.AxisAngle4d)"(arg0: Internal.AxisAngle4d_): Internal.AxisAngle4d;
        transform(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector4d_): Internal.Vector4d;
        add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Quaterniond_): this;
        "transformUnitPositiveY(org.joml.Vector4f)"(arg0: Vec4f_): Vec4f;
        difference(arg0: Internal.Quaterniondc_, arg1: Internal.Quaterniond_): this;
        setFromNormalized(arg0: Internal.Matrix4x3fc_): this;
        slerp(arg0: Internal.Quaterniondc_, arg1: number, arg2: Internal.Quaterniond_): this;
        "transformUnit(org.joml.Vector3d)"(arg0: Internal.Vector3d_): Internal.Vector3d;
        "transformInverse(double,double,double,org.joml.Vector4d)"(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector4d_): Internal.Vector4d;
        "setFromNormalized(org.joml.Matrix4x3dc)"(arg0: Internal.Matrix4x3dc_): this;
        transformInverse(arg0: Vec3f_): Vec3f;
        "transformUnitPositiveX(org.joml.Vector4d)"(arg0: Internal.Vector4d_): Internal.Vector4d;
        "get(org.joml.Matrix4d)"(arg0: Internal.Matrix4d_): Internal.Matrix4d;
        rotateX(arg0: number, arg1: Internal.Quaterniond_): this;
        integrate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Quaterniond_): this;
        transform(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector3d_): Internal.Vector3d;
        rotationY(arg0: number): this;
        "transformInverse(org.joml.Vector4d)"(arg0: Internal.Vector4d_): Internal.Vector4d;
        "transformPositiveZ(org.joml.Vector3d)"(arg0: Internal.Vector3d_): Internal.Vector3d;
        getEulerAnglesYXZ(arg0: Internal.Vector3d_): Internal.Vector3d;
        "slerp(org.joml.Quaterniondc,double,org.joml.Quaterniond)"(arg0: Internal.Quaterniondc_, arg1: number, arg2: Internal.Quaterniond_): this;
        scale(arg0: number, arg1: Internal.Quaterniond_): this;
        transformInverse(arg0: Internal.Vector4dc_, arg1: Internal.Vector4d_): Internal.Vector4d;
        equals(arg0: any): boolean;
        rotateX(arg0: number): this;
        conjugate(): this;
        setFromUnnormalized(arg0: Internal.Matrix4x3dc_): this;
        nlerp(arg0: Internal.Quaterniondc_, arg1: number): this;
        "setFromNormalized(org.joml.Matrix4fc)"(arg0: Internal.Matrix4fc_): this;
        mul(arg0: Internal.Quaterniondc_, arg1: Internal.Quaterniond_): this;
        "transformInverseUnit(org.joml.Vector4dc,org.joml.Vector4d)"(arg0: Internal.Vector4dc_, arg1: Internal.Vector4d_): Internal.Vector4d;
        transform(arg0: number, arg1: number, arg2: number, arg3: Vec4f_): Vec4f;
        "transformUnit(double,double,double,org.joml.Vector4f)"(arg0: number, arg1: number, arg2: number, arg3: Vec4f_): Vec4f;
        "transform(org.joml.Vector4dc,org.joml.Vector4d)"(arg0: Internal.Vector4dc_, arg1: Internal.Vector4d_): Internal.Vector4d;
        transformUnit(arg0: number, arg1: number, arg2: number, arg3: Vec4f_): Vec4f;
        transformInverse(arg0: number, arg1: number, arg2: number, arg3: Vec4f_): Vec4f;
        div(arg0: Internal.Quaterniondc_): this;
        "setFromUnnormalized(org.joml.Matrix3dc)"(arg0: Internal.Matrix3dc_): this;
        rotateZYX(arg0: number, arg1: number, arg2: number, arg3: Internal.Quaterniond_): this;
        transformUnitPositiveZ(arg0: Vec3f_): Vec3f;
        "setFromNormalized(org.joml.Matrix4x3fc)"(arg0: Internal.Matrix4x3fc_): this;
        transformUnitPositiveY(arg0: Internal.Vector3d_): Internal.Vector3d;
        mul(arg0: Internal.Quaterniondc_): this;
        "transform(org.joml.Vector3d)"(arg0: Internal.Vector3d_): Internal.Vector3d;
        "transformUnitPositiveZ(org.joml.Vector3d)"(arg0: Internal.Vector3d_): Internal.Vector3d;
        transformUnit(arg0: Internal.Vector4fc_, arg1: Vec4f_): Vec4f;
        mul(arg0: number, arg1: Internal.Quaterniond_): this;
        "transformUnitPositiveY(org.joml.Vector3d)"(arg0: Internal.Vector3d_): Internal.Vector3d;
        rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Quaterniond_): this;
        premul(arg0: Internal.Quaterniondc_, arg1: Internal.Quaterniond_): this;
        mul(arg0: number): this;
        mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: Internal.Quaterniond_): this;
        lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: Internal.Quaterniond_): this;
        transform(arg0: number, arg1: number, arg2: number, arg3: Vec3f_): Vec3f;
        "set(org.joml.AxisAngle4f)"(arg0: Internal.AxisAngle4f_): this;
        "get(org.joml.Quaterniond)"(arg0: Internal.Quaterniond_): this;
        lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): this;
        toString(arg0: Internal.NumberFormat_): string;
        transformUnit(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector3d_): Internal.Vector3d;
        transformInverseUnit(arg0: Vec3f_): Vec3f;
        transformInverse(arg0: number, arg1: number, arg2: number, arg3: Vec3f_): Vec3f;
        fromAxisAngleDeg(arg0: number, arg1: number, arg2: number, arg3: number): this;
        rotateTo(arg0: Internal.Vector3dc_, arg1: Internal.Vector3dc_): this;
        setFromUnnormalized(arg0: Internal.Matrix4dc_): this;
        "transform(double,double,double,org.joml.Vector3f)"(arg0: number, arg1: number, arg2: number, arg3: Vec3f_): Vec3f;
        get(arg0: Quaternionf_): Quaternionf;
        transformUnitPositiveX(arg0: Internal.Vector4d_): Internal.Vector4d;
        transformUnitPositiveY(arg0: Vec4f_): Vec4f;
        premul(arg0: Internal.Quaterniondc_): this;
        div(arg0: Internal.Quaterniondc_, arg1: Internal.Quaterniond_): this;
        "transformInverseUnit(org.joml.Vector3fc,org.joml.Vector3f)"(arg0: Internal.Vector3fc_, arg1: Vec3f_): Vec3f;
        identity(): this;
        "nlerp(org.joml.Quaterniondc,double,org.joml.Quaterniond)"(arg0: Internal.Quaterniondc_, arg1: number, arg2: Internal.Quaterniond_): this;
        clone(): any;
        "mul(double)"(arg0: number): this;
        writeExternal(arg0: Internal.ObjectOutput_): void;
        set(arg0: number, arg1: number, arg2: number, arg3: number): this;
        angle(): number;
        add(arg0: Internal.Quaterniondc_): this;
        slerp(arg0: Internal.Quaterniondc_, arg1: number): this;
        "transformUnitPositiveX(org.joml.Vector3d)"(arg0: Internal.Vector3d_): Internal.Vector3d;
        "transformPositiveY(org.joml.Vector4f)"(arg0: Vec4f_): Vec4f;
        static "nlerpIterative(org.joml.Quaterniondc[],double[],double,org.joml.Quaterniond)"(arg0: Internal.Quaterniondc_[], arg1: number[], arg2: number, arg3: Internal.Quaterniond_): Internal.Quaterniond;
        set(arg0: Internal.Quaternionfc_): this;
        transformUnit(arg0: Internal.Vector3dc_, arg1: Internal.Vector3d_): Internal.Vector3d;
        transformInverseUnit(arg0: Vec4f_): Vec4f;
        transformInverse(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector4d_): Internal.Vector4d;
        rotationTo(arg0: Internal.Vector3dc_, arg1: Internal.Vector3dc_): this;
        "mul(double,org.joml.Quaterniond)"(arg0: number, arg1: Internal.Quaterniond_): this;
        static "slerp(org.joml.Quaterniond[],double[],org.joml.Quaterniond)"(arg0: Internal.Quaterniond_[], arg1: number[], arg2: Internal.Quaterniond_): Internal.Quaterniondc;
        "set(org.joml.Quaterniondc)"(arg0: Internal.Quaterniondc_): this;
        rotationXYZ(arg0: number, arg1: number, arg2: number): this;
        transformInverseUnit(arg0: Internal.Vector3dc_, arg1: Internal.Vector3d_): Internal.Vector3d;
        "setFromUnnormalized(org.joml.Matrix4x3fc)"(arg0: Internal.Matrix4x3fc_): this;
        setFromNormalized(arg0: Internal.Matrix4x3dc_): this;
        transformUnitPositiveX(arg0: Internal.Vector3d_): Internal.Vector3d;
        "transformInverseUnit(org.joml.Vector4d)"(arg0: Internal.Vector4d_): Internal.Vector4d;
        transformUnitPositiveY(arg0: Vec3f_): Vec3f;
        "transformUnit(org.joml.Vector3dc,org.joml.Vector3d)"(arg0: Internal.Vector3dc_, arg1: Internal.Vector3d_): Internal.Vector3d;
        "transformInverseUnit(org.joml.Vector4fc,org.joml.Vector4f)"(arg0: Internal.Vector4fc_, arg1: Vec4f_): Vec4f;
        lengthSquared(): number;
        "transformUnit(double,double,double,org.joml.Vector3d)"(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector3d_): Internal.Vector3d;
        get(arg0: Internal.AxisAngle4f_): Internal.AxisAngle4f;
        toString(): string;
        "transformPositiveZ(org.joml.Vector4f)"(arg0: Vec4f_): Vec4f;
        normalizedPositiveX(arg0: Internal.Vector3d_): Internal.Vector3d;
        notifyAll(): void;
        "transformInverse(org.joml.Vector3d)"(arg0: Internal.Vector3d_): Internal.Vector3d;
        transform(arg0: Internal.Vector4fc_, arg1: Vec4f_): Vec4f;
        rotateXYZ(arg0: number, arg1: number, arg2: number): this;
        "setFromNormalized(org.joml.Matrix4dc)"(arg0: Internal.Matrix4dc_): this;
        getEulerAnglesZYX(arg0: Internal.Vector3d_): Internal.Vector3d;
        transformInverse(arg0: Internal.Vector3dc_, arg1: Internal.Vector3d_): Internal.Vector3d;
        nlerpIterative(arg0: Internal.Quaterniondc_, arg1: number, arg2: number): this;
        setFromUnnormalized(arg0: Internal.Matrix4x3fc_): this;
        transformUnit(arg0: number, arg1: number, arg2: number, arg3: Vec3f_): Vec3f;
        transformInverseUnit(arg0: Internal.Vector3d_): Internal.Vector3d;
        transformInverse(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector3d_): Internal.Vector3d;
        static nlerpIterative(arg0: Internal.Quaterniondc_[], arg1: number[], arg2: number, arg3: Internal.Quaterniond_): Internal.Quaterniond;
        static "nlerp(org.joml.Quaterniond[],double[],org.joml.Quaterniond)"(arg0: Internal.Quaterniond_[], arg1: number[], arg2: Internal.Quaterniond_): Internal.Quaterniondc;
        equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
        "transform(org.joml.Vector3dc,org.joml.Vector3d)"(arg0: Internal.Vector3dc_, arg1: Internal.Vector3d_): Internal.Vector3d;
        transformUnitPositiveX(arg0: Vec4f_): Vec4f;
        rotateLocalZ(arg0: number, arg1: Internal.Quaterniond_): this;
        "transformInverse(double,double,double,org.joml.Vector3d)"(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector3d_): Internal.Vector3d;
        "transformUnit(org.joml.Vector4d)"(arg0: Internal.Vector4d_): Internal.Vector4d;
        notify(): void;
        rotateZYX(arg0: number, arg1: number, arg2: number): this;
        rotateLocalZ(arg0: number): this;
        rotationTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): this;
        setAngleAxis(arg0: number, arg1: Internal.Vector3dc_): this;
        nlerp(arg0: Internal.Quaterniondc_, arg1: number, arg2: Internal.Quaterniond_): this;
        "transformPositiveY(org.joml.Vector3d)"(arg0: Internal.Vector3d_): Internal.Vector3d;
        nlerpIterative(arg0: Internal.Quaterniondc_, arg1: number, arg2: number, arg3: Internal.Quaterniond_): this;
        "transformInverseUnit(double,double,double,org.joml.Vector4d)"(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector4d_): Internal.Vector4d;
        normalizedPositiveY(arg0: Internal.Vector3d_): Internal.Vector3d;
        fromAxisAngleRad(arg0: number, arg1: number, arg2: number, arg3: number): this;
        set(arg0: Internal.AxisAngle4f_): this;
        "transform(double,double,double,org.joml.Vector4f)"(arg0: number, arg1: number, arg2: number, arg3: Vec4f_): Vec4f;
        readExternal(arg0: Internal.ObjectInput_): void;
        "mul(org.joml.Quaterniondc,org.joml.Quaterniond)"(arg0: Internal.Quaterniondc_, arg1: Internal.Quaterniond_): this;
        "transformPositiveX(org.joml.Vector4d)"(arg0: Internal.Vector4d_): Internal.Vector4d;
        transformInverseUnit(arg0: Internal.Vector4dc_, arg1: Internal.Vector4d_): Internal.Vector4d;
        fromAxisAngleDeg(arg0: Internal.Vector3dc_, arg1: number): this;
        "transform(org.joml.Vector4f)"(arg0: Vec4f_): Vec4f;
        "setFromNormalized(org.joml.Matrix3dc)"(arg0: Internal.Matrix3dc_): this;
        rotateLocalY(arg0: number): this;
        get(arg0: Matrix3f_): Matrix3f;
        rotateLocalY(arg0: number, arg1: Internal.Quaterniond_): this;
        "transformUnitPositiveZ(org.joml.Vector4f)"(arg0: Vec4f_): Vec4f;
        "transformInverseUnit(org.joml.Vector3f)"(arg0: Vec3f_): Vec3f;
        transformUnitPositiveZ(arg0: Internal.Vector4d_): Internal.Vector4d;
        "transformPositiveX(org.joml.Vector3f)"(arg0: Vec3f_): Vec3f;
        add(arg0: number, arg1: number, arg2: number, arg3: number): this;
        "transformInverseUnit(double,double,double,org.joml.Vector3d)"(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector3d_): Internal.Vector3d;
        transformPositiveX(arg0: Vec3f_): Vec3f;
        "set(org.joml.Quaternionfc)"(arg0: Internal.Quaternionfc_): this;
        getEulerAnglesXYZ(arg0: Internal.Vector3d_): Internal.Vector3d;
        "transformInverse(org.joml.Vector3dc,org.joml.Vector3d)"(arg0: Internal.Vector3dc_, arg1: Internal.Vector3d_): Internal.Vector3d;
        "get(org.joml.AxisAngle4f)"(arg0: Internal.AxisAngle4f_): Internal.AxisAngle4f;
        "setFromUnnormalized(org.joml.Matrix4dc)"(arg0: Internal.Matrix4dc_): this;
        set(arg0: Internal.Quaterniondc_): this;
        wait(arg0: number, arg1: number): void;
        transformUnit(arg0: number, arg1: number, arg2: number, arg3: Internal.Vector4d_): Internal.Vector4d;
        add(arg0: Internal.Quaterniondc_, arg1: Internal.Quaterniond_): this;
        transform(arg0: Internal.Vector3dc_, arg1: Internal.Vector3d_): Internal.Vector3d;
        "transformUnitPositiveY(org.joml.Vector4d)"(arg0: Internal.Vector4d_): Internal.Vector4d;
        transformUnitPositiveZ(arg0: Internal.Vector3d_): Internal.Vector3d;
        "transformUnit(org.joml.Vector4fc,org.joml.Vector4f)"(arg0: Internal.Vector4fc_, arg1: Vec4f_): Vec4f;
        "transform(org.joml.Vector3fc,org.joml.Vector3f)"(arg0: Internal.Vector3fc_, arg1: Vec3f_): Vec3f;
        "transformUnit(org.joml.Vector3f)"(arg0: Vec3f_): Vec3f;
        w(): number;
        setFromNormalized(arg0: Internal.Matrix4dc_): this;
        "transformInverse(double,double,double,org.joml.Vector4f)"(arg0: number, arg1: number, arg2: number, arg3: Vec4f_): Vec4f;
        conjugateBy(arg0: Internal.Quaterniondc_): this;
        transformInverse(arg0: Internal.Vector4fc_, arg1: Vec4f_): Vec4f;
        "transformInverseUnit(org.joml.Vector3dc,org.joml.Vector3d)"(arg0: Internal.Vector3dc_, arg1: Internal.Vector3d_): Internal.Vector3d;
        normalizedPositiveZ(arg0: Internal.Vector3d_): Internal.Vector3d;
        set(arg0: Internal.AxisAngle4d_): this;
        transformPositiveX(arg0: Vec4f_): Vec4f;
        "get(org.joml.Matrix4f)"(arg0: Matrix4f_): Matrix4f;
        invert(arg0: Internal.Quaterniond_): this;
        lookAlong(arg0: Internal.Vector3dc_, arg1: Internal.Vector3dc_, arg2: Internal.Quaterniond_): this;
        rotateLocalX(arg0: number): this;
        setAngleAxis(arg0: number, arg1: number, arg2: number, arg3: number): this;
        "setFromUnnormalized(org.joml.Matrix4x3dc)"(arg0: Internal.Matrix4x3dc_): this;
        hashCode(): number;
        rotateLocalX(arg0: number, arg1: Internal.Quaterniond_): this;
        positiveX(arg0: Internal.Vector3d_): Internal.Vector3d;
        rotationZYX(arg0: number, arg1: number, arg2: number): this;
        "setFromUnnormalized(org.joml.Matrix3fc)"(arg0: Internal.Matrix3fc_): this;
        "transformInverse(org.joml.Vector4f)"(arg0: Vec4f_): Vec4f;
        transformUnitPositiveZ(arg0: Vec4f_): Vec4f;
        get(arg0: Internal.Quaterniond_): this;
        "transform(org.joml.Vector4fc,org.joml.Vector4f)"(arg0: Internal.Vector4fc_, arg1: Vec4f_): Vec4f;
        "transformPositiveZ(org.joml.Vector3f)"(arg0: Vec3f_): Vec3f;
        "transformUnitPositiveX(org.joml.Vector4f)"(arg0: Vec4f_): Vec4f;
        rotationAxis(arg0: number, arg1: number, arg2: number, arg3: number): this;
        transformUnitPositiveY(arg0: Internal.Vector4d_): Internal.Vector4d;
        "transformUnit(org.joml.Vector3fc,org.joml.Vector3f)"(arg0: Internal.Vector3fc_, arg1: Vec3f_): Vec3f;
        integrate(arg0: number, arg1: number, arg2: number, arg3: number): this;
        set fromUnnormalized(arg0: Internal.Matrix3fc_)
        set "(org.joml.AxisAngle4d)"(arg0: Internal.AxisAngle4d_)
        set fromNormalized(arg0: Internal.Matrix3dc_)
        get class(): typeof any
        set "fromNormalized(org.joml.Matrix3fc)"(arg0: Internal.Matrix3fc_)
        set fromNormalized(arg0: Internal.Matrix4fc_)
        get finite(): boolean
        set fromUnnormalized(arg0: Internal.Matrix3dc_)
        set "fromUnnormalized(org.joml.Matrix4fc)"(arg0: Internal.Matrix4fc_)
        set fromUnnormalized(arg0: Internal.Matrix4fc_)
        set fromNormalized(arg0: Internal.Matrix3fc_)
        set fromNormalized(arg0: Internal.Matrix4x3fc_)
        set "fromNormalized(org.joml.Matrix4x3dc)"(arg0: Internal.Matrix4x3dc_)
        set fromUnnormalized(arg0: Internal.Matrix4x3dc_)
        set "fromNormalized(org.joml.Matrix4fc)"(arg0: Internal.Matrix4fc_)
        set "fromUnnormalized(org.joml.Matrix3dc)"(arg0: Internal.Matrix3dc_)
        set "fromNormalized(org.joml.Matrix4x3fc)"(arg0: Internal.Matrix4x3fc_)
        set "(org.joml.AxisAngle4f)"(arg0: Internal.AxisAngle4f_)
        set fromUnnormalized(arg0: Internal.Matrix4dc_)
        set "(org.joml.Quaterniondc)"(arg0: Internal.Quaterniondc_)
        set "fromUnnormalized(org.joml.Matrix4x3fc)"(arg0: Internal.Matrix4x3fc_)
        set fromNormalized(arg0: Internal.Matrix4x3dc_)
        set "fromNormalized(org.joml.Matrix4dc)"(arg0: Internal.Matrix4dc_)
        set fromUnnormalized(arg0: Internal.Matrix4x3fc_)
        set "fromNormalized(org.joml.Matrix3dc)"(arg0: Internal.Matrix3dc_)
        set "(org.joml.Quaternionfc)"(arg0: Internal.Quaternionfc_)
        set "fromUnnormalized(org.joml.Matrix4dc)"(arg0: Internal.Matrix4dc_)
        set fromNormalized(arg0: Internal.Matrix4dc_)
        set "fromUnnormalized(org.joml.Matrix4x3dc)"(arg0: Internal.Matrix4x3dc_)
        set "fromUnnormalized(org.joml.Matrix3fc)"(arg0: Internal.Matrix3fc_)
        z: number;
        w: number;
        x: number;
        y: number;
    }
    type Quaterniond_ = Quaterniond;
    class Point extends Internal.Point2D implements Internal.Serializable {
        constructor()
        constructor(arg0: number, arg1: number)
        constructor(arg0: Internal.Point_)
        clone(): any;
        getClass(): typeof any;
        static distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
        "setLocation(java.awt.geom.Point2D)"(arg0: Internal.Point2D_): void;
        setLocation(arg0: number, arg1: number): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        distanceSq(arg0: number, arg1: number): number;
        "setLocation(int,int)"(arg0: number, arg1: number): void;
        setLocation(arg0: Internal.Point2D_): void;
        setLocation(arg0: Internal.Point_): void;
        getLocation(): this;
        move(arg0: number, arg1: number): void;
        static distanceSq(arg0: number, arg1: number, arg2: number, arg3: number): number;
        "setLocation(double,double)"(arg0: number, arg1: number): void;
        toString(): string;
        distanceSq(arg0: Internal.Point2D_): number;
        notifyAll(): void;
        translate(arg0: number, arg1: number): void;
        getX(): number;
        getY(): number;
        hashCode(): number;
        distance(arg0: number, arg1: number): number;
        wait(): void;
        wait(arg0: number): void;
        setLocation(arg0: number, arg1: number): void;
        "setLocation(java.awt.Point)"(arg0: Internal.Point_): void;
        equals(arg0: any): boolean;
        distance(arg0: Internal.Point2D_): number;
        get class(): typeof any
        set "location(java.awt.geom.Point2D)"(arg0: Internal.Point2D_)
        set location(arg0: Internal.Point2D_)
        set location(arg0: Internal.Point_)
        get location(): Internal.Point
        get x(): number
        get y(): number
        set "location(java.awt.Point)"(arg0: Internal.Point_)
        x: number;
        y: number;
    }
    type Point_ = Point;
    class HideJEIEventJS <T> extends Internal.EventJS {
        constructor(r: any_, t: Internal.IIngredientType_<T>, f: Internal.Function_<any, Internal.Predicate<T>>, i: Internal.Predicate_<T>)
        getClass(): typeof any;
        /**
         * Stops the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `exit` denotes a `default` outcome.
        */
        exit(): any;
        /**
         * Cancels the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `cancel` denotes a `false` outcome.
        */
        cancel(value: any): any;
        toString(): string;
        getAllIngredients(): Internal.Collection<T>;
        notifyAll(): void;
        hide(o: any): void;
        /**
         * Stops the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `exit` denotes a `default` outcome.
        */
        exit(value: any): any;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        /**
         * Stops the event with the given exit value. Execution will be stopped **immediately**.
         * 
         * `success` denotes a `true` outcome.
        */
        success(value: any): any;
        hashCode(): number;
        wait(): void;
        /**
         * Cancels the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `cancel` denotes a `false` outcome.
        */
        cancel(): any;
        wait(arg0: number): void;
        /**
         * Stops the event with default exit value. Execution will be stopped **immediately**.
         * 
         * `success` denotes a `true` outcome.
        */
        success(): any;
        equals(arg0: any): boolean;
        hideAll(): void;
        get class(): typeof any
        get allIngredients(): Internal.Collection<T>
    }
    type HideJEIEventJS_<T> = HideJEIEventJS<T>;
    interface Matrix2dc {
        abstract "scale(double,org.joml.Matrix2d)"(arg0: number, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract scale(arg0: Internal.Vector2dc_, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract "mul(org.joml.Matrix2dc,org.joml.Matrix2d)"(arg0: Internal.Matrix2dc_, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract normalizedPositiveY(arg0: Internal.Vector2d_): Internal.Vector2d;
        abstract mul(arg0: Internal.Matrix2dc_, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract get(arg0: number, arg1: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract "getTransposed(int,java.nio.DoubleBuffer)"(arg0: number, arg1: Internal.DoubleBuffer_): Internal.DoubleBuffer;
        abstract get(arg0: Internal.Matrix3x2d_): Internal.Matrix3x2d;
        abstract getScale(arg0: Internal.Vector2d_): Internal.Vector2d;
        abstract isFinite(): boolean;
        abstract m01(): number;
        abstract positiveY(arg0: Internal.Vector2d_): Internal.Vector2d;
        abstract getTransposedFloats(arg0: number, arg1: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract "getTransposed(java.nio.ByteBuffer)"(arg0: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract get(arg0: Internal.DoubleBuffer_): Internal.DoubleBuffer;
        abstract sub(arg0: Internal.Matrix2dc_, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract transformTranspose(arg0: number, arg1: number, arg2: Internal.Vector2d_): Internal.Vector2d;
        abstract "get(int,java.nio.DoubleBuffer)"(arg0: number, arg1: Internal.DoubleBuffer_): Internal.DoubleBuffer;
        abstract "getTransposed(int,java.nio.FloatBuffer)"(arg0: number, arg1: Internal.FloatBuffer_): Internal.FloatBuffer;
        abstract getRotation(): number;
        abstract "get(double[])"(arg0: number[]): number[];
        abstract mulComponentWise(arg0: Internal.Matrix2dc_, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract equals(arg0: Internal.Matrix2dc_, arg1: number): boolean;
        abstract "get(java.nio.ByteBuffer)"(arg0: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract "get(int,java.nio.ByteBuffer)"(arg0: number, arg1: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract m10(): number;
        abstract "getTransposed(int,java.nio.ByteBuffer)"(arg0: number, arg1: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract transform(arg0: Internal.Vector2dc_, arg1: Internal.Vector2d_): Internal.Vector2d;
        abstract transformTranspose(arg0: Internal.Vector2dc_, arg1: Internal.Vector2d_): Internal.Vector2d;
        abstract transpose(arg0: Internal.Matrix2d_): Internal.Matrix2d;
        abstract get(arg0: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract rotateLocal(arg0: number, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract getToAddress(arg0: number): this;
        abstract getTransposed(arg0: Internal.DoubleBuffer_): Internal.DoubleBuffer;
        abstract invert(arg0: Internal.Matrix2d_): Internal.Matrix2d;
        abstract rotate(arg0: number, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract mulLocal(arg0: Internal.Matrix2dc_, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract add(arg0: Internal.Matrix2dc_, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract normalizedPositiveX(arg0: Internal.Vector2d_): Internal.Vector2d;
        abstract lerp(arg0: Internal.Matrix2dc_, arg1: number, arg2: Internal.Matrix2d_): Internal.Matrix2d;
        abstract get(arg0: number[], arg1: number): number[];
        abstract getRow(arg0: number, arg1: Internal.Vector2d_): Internal.Vector2d;
        abstract getColumn(arg0: number, arg1: Internal.Vector2d_): Internal.Vector2d;
        abstract getTransposed(arg0: Internal.FloatBuffer_): Internal.FloatBuffer;
        abstract get(arg0: Internal.Matrix2d_): Internal.Matrix2d;
        abstract "get(java.nio.DoubleBuffer)"(arg0: Internal.DoubleBuffer_): Internal.DoubleBuffer;
        abstract transform(arg0: number, arg1: number, arg2: Internal.Vector2d_): Internal.Vector2d;
        abstract transform(arg0: Internal.Vector2d_): Internal.Vector2d;
        abstract mul(arg0: Internal.Matrix2fc_, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract positiveX(arg0: Internal.Vector2d_): Internal.Vector2d;
        abstract m00(): number;
        abstract scaleLocal(arg0: number, arg1: number, arg2: Internal.Matrix2d_): Internal.Matrix2d;
        abstract "get(org.joml.Matrix2d)"(arg0: Internal.Matrix2d_): Internal.Matrix2d;
        abstract get(arg0: number[]): number[];
        abstract "getTransposed(java.nio.FloatBuffer)"(arg0: Internal.FloatBuffer_): Internal.FloatBuffer;
        abstract "getTransposed(java.nio.DoubleBuffer)"(arg0: Internal.DoubleBuffer_): Internal.DoubleBuffer;
        abstract normal(arg0: Internal.Matrix2d_): Internal.Matrix2d;
        abstract getTransposed(arg0: number, arg1: Internal.FloatBuffer_): Internal.FloatBuffer;
        abstract determinant(): number;
        abstract scale(arg0: number, arg1: number, arg2: Internal.Matrix2d_): Internal.Matrix2d;
        abstract "get(org.joml.Matrix3x2d)"(arg0: Internal.Matrix3x2d_): Internal.Matrix3x2d;
        abstract scale(arg0: number, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract getFloats(arg0: number, arg1: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract "get(double[],int)"(arg0: number[], arg1: number): number[];
        abstract get(arg0: number, arg1: Internal.DoubleBuffer_): Internal.DoubleBuffer;
        abstract get(arg0: number, arg1: number): number;
        abstract getTransposed(arg0: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract "mul(org.joml.Matrix2fc,org.joml.Matrix2d)"(arg0: Internal.Matrix2fc_, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract transformTranspose(arg0: Internal.Vector2d_): Internal.Vector2d;
        abstract getTransposed(arg0: number, arg1: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract getTransposedFloats(arg0: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract getFloats(arg0: Internal.ByteBuffer_): Internal.ByteBuffer;
        abstract get(arg0: Internal.Matrix3d_): Internal.Matrix3d;
        abstract getTransposed(arg0: number, arg1: Internal.DoubleBuffer_): Internal.DoubleBuffer;
        abstract "scale(org.joml.Vector2dc,org.joml.Matrix2d)"(arg0: Internal.Vector2dc_, arg1: Internal.Matrix2d_): Internal.Matrix2d;
        abstract m11(): number;
        abstract "get(org.joml.Matrix3d)"(arg0: Internal.Matrix3d_): Internal.Matrix3d;
        abstract "get(int,int)"(arg0: number, arg1: number): number;
        get finite(): boolean
        get rotation(): number
    }
    type Matrix2dc_ = Matrix2dc;
    interface IRecipeExtrasBuilder {
        abstract addScrollBoxWidget(arg0: number, arg1: number, arg2: number, arg3: number): Internal.IScrollBoxWidget;
        abstract addDrawable(arg0: Internal.IDrawable_): Internal.IPlaceable<any>;
        abstract addScrollGridWidget(arg0: Internal.List_<Internal.IRecipeSlotDrawable>, arg1: number, arg2: number): Internal.IScrollGridWidget;
        abstract addWidget(arg0: Internal.IRecipeWidget_): void;
        addText(arg0: Internal.FormattedText_, arg1: number, arg2: number): Internal.ITextWidget;
        abstract "addText(java.util.List,int,int)"(arg0: Internal.List_<Internal.FormattedText>, arg1: number, arg2: number): Internal.ITextWidget;
        abstract addAnimatedRecipeArrow(arg0: number): Internal.IPlaceable<any>;
        "addText(net.minecraft.network.chat.FormattedText,int,int)"(arg0: Internal.FormattedText_, arg1: number, arg2: number): Internal.ITextWidget;
        abstract addRecipePlusSign(): Internal.IPlaceable<any>;
        abstract addRecipeArrow(): Internal.IPlaceable<any>;
        abstract getRecipeSlots(): Internal.IRecipeSlotDrawablesView;
        abstract addText(arg0: Internal.List_<Internal.FormattedText>, arg1: number, arg2: number): Internal.ITextWidget;
        abstract addInputHandler(arg0: Internal.IJeiInputHandler_): void;
        abstract addAnimatedRecipeFlame(arg0: number): Internal.IPlaceable<any>;
        abstract addSlottedWidget(arg0: Internal.ISlottedRecipeWidget_, arg1: Internal.List_<Internal.IRecipeSlotDrawable>): void;
        abstract addDrawable(arg0: Internal.IDrawable_, arg1: number, arg2: number): void;
        abstract addGuiEventListener(arg0: Internal.IJeiGuiEventListener_): void;
        get recipeSlots(): Internal.IRecipeSlotDrawablesView
    }
    type IRecipeExtrasBuilder_ = IRecipeExtrasBuilder;
    class ScreenPosition extends Internal.Record {
        constructor(arg0: number, arg1: number)
        getClass(): typeof any;
        step(arg0: Internal.ScreenDirection_): this;
        toString(): string;
        y(): number;
        x(): number;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getCoordinate(arg0: Internal.ScreenAxis_): number;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        static of(arg0: Internal.ScreenAxis_, arg1: number, arg2: number): Internal.ScreenPosition;
        get class(): typeof any
    }
    type ScreenPosition_ = ScreenPosition;
    interface PacketSendListener {
        onSuccess(): void;
        onFailure(): Internal.Packet<any>;
        thenRun(arg0: Internal.Runnable_): this;
        exceptionallySend(arg0: Internal.Supplier_<Internal.Packet<any>>): this;
    }
    type PacketSendListener_ = PacketSendListener;
    class EntityRadarUpdateEvent$EntityType extends Internal.Enum<Internal.EntityRadarUpdateEvent$EntityType> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        static values(): Internal.EntityRadarUpdateEvent$EntityType[];
        getDeclaringClass(): typeof Internal.EntityRadarUpdateEvent$EntityType;
        toString(): string;
        compareTo(arg0: Internal.EntityRadarUpdateEvent$EntityType_): number;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        name(): string;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.EntityRadarUpdateEvent$EntityType>>;
        hashCode(): number;
        ordinal(): number;
        wait(): void;
        static valueOf(arg0: string): Internal.EntityRadarUpdateEvent$EntityType;
        wait(arg0: number): void;
        "compareTo(journeymap.client.api.event.forge.EntityRadarUpdateEvent$EntityType)"(arg0: Internal.EntityRadarUpdateEvent$EntityType_): number;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        get class(): typeof any
        get declaringClass(): typeof Internal.EntityRadarUpdateEvent$EntityType
        static readonly MOB: (Internal.EntityRadarUpdateEvent$EntityType) & (Internal.EntityRadarUpdateEvent$EntityType);
        static readonly PLAYER: (Internal.EntityRadarUpdateEvent$EntityType) & (Internal.EntityRadarUpdateEvent$EntityType);
    }
    type EntityRadarUpdateEvent$EntityType_ = "player" | "mob" | EntityRadarUpdateEvent$EntityType;
    class MendingEnchantment extends Internal.Enchantment {
        constructor(arg0: Internal.Enchantment$Rarity_, ...arg1: Internal.EquipmentSlot_[])
        getClass(): typeof any;
        getDamageProtection(arg0: number, arg1: DamageSource_): number;
        getFullname(arg0: number): Internal.Component;
        isCompatibleWith(arg0: Internal.Enchantment_): boolean;
        getRarity(): Internal.Enchantment$Rarity;
        isTradeable(): boolean;
        isTreasureOnly(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        getMaxCost(arg0: number): number;
        isDiscoverable(): boolean;
        getMinCost(arg0: number): number;
        static byId(arg0: number): Internal.Enchantment;
        getDescriptionId(): string;
        doPostHurt(arg0: Internal.LivingEntity_, arg1: Internal.Entity_, arg2: number): void;
        toString(): string;
        getMaxLevel(): number;
        doPostAttack(arg0: Internal.LivingEntity_, arg1: Internal.Entity_, arg2: number): void;
        notifyAll(): void;
        getSlotItems(arg0: Internal.LivingEntity_): Internal.Map<Internal.EquipmentSlot, Internal.ItemStack>;
        getMinLevel(): number;
        /**
         * @deprecated
        */
        getDamageBonus(arg0: number, arg1: Internal.MobType_): number;
        hashCode(): number;
        isCurse(): boolean;
        allowedInCreativeTab(arg0: Internal.Item_, arg1: Internal.Set_<Internal.EnchantmentCategory>): boolean;
        wait(): void;
        getDamageBonus(arg0: number, arg1: Internal.MobType_, arg2: Internal.ItemStack_): number;
        wait(arg0: number): void;
        canApplyAtEnchantingTable(arg0: Internal.ItemStack_): boolean;
        equals(arg0: any): boolean;
        canEnchant(arg0: Internal.ItemStack_): boolean;
        isAllowedOnBooks(): boolean;
        get class(): typeof any
        get rarity(): Internal.Enchantment$Rarity
        get tradeable(): boolean
        get treasureOnly(): boolean
        get discoverable(): boolean
        get descriptionId(): string
        get maxLevel(): number
        get minLevel(): number
        get curse(): boolean
        get allowedOnBooks(): boolean
    }
    type MendingEnchantment_ = MendingEnchantment;
    class ReplaceBlockConfiguration implements Internal.FeatureConfiguration {
        constructor(arg0: Internal.BlockState_, arg1: Internal.BlockState_)
        constructor(arg0: Internal.List_<Internal.OreConfiguration$TargetBlockState>)
        getClass(): typeof any;
        hashCode(): number;
        getFeatures(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        get features(): Internal.Stream<Internal.ConfiguredFeature<any, any>>
        static readonly CODEC: Internal.Codec<Internal.ReplaceBlockConfiguration>;
        readonly targetStates: Internal.List<Internal.OreConfiguration$TargetBlockState>;
    }
    type ReplaceBlockConfiguration_ = ReplaceBlockConfiguration;
    class BufferBuilder$DrawState extends Internal.Record {
        constructor(format: Internal.VertexFormat_, vertexCount: number, indexCount: number, mode: Internal.VertexFormat$Mode_, indexType: Internal.VertexFormat$IndexType_, indexOnly: boolean, sequentialIndex: boolean)
        getClass(): typeof any;
        mode(): Internal.VertexFormat$Mode;
        toString(): string;
        vertexBufferEnd(): number;
        indexOnly(): boolean;
        indexBufferStart(): number;
        notifyAll(): void;
        vertexBufferStart(): number;
        notify(): void;
        indexBufferEnd(): number;
        wait(arg0: number, arg1: number): void;
        vertexCount(): number;
        hashCode(): number;
        wait(): void;
        sequentialIndex(): boolean;
        wait(arg0: number): void;
        format(): Internal.VertexFormat;
        indexCount(): number;
        indexType(): Internal.VertexFormat$IndexType;
        vertexBufferSize(): number;
        equals(arg0: any): boolean;
        bufferSize(): number;
        get class(): typeof any
    }
    type BufferBuilder$DrawState_ = BufferBuilder$DrawState;
    interface IModProvider {
        abstract name(): string;
        abstract scanFile(arg0: Internal.IModFile_, arg1: Internal.Consumer_<Internal.Path>): void;
        abstract isValid(arg0: Internal.IModFile_): boolean;
        abstract initArguments(arg0: Internal.Map_<string, any>): void;
    }
    type IModProvider_ = IModProvider;
    class ScreenEvent$MouseDragged$Post extends Internal.ScreenEvent$MouseDragged {
        constructor()
        constructor(arg0: Internal.Screen_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        toString(): string;
        setPhase(arg0: Internal.EventPriority_): void;
        getMouseX(): number;
        getScreen(): Internal.Screen;
        notifyAll(): void;
        getMouseY(): number;
        getMouseButton(): number;
        isCanceled(): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        isCancelable(): boolean;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        getDragY(): number;
        getDragX(): number;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get mouseX(): number
        get screen(): Internal.Screen
        get mouseY(): number
        get mouseButton(): number
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get cancelable(): boolean
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
        get dragY(): number
        get dragX(): number
    }
    type ScreenEvent$MouseDragged$Post_ = ScreenEvent$MouseDragged$Post;
    interface DeferredSupplier <T> extends Internal.OptionalSupplier<T> {
        getKey(): Internal.ResourceKey<T>;
        stream(): Internal.Stream<T>;
        ifPresent(action: Internal.Consumer_<T>): void;
        orElseGet(supplier: Internal.Supplier_<T>): T;
        ifPresentOrElse(action: Internal.Consumer_<T>, emptyAction: Internal.Runnable_): void;
        getRegistryKey(): Internal.ResourceKey<Internal.Registry<T>>;
        getOrNull(): T;
        orElse(other: T): T;
        abstract getId(): ResourceLocation;
        abstract isPresent(): boolean;
        abstract getRegistryId(): ResourceLocation;
        abstract get(): T;
        toOptional(): Internal.Optional<T>;
        get key(): Internal.ResourceKey<T>
        get registryKey(): Internal.ResourceKey<Internal.Registry<T>>
        get orNull(): T
        get id(): ResourceLocation
        get present(): boolean
        get registryId(): ResourceLocation
    }
    type DeferredSupplier_<T> = DeferredSupplier<T>;
    interface Object2FloatFunction <K> extends it.unimi.dsi.fastutil.Function<K, number>, Internal.ToDoubleFunction<K> {
        andThenObject<T>(arg0: Internal.Float2ObjectFunction_<T>): Internal.Object2ObjectFunction<K, T>;
        andThenChar(arg0: Internal.Float2CharFunction_): Internal.Object2CharFunction<K>;
        /**
         * @deprecated
        */
        getOrDefault(arg0: any, arg1: any): any;
        composeFloat(arg0: Internal.Float2ObjectFunction_<K>): Internal.Float2FloatFunction;
        removeFloat(arg0: any): number;
        defaultReturnValue(arg0: number): void;
        andThenShort(arg0: Internal.Float2ShortFunction_): Internal.Object2ShortFunction<K>;
        andThenReference<T>(arg0: Internal.Float2ReferenceFunction_<T>): Internal.Object2ReferenceFunction<K, T>;
        getOrDefault(arg0: any, arg1: number): number;
        andThenByte(arg0: Internal.Float2ByteFunction_): Internal.Object2ByteFunction<K>;
        composeReference<T>(arg0: Internal.Reference2ObjectFunction_<T, K>): Internal.Reference2FloatFunction<T>;
        apply(arg0: K): number;
        /**
         * @deprecated
        */
        "put(java.lang.Object,java.lang.Object)"(arg0: any, arg1: any): any;
        compose<V>(arg0: Internal.Function_<V, K>): Internal.Function<V, number>;
        containsKey(arg0: any): boolean;
        /**
         * @deprecated
        */
        "getOrDefault(java.lang.Object,java.lang.Object)"(arg0: any, arg1: any): any;
        composeByte(arg0: Internal.Byte2ObjectFunction_<K>): Internal.Byte2FloatFunction;
        "getOrDefault(java.lang.Object,float)"(arg0: any, arg1: number): number;
        /**
         * @deprecated
        */
        put(arg0: any, arg1: any): any;
        applyAsDouble(arg0: K): number;
        put(arg0: K, arg1: number): number;
        composeChar(arg0: Internal.Char2ObjectFunction_<K>): Internal.Char2FloatFunction;
        composeDouble(arg0: Internal.Double2ObjectFunction_<K>): Internal.Double2FloatFunction;
        defaultReturnValue(): number;
        /**
         * @deprecated
        */
        remove(arg0: any): number;
        abstract getFloat(arg0: any): number;
        /**
         * @deprecated
        */
        andThen<T>(arg0: Internal.Function_<number, T>): Internal.Function<K, T>;
        andThenDouble(arg0: Internal.Float2DoubleFunction_): Internal.Object2DoubleFunction<K>;
        /**
         * @deprecated
        */
        "getOrDefault(java.lang.Object,java.lang.Float)"(arg0: any, arg1: number): number;
        composeObject<T>(arg0: Internal.Object2ObjectFunction_<T, K>): Internal.Object2FloatFunction<T>;
        /**
         * @deprecated
        */
        getOrDefault(arg0: any, arg1: number): number;
        composeLong(arg0: Internal.Long2ObjectFunction_<K>): Internal.Long2FloatFunction;
        composeInt(arg0: Internal.Int2ObjectFunction_<K>): Internal.Int2FloatFunction;
        size(): number;
        composeShort(arg0: Internal.Short2ObjectFunction_<K>): Internal.Short2FloatFunction;
        "put(java.lang.Object,float)"(arg0: K, arg1: number): number;
        andThenLong(arg0: Internal.Float2LongFunction_): Internal.Object2LongFunction<K>;
        /**
         * @deprecated
        */
        "put(java.lang.Object,java.lang.Float)"(arg0: K, arg1: number): number;
        clear(): void;
        /**
         * @deprecated
        */
        get(arg0: any): any;
        /**
         * @deprecated
        */
        put(arg0: K, arg1: number): number;
        identity<T>(): Internal.Function<T, T>;
        andThenInt(arg0: Internal.Float2IntFunction_): Internal.Object2IntFunction<K>;
        andThenFloat(arg0: Internal.Float2FloatFunction_): this;
        (arg0: any): number;
    }
    type Object2FloatFunction_<K> = ((arg0: any)=> number) | Object2FloatFunction<K>;
    class SpawnPlacementRegisterEvent extends Internal.Event implements Internal.IModBusEvent {
        constructor()
        constructor(arg0: Internal.Map_<Internal.EntityType<any>, any>)
        getResult(): Internal.Event$Result;
        setCanceled(arg0: boolean): void;
        getClass(): typeof any;
        register<T extends Internal.Entity>(arg0: Internal.EntityType_<T>, arg1: Internal.SpawnPlacements$Type_, arg2: Internal.Heightmap$Types_, arg3: Internal.SpawnPlacements$SpawnPredicate_<T>, arg4: Internal.SpawnPlacementRegisterEvent$Operation_): void;
        toString(): string;
        setPhase(arg0: Internal.EventPriority_): void;
        notifyAll(): void;
        isCanceled(): boolean;
        register<T extends Internal.Entity>(arg0: Internal.EntityType_<T>, arg1: Internal.SpawnPlacements$SpawnPredicate_<T>): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasResult(): boolean;
        setResult(arg0: Internal.Event$Result_): void;
        hashCode(): number;
        isCancelable(): boolean;
        wait(): void;
        getListenerList(): Internal.ListenerList;
        wait(arg0: number): void;
        getPhase(): Internal.EventPriority;
        equals(arg0: any): boolean;
        register<T extends Internal.Entity>(arg0: Internal.EntityType_<T>, arg1: Internal.SpawnPlacements$SpawnPredicate_<T>, arg2: Internal.SpawnPlacementRegisterEvent$Operation_): void;
        get result(): Internal.Event$Result
        set canceled(arg0: boolean)
        get class(): typeof any
        set phase(arg0: Internal.EventPriority_)
        get canceled(): boolean
        set result(arg0: Internal.Event$Result_)
        get cancelable(): boolean
        get listenerList(): Internal.ListenerList
        get phase(): Internal.EventPriority
    }
    type SpawnPlacementRegisterEvent_ = SpawnPlacementRegisterEvent;
    interface VertexFormatAccessor {
        abstract getOffsets(): Internal.IntList;
        get offsets(): Internal.IntList
        (): Internal.IntList_;
    }
    type VertexFormatAccessor_ = (()=> Internal.IntList_) | VertexFormatAccessor;
    class AddSpawnProperties {
        constructor()
        getClass(): typeof any;
        setEntity(s: string): void;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        setCategory(s: string): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        set entity(s: string)
        set category(s: string)
        minCount: number;
        _category: Internal.MobCategory;
        _entity: Internal.EntityType<any>;
        biomes: Internal.BiomeFilter;
        maxCount: number;
        weight: number;
    }
    type AddSpawnProperties_ = AddSpawnProperties;
    class MultifaceGrowthConfiguration implements Internal.FeatureConfiguration {
        constructor(arg0: Internal.MultifaceBlock_, arg1: number, arg2: boolean, arg3: boolean, arg4: boolean, arg5: number, arg6: Internal.HolderSet_<Internal.Block>)
        getShuffledDirectionsExcept(arg0: Internal.RandomSource_, arg1: Internal.Direction_): Internal.List<Internal.Direction>;
        getClass(): typeof any;
        hashCode(): number;
        getFeatures(): Internal.Stream<Internal.ConfiguredFeature<any, any>>;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        getShuffledDirections(arg0: Internal.RandomSource_): Internal.List<Internal.Direction>;
        wait(arg0: number, arg1: number): void;
        get class(): typeof any
        get features(): Internal.Stream<Internal.ConfiguredFeature<any, any>>
        readonly searchRange: number;
        readonly canBePlacedOn: Internal.HolderSet<Internal.Block>;
        static readonly CODEC: Internal.Codec<Internal.MultifaceGrowthConfiguration>;
        readonly placeBlock: Internal.MultifaceBlock;
        readonly canPlaceOnCeiling: boolean;
        readonly canPlaceOnFloor: boolean;
        readonly canPlaceOnWall: boolean;
        readonly chanceOfSpreading: number;
    }
    type MultifaceGrowthConfiguration_ = MultifaceGrowthConfiguration;
    class AttachedStemBlock extends Internal.BushBlock {
        constructor(arg0: Internal.StemGrownBlock_, arg1: Internal.Supplier_<Internal.Item>, arg2: Internal.BlockBehaviour$Properties_)
        /**
         * @deprecated
        */
        getSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isEnabled(arg0: Internal.FeatureFlagSet_): boolean;
        /**
         * @deprecated
        */
        getVisualShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number, arg5: number): void;
        static popResource(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.ItemStack_): void;
        setRandomTickCallback(callback: Internal.Consumer_<any>): void;
        getBeaconColorMultiplier(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): number[];
        stepOn(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.Entity_): void;
        getPistonPushReaction(arg0: Internal.BlockState_): Internal.PushReaction;
        getExpDrop(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.RandomSource_, arg3: BlockPos_, arg4: number, arg5: number): number;
        /**
         * @deprecated
        */
        getExplosionResistance(): number;
        asItem(): Internal.Item;
        shouldDisplayFluidOverlay(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        triggerEvent(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: number, arg4: number): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_, arg6: boolean): void;
        setFriction(arg0: number): void;
        getTypeData(): Internal.CompoundTag;
        rotate(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.Rotation_): Internal.BlockState;
        /**
         * @deprecated
        */
        getRenderShape(arg0: Internal.BlockState_): Internal.RenderShape;
        getSpeedFactor(): number;
        /**
         * @deprecated
        */
        getLightBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        isPossibleToRespawnInThis(arg0: Internal.BlockState_): boolean;
        playerDestroy(arg0: Internal.Level_, arg1: Player_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.BlockEntity_, arg5: Internal.ItemStack_): void;
        playerWillDestroy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Player_): void;
        getCloneItemStack(arg0: Internal.BlockState_, arg1: Internal.HitResult_, arg2: Internal.BlockGetter_, arg3: BlockPos_, arg4: Player_): Internal.ItemStack;
        getClass(): typeof any;
        getMaxVerticalOffset(): number;
        getRenderPropertiesInternal(): any;
        onCaughtFire(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.LivingEntity_): void;
        /**
         * @deprecated
        */
        getDrops(arg0: Internal.BlockState_, arg1: Internal.LootParams$Builder_): Internal.List<Internal.ItemStack>;
        getStateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>;
        /**
         * @deprecated
        */
        entityInside(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): void;
        setBlockBuilder(b: Internal.BlockBuilder_): void;
        initializeClient(arg0: Internal.Consumer_<Internal.IClientBlockExtensions>): void;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        getBlockStates(): Internal.List<Internal.BlockState>;
        setRequiresTool(v: boolean): void;
        getPlant(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.BlockState;
        addLandingEffects(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.LivingEntity_, arg5: number): boolean;
        /**
         * @deprecated
        */
        builtInRegistryHolder(): Internal.Holder$Reference<Internal.Block>;
        static popResourceFromFace(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Direction_, arg3: Internal.ItemStack_): void;
        handlePrecipitation(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Biome$Precipitation_): void;
        wait(arg0: number): void;
        /**
         * @deprecated
        */
        getFluidState(arg0: Internal.BlockState_): Internal.FluidState;
        getRespawnPosition(arg0: Internal.BlockState_, arg1: Internal.EntityType_<any>, arg2: Internal.LevelReader_, arg3: BlockPos_, arg4: number, arg5: Internal.LivingEntity_): Internal.Optional<Vec3d>;
        /**
         * @deprecated
        */
        tick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        isFertile(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        canBeHydrated(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.FluidState_, arg4: BlockPos_): boolean;
        getWeakChanges(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        neighborChanged(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Block_, arg4: BlockPos_, arg5: boolean): void;
        /**
         * @deprecated
        */
        getBlockSupportShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        /**
         * @deprecated
        */
        isCollisionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        getMenuProvider(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): Internal.MenuProvider;
        static byItem(arg0: Internal.Item_): Internal.Block;
        static updateFromNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_): Internal.BlockState;
        /**
         * @deprecated
        */
        updateIndirectNeighbourShapes(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: number, arg4: number): void;
        destroy(arg0: Internal.LevelAccessor_, arg1: BlockPos_, arg2: Internal.BlockState_): void;
        getFriction(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): number;
        canConnectRedstone(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        use(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: Internal.InteractionHand_, arg5: Internal.BlockHitResult_): Internal.InteractionResult;
        setLightEmission(v: number): void;
        setJumpFactor(arg0: number): void;
        isSlimeBlock(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        getShadeBrightness(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        /**
         * @deprecated
        */
        getCollisionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        defaultBlockState(): Internal.BlockState;
        getStateForPlacement(arg0: Internal.BlockPlaceContext_): Internal.BlockState;
        getToolModifiedState(arg0: Internal.BlockState_, arg1: Internal.UseOnContext_, arg2: Internal.ToolAction_, arg3: boolean): Internal.BlockState;
        wait(): void;
        getMaxHorizontalOffset(): number;
        /**
         * @deprecated
        */
        getDestroyProgress(arg0: Internal.BlockState_, arg1: Player_, arg2: Internal.BlockGetter_, arg3: BlockPos_): number;
        makesOpenTrapdoorAboveClimbable(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.BlockState_): boolean;
        updateShape(arg0: Internal.BlockState_, arg1: Internal.Direction_, arg2: Internal.BlockState_, arg3: Internal.LevelAccessor_, arg4: BlockPos_, arg5: BlockPos_): Internal.BlockState;
        isRandomlyTicking(arg0: Internal.BlockState_): boolean;
        static isShapeFullBlock(arg0: Internal.VoxelShape_): boolean;
        withPropertiesOf(arg0: Internal.BlockState_): Internal.BlockState;
        setIsRandomlyTicking(arg0: boolean): void;
        rotate(arg0: Internal.BlockState_, arg1: Internal.Rotation_): Internal.BlockState;
        isScaffolding(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        hidesNeighborFace(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_, arg4: Internal.Direction_): boolean;
        defaultMapColor(): Internal.MapColor;
        getStateAtViewpoint(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Vec3d_): Internal.BlockState;
        setNameKey(arg0: string): void;
        static box(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): Internal.VoxelShape;
        getExplosionResistance(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): number;
        updateEntityAfterFallOn(arg0: Internal.BlockGetter_, arg1: Internal.Entity_): void;
        getLightEmission(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): number;
        setBedOccupied(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.LivingEntity_, arg4: boolean): void;
        arch$registryName(): ResourceLocation;
        getBlockBuilder(): Internal.BlockBuilder;
        getIdLocation(): ResourceLocation;
        canDropFromExplosion(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Explosion_): boolean;
        addRunningEffects(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        isSignalSource(arg0: Internal.BlockState_): boolean;
        /**
         * @deprecated
        */
        onProjectileHit(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockHitResult_, arg3: Internal.Projectile_): void;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_, arg4: Internal.Entity_, arg5: Internal.ItemStack_): Internal.List<Internal.ItemStack>;
        /**
         * @deprecated
        */
        isOcclusionShapeFullBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        static getId(arg0: Internal.BlockState_): number;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.level.material.Fluid)"(arg0: Internal.BlockState_, arg1: Internal.Fluid_): boolean;
        canSustainPlant(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.IPlantable_): boolean;
        isPathfindable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.PathComputationType_): boolean;
        setSoundType(arg0: SoundType_): void;
        /**
         * @deprecated
        */
        onRemove(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        equals(arg0: any): boolean;
        /**
         * @deprecated
        */
        getOcclusionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        isFlammable(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        collisionExtendsVertically(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        /**
         * @deprecated
        */
        getSoundType(arg0: Internal.BlockState_): SoundType;
        /**
         * @deprecated
        */
        randomTick(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.LevelAccessor_, arg2: BlockPos_, arg3: Internal.BlockEntity_): void;
        static canSupportRigidBlock(arg0: Internal.BlockGetter_, arg1: BlockPos_): boolean;
        isStickyBlock(arg0: Internal.BlockState_): boolean;
        getDescriptionId(): string;
        onBlockExploded(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.Explosion_): void;
        fallOn(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: BlockPos_, arg3: Internal.Entity_, arg4: number): void;
        canEntityDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        getJumpFactor(): number;
        isValidSpawn(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.SpawnPlacements$Type_, arg4: Internal.EntityType_<any>): boolean;
        getFlammability(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        static canSupportCenter(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        skipRendering(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.Direction_): boolean;
        /**
         * @deprecated
        */
        getDirectSignal(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        isLadder(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.LivingEntity_): boolean;
        onDestroyedByPlayer(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_, arg4: boolean, arg5: Internal.FluidState_): boolean;
        /**
         * @deprecated
        */
        "canBeReplaced(net.minecraft.world.level.block.state.BlockState,net.minecraft.world.item.context.BlockPlaceContext)"(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        getMapColor(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.MapColor_): Internal.MapColor;
        isPortalFrame(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        /**
         * @deprecated
        */
        useShapeForLightOcclusion(arg0: Internal.BlockState_): boolean;
        getBedDirection(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): Internal.Direction;
        setSpeedFactor(arg0: number): void;
        setExplosionResistance(arg0: number): void;
        getEnchantPowerBonus(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): number;
        toString(): string;
        notifyAll(): void;
        getId(): string;
        getLootTable(): ResourceLocation;
        /**
         * @deprecated
        */
        getInteractionShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): Internal.VoxelShape;
        propagatesSkylightDown(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setPlacedBy(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.LivingEntity_, arg4: Internal.ItemStack_): void;
        /**
         * @deprecated
        */
        onPlace(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: boolean): void;
        getFriction(): number;
        /**
         * @deprecated
        */
        hasAnalogOutputSignal(arg0: Internal.BlockState_): boolean;
        getSoundType(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Entity_): SoundType;
        /**
         * @deprecated
        */
        getAnalogOutputSignal(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): number;
        supportsExternalFaceHiding(arg0: Internal.BlockState_): boolean;
        notify(): void;
        onBlockStateChange(arg0: Internal.LevelReader_, arg1: BlockPos_, arg2: Internal.BlockState_, arg3: Internal.BlockState_): void;
        static isFaceFull(arg0: Internal.VoxelShape_, arg1: Internal.Direction_): boolean;
        isFireSource(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        canSurvive(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_): boolean;
        static dropResources(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_): void;
        getAppearance(arg0: Internal.BlockState_, arg1: Internal.BlockAndTintGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: Internal.BlockState_, arg5: BlockPos_): Internal.BlockState;
        setDestroySpeed(v: number): void;
        canHarvestBlock(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Player_): boolean;
        shouldCheckWeakPower(arg0: Internal.BlockState_, arg1: Internal.SignalGetter_, arg2: BlockPos_, arg3: Internal.Direction_): boolean;
        arch$holder(): Internal.Holder<Internal.Block>;
        getCloneItemStack(arg0: Internal.BlockGetter_, arg1: BlockPos_, arg2: Internal.BlockState_): Internal.ItemStack;
        hasDynamicShape(): boolean;
        getPlantType(arg0: Internal.BlockGetter_, arg1: BlockPos_): Internal.PlantType;
        /**
         * @deprecated
        */
        getSeed(arg0: Internal.BlockState_, arg1: BlockPos_): number;
        defaultDestroyTime(): number;
        getBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        dropFromExplosion(arg0: Internal.Explosion_): boolean;
        onNeighborChange(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): void;
        static isExceptionForConnection(arg0: Internal.BlockState_): boolean;
        onTreeGrow(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: Internal.BiConsumer_<BlockPos, Internal.BlockState>, arg3: Internal.RandomSource_, arg4: BlockPos_, arg5: Internal.TreeConfiguration_): boolean;
        wait(arg0: number, arg1: number): void;
        appendHoverText(arg0: Internal.ItemStack_, arg1: Internal.BlockGetter_, arg2: Internal.List_<Internal.Component>, arg3: Internal.TooltipFlag_): void;
        mirror(arg0: Internal.BlockState_, arg1: Internal.Mirror_): Internal.BlockState;
        isBed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Entity_): boolean;
        wasExploded(arg0: Internal.Level_, arg1: BlockPos_, arg2: Internal.Explosion_): void;
        getName(): Internal.MutableComponent;
        canStickTo(arg0: Internal.BlockState_, arg1: Internal.BlockState_): boolean;
        animateTick(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Internal.RandomSource_): void;
        getFireSpreadSpeed(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_): number;
        getMod(): string;
        getAdjacentBlockPathType(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Mob_, arg4: Internal.BlockPathTypes_): Internal.BlockPathTypes;
        /**
         * @deprecated
        */
        canBeReplaced(arg0: Internal.BlockState_, arg1: Internal.BlockPlaceContext_): boolean;
        isConduitFrame(arg0: Internal.BlockState_, arg1: Internal.LevelReader_, arg2: BlockPos_, arg3: BlockPos_): boolean;
        static updateOrDestroy(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_, arg4: number): void;
        /**
         * @deprecated
        */
        attack(arg0: Internal.BlockState_, arg1: Internal.Level_, arg2: BlockPos_, arg3: Player_): void;
        getShape(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.CollisionContext_): Internal.VoxelShape;
        static stateById(arg0: number): Internal.BlockState;
        requiredFeatures(): Internal.FeatureFlagSet;
        hashCode(): number;
        popExperience(arg0: Internal.ServerLevel_, arg1: BlockPos_, arg2: number): void;
        static pushEntitiesUp(arg0: Internal.BlockState_, arg1: Internal.BlockState_, arg2: Internal.LevelAccessor_, arg3: BlockPos_): Internal.BlockState;
        static getDrops(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.BlockEntity_): Internal.List<Internal.ItemStack>;
        isBurning(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_): boolean;
        setHasCollision(arg0: boolean): void;
        static shouldRenderFace(arg0: Internal.BlockState_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.Direction_, arg4: BlockPos_): boolean;
        /**
         * @deprecated
        */
        spawnAfterBreak(arg0: Internal.BlockState_, arg1: Internal.ServerLevel_, arg2: BlockPos_, arg3: Internal.ItemStack_, arg4: boolean): void;
        set randomTickCallback(callback: Internal.Consumer_<any>)
        /**
         * @deprecated
        */
        get explosionResistance(): number
        set friction(arg0: number)
        get typeData(): Internal.CompoundTag
        get speedFactor(): number
        get class(): typeof any
        get maxVerticalOffset(): number
        get renderPropertiesInternal(): any
        get stateDefinition(): Internal.StateDefinition<Internal.Block, Internal.BlockState>
        set blockBuilder(b: Internal.BlockBuilder_)
        get blockStates(): Internal.List<Internal.BlockState>
        set requiresTool(v: boolean)
        set lightEmission(v: number)
        set jumpFactor(arg0: number)
        get maxHorizontalOffset(): number
        set isRandomlyTicking(arg0: boolean)
        set nameKey(arg0: string)
        get blockBuilder(): Internal.BlockBuilder
        get idLocation(): ResourceLocation
        set soundType(arg0: SoundType_)
        get descriptionId(): string
        get jumpFactor(): number
        set speedFactor(arg0: number)
        set explosionResistance(arg0: number)
        get id(): string
        get lootTable(): ResourceLocation
        get friction(): number
        set destroySpeed(v: number)
        get name(): Internal.MutableComponent
        get mod(): string
        set hasCollision(arg0: boolean)
        static readonly FACING: (Internal.DirectionProperty) & (Internal.DirectionProperty);
    }
    type AttachedStemBlock_ = AttachedStemBlock;
    abstract class AbstractCookingRecipe implements Internal.Recipe<Internal.Container> {
        constructor(arg0: Internal.RecipeType_<any>, arg1: ResourceLocation_, arg2: string, arg3: Internal.CookingBookCategory_, arg4: Internal.Ingredient_, arg5: Internal.ItemStack_, arg6: number, arg7: number)
        getClass(): typeof any;
        category(): Internal.CookingBookCategory;
        getGroup(): string;
        getToastSymbol(): Internal.ItemStack;
        getSchema(): Internal.RecipeSchema;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        assemble(arg0: Internal.Container_, arg1: Internal.RegistryAccess_): Internal.ItemStack;
        abstract getSerializer(): Internal.RecipeSerializer<any>;
        getId(): ResourceLocation;
        matches(arg0: Internal.Container_, arg1: Internal.Level_): boolean;
        getMod(): string;
        getRemainingItems(arg0: Internal.Container_): Internal.NonNullList<Internal.ItemStack>;
        getIngredients(): Internal.NonNullList<Internal.Ingredient>;
        getExperience(): number;
        isSpecial(): boolean;
        hasOutput(match: Internal.ReplacementMatch_): boolean;
        getResultItem(arg0: Internal.RegistryAccess_): Internal.ItemStack;
        toString(): string;
        notifyAll(): void;
        canCraftInDimensions(arg0: number, arg1: number): boolean;
        showNotification(): boolean;
        replaceInput(match: Internal.ReplacementMatch_, with_: Internal.InputReplacement_): boolean;
        getCookingTime(): number;
        getType(): ResourceLocation;
        setGroup(group: string): void;
        hashCode(): number;
        getOrCreateId(): ResourceLocation;
        hasInput(match: Internal.ReplacementMatch_): boolean;
        wait(): void;
        isIncomplete(): boolean;
        wait(arg0: number): void;
        replaceOutput(match: Internal.ReplacementMatch_, with_: Internal.OutputReplacement_): boolean;
        equals(arg0: any): boolean;
        get class(): typeof any
        get group(): string
        get toastSymbol(): Internal.ItemStack
        get schema(): Internal.RecipeSchema
        get serializer(): Internal.RecipeSerializer<any>
        get id(): ResourceLocation
        get mod(): string
        get ingredients(): Internal.NonNullList<Internal.Ingredient>
        get experience(): number
        get special(): boolean
        get cookingTime(): number
        get type(): ResourceLocation
        set group(group: string)
        get orCreateId(): ResourceLocation
        get incomplete(): boolean
    }
    type AbstractCookingRecipe_ = AbstractCookingRecipe;
    interface WriterSupplier {
        abstract get(): Internal.Writer;
        (): Internal.Writer_;
    }
    type WriterSupplier_ = WriterSupplier | (()=> Internal.Writer_);
    interface ServicesKeySet {
        lazy(arg0: Internal.Supplier_<Internal.ServicesKeySet>): this;
        abstract keys(arg0: Internal.ServicesKeyType_): Internal.Collection<Internal.ServicesKeyInfo>;
        (arg0: Internal.ServicesKeyType): Internal.Collection_<Internal.ServicesKeyInfo>;
        readonly EMPTY: Internal.ServicesKeySet;
    }
    type ServicesKeySet_ = ServicesKeySet | ((arg0: Internal.ServicesKeyType)=> Internal.Collection_<Internal.ServicesKeyInfo>);
    class MatchingBlockTagPredicate extends Internal.StateTestingPredicate {
        static noFluid(arg0: Vec3i_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        and(arg0: Internal.BiPredicate_<Internal.WorldGenLevel, BlockPos>): Internal.BiPredicate<Internal.WorldGenLevel, BlockPos>;
        static "matchesBlocks(java.util.List)"(arg0: Internal.List_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static matchesTag(arg0: Vec3i_, arg1: Internal.TagKey_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        notify(): void;
        negate(): Internal.BiPredicate<Internal.WorldGenLevel, BlockPos>;
        test(arg0: Internal.WorldGenLevel_, arg1: BlockPos_): boolean;
        static solid(arg0: Vec3i_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static insideWorld(arg0: Vec3i_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        or(arg0: Internal.BiPredicate_<Internal.WorldGenLevel, BlockPos>): Internal.BiPredicate<Internal.WorldGenLevel, BlockPos>;
        static matchesTag(arg0: Internal.TagKey_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static alwaysTrue(): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static solid(): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        type(): Internal.BlockPredicateType<any>;
        static matchesBlocks(arg0: Vec3i_, arg1: Internal.List_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static allOf(...arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "matchesBlocks(net.minecraft.world.level.block.Block[])"(...arg0: Internal.Block_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static replaceable(): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static matchesFluids(arg0: Vec3i_, arg1: Internal.List_<Internal.Fluid>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static matchesFluids(arg0: Vec3i_, ...arg1: Internal.Fluid_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        wait(): void;
        static anyOf(...arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "anyOf(net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate[])"(...arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static hasSturdyFace(arg0: Vec3i_, arg1: Internal.Direction_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        test(arg0: any, arg1: any): boolean;
        static matchesBlocks(...arg0: Internal.Block_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static hasSturdyFace(arg0: Internal.Direction_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        getClass(): typeof any;
        static "matchesFluids(net.minecraft.core.Vec3i,net.minecraft.world.level.material.Fluid[])"(arg0: Vec3i_, ...arg1: Internal.Fluid_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "allOf(java.util.List)"(arg0: Internal.List_<net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static anyOf(arg0: Internal.List_<net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "anyOf(java.util.List)"(arg0: Internal.List_<net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static noFluid(): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        wait(arg0: number, arg1: number): void;
        static anyOf(arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_, arg1: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "matchesBlocks(net.minecraft.core.Vec3i,net.minecraft.world.level.block.Block[])"(arg0: Vec3i_, ...arg1: Internal.Block_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "allOf(net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate[])"(...arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        "test(net.minecraft.world.level.WorldGenLevel,net.minecraft.core.BlockPos)"(arg0: Internal.WorldGenLevel_, arg1: BlockPos_): boolean;
        static matchesBlocks(arg0: Vec3i_, ...arg1: Internal.Block_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        toString(): string;
        notifyAll(): void;
        static "matchesBlocks(net.minecraft.core.Vec3i,java.util.List)"(arg0: Vec3i_, arg1: Internal.List_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static "matchesFluids(net.minecraft.core.Vec3i,java.util.List)"(arg0: Vec3i_, arg1: Internal.List_<Internal.Fluid>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static wouldSurvive(arg0: Internal.BlockState_, arg1: Vec3i_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        hashCode(): number;
        static not(arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static allOf(arg0: Internal.List_<net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        static allOf(arg0: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_, arg1: net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        wait(arg0: number): void;
        static replaceable(arg0: Vec3i_): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        "test(java.lang.Object,java.lang.Object)"(arg0: any, arg1: any): boolean;
        static matchesBlocks(arg0: Internal.List_<Internal.Block>): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        equals(arg0: any): boolean;
        static matchesFluids(...arg0: Internal.Fluid_[]): net.minecraft.world.level.levelgen.blockpredicates.BlockPredicate;
        get class(): typeof any
        static readonly CODEC: Internal.Codec<Internal.MatchingBlockTagPredicate>;
    }
    type MatchingBlockTagPredicate_ = MatchingBlockTagPredicate;
    class GuiGraphics implements Internal.IForgeGuiGraphics {
        constructor(arg0: Internal.Minecraft_, arg1: Internal.MultiBufferSource$BufferSource_)
        blitRepeating(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number): void;
        getColorFromFormattingCharacter(arg0: string, arg1: boolean): number;
        blitNineSlicedSized(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number): void;
        renderComponentTooltip(arg0: Internal.Font_, arg1: Internal.List_<Internal.FormattedText>, arg2: number, arg3: number, arg4: Internal.ItemStack_): void;
        drawString(arg0: Internal.Font_, arg1: Internal.Component_, arg2: number, arg3: number, arg4: number): number;
        renderItem(arg0: Internal.ItemStack_, arg1: number, arg2: number, arg3: number): void;
        enableScissor(arg0: number, arg1: number, arg2: number, arg3: number): void;
        renderTooltipInternal(arg0: Internal.Font_, arg1: Internal.List_<Internal.ClientTooltipComponent>, arg2: number, arg3: number, arg4: Internal.ClientTooltipPositioner_): void;
        drawString(arg0: Internal.Font_, arg1: Internal.FormattedCharSequence_, arg2: number, arg3: number, arg4: number): number;
        drawString(arg0: Internal.Font_, arg1: Internal.FormattedCharSequence_, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        blitNineSlicedSized(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number): void;
        vLine(arg0: number, arg1: number, arg2: number, arg3: number): void;
        renderComponentHoverEffect(arg0: Internal.Font_, arg1: Internal.Style_, arg2: number, arg3: number): void;
        fill(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        hLine(arg0: number, arg1: number, arg2: number, arg3: number): void;
        fill(arg0: Internal.RenderType_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        renderTooltip(arg0: Internal.Font_, arg1: Internal.Component_, arg2: number, arg3: number): void;
        "fill(int,int,int,int,int,int)"(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        "renderTooltip(net.minecraft.client.gui.Font,java.util.List,net.minecraft.client.gui.screens.inventory.tooltip.ClientTooltipPositioner,int,int)"(arg0: Internal.Font_, arg1: Internal.List_<Internal.FormattedCharSequence>, arg2: Internal.ClientTooltipPositioner_, arg3: number, arg4: number): void;
        "renderTooltip(net.minecraft.client.gui.Font,net.minecraft.world.item.ItemStack,int,int)"(arg0: Internal.Font_, arg1: Internal.ItemStack_, arg2: number, arg3: number): void;
        blitNineSliced(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number): void;
        drawString(arg0: Internal.Font_, arg1: Internal.Component_, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        blitNineSlicedSized(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number): void;
        renderTooltip(arg0: Internal.Font_, arg1: Internal.List_<Internal.Component>, arg2: Internal.Optional_<Internal.TooltipComponent>, arg3: Internal.ItemStack_, arg4: number, arg5: number): void;
        getClass(): typeof any;
        "drawString(net.minecraft.client.gui.Font,java.lang.String,int,int,int,boolean)"(arg0: Internal.Font_, arg1: string, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        bufferSource(): Internal.MultiBufferSource$BufferSource;
        guiWidth(): number;
        "drawString(net.minecraft.client.gui.Font,net.minecraft.util.FormattedCharSequence,float,float,int,boolean)"(arg0: Internal.Font_, arg1: Internal.FormattedCharSequence_, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        drawWordWrap(arg0: Internal.Font_, arg1: Internal.FormattedText_, arg2: number, arg3: number, arg4: number, arg5: number): void;
        pose(): Internal.PoseStack;
        "renderItem(net.minecraft.world.entity.LivingEntity,net.minecraft.world.item.ItemStack,int,int,int)"(arg0: Internal.LivingEntity_, arg1: Internal.ItemStack_, arg2: number, arg3: number, arg4: number): void;
        "renderItem(net.minecraft.world.item.ItemStack,int,int,int,int)"(arg0: Internal.ItemStack_, arg1: number, arg2: number, arg3: number, arg4: number): void;
        disableScissor(): void;
        toString(): string;
        fillGradient(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        notifyAll(): void;
        renderTooltip(arg0: Internal.Font_, arg1: Internal.List_<Internal.FormattedCharSequence>, arg2: number, arg3: number): void;
        renderComponentTooltip(arg0: Internal.Font_, arg1: Internal.List_<Internal.Component>, arg2: number, arg3: number): void;
        "renderTooltip(net.minecraft.client.gui.Font,net.minecraft.network.chat.Component,int,int)"(arg0: Internal.Font_, arg1: Internal.Component_, arg2: number, arg3: number): void;
        blitNineSliced(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number): void;
        fill(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        blitInscribed(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: boolean): void;
        renderItem(arg0: Internal.ItemStack_, arg1: number, arg2: number, arg3: number, arg4: number): void;
        wait(arg0: number): void;
        renderFakeItem(arg0: Internal.ItemStack_, arg1: number, arg2: number): void;
        hLine(arg0: Internal.RenderType_, arg1: number, arg2: number, arg3: number, arg4: number): void;
        renderItemDecorations(arg0: Internal.Font_, arg1: Internal.ItemStack_, arg2: number, arg3: number): void;
        fillGradient(arg0: Internal.RenderType_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): void;
        renderTooltip(arg0: Internal.Font_, arg1: Internal.List_<Internal.Component>, arg2: Internal.Optional_<Internal.TooltipComponent>, arg3: number, arg4: number): void;
        vLine(arg0: Internal.RenderType_, arg1: number, arg2: number, arg3: number, arg4: number): void;
        setColor(arg0: number, arg1: number, arg2: number, arg3: number): void;
        notify(): void;
        renderItem(arg0: Internal.LivingEntity_, arg1: Internal.ItemStack_, arg2: number, arg3: number, arg4: number): void;
        "renderTooltip(net.minecraft.client.gui.Font,java.util.List,java.util.Optional,int,int)"(arg0: Internal.Font_, arg1: Internal.List_<Internal.Component>, arg2: Internal.Optional_<Internal.TooltipComponent>, arg3: number, arg4: number): void;
        renderOutline(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        guiHeight(): number;
        drawString(arg0: Internal.Font_, arg1: Internal.FormattedCharSequence_, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        blitWithBorder(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        "renderTooltip(net.minecraft.client.gui.Font,java.util.List,int,int)"(arg0: Internal.Font_, arg1: Internal.List_<Internal.FormattedCharSequence>, arg2: number, arg3: number): void;
        "drawCenteredString(net.minecraft.client.gui.Font,java.lang.String,int,int,int)"(arg0: Internal.Font_, arg1: string, arg2: number, arg3: number, arg4: number): void;
        "blit(net.minecraft.resources.ResourceLocation,int,int,int,float,float,int,int,int,int)"(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        blit(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        blitWithBorder(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number): void;
        renderTooltip(arg0: Internal.Font_, arg1: Internal.List_<Internal.FormattedCharSequence>, arg2: Internal.ClientTooltipPositioner_, arg3: number, arg4: number): void;
        drawCenteredString(arg0: Internal.Font_, arg1: string, arg2: number, arg3: number, arg4: number): void;
        drawString(arg0: Internal.Font_, arg1: string, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        wait(): void;
        blit(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.TextureAtlasSprite_, arg6: number, arg7: number, arg8: number, arg9: number): void;
        renderTooltip(arg0: Internal.Font_, arg1: Internal.ItemStack_, arg2: number, arg3: number): void;
        blit(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number): void;
        "drawString(net.minecraft.client.gui.Font,net.minecraft.network.chat.Component,int,int,int)"(arg0: Internal.Font_, arg1: Internal.Component_, arg2: number, arg3: number, arg4: number): number;
        fillGradient(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        renderItem(arg0: Internal.ItemStack_, arg1: number, arg2: number): void;
        fill(arg0: Internal.RenderType_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        "drawCenteredString(net.minecraft.client.gui.Font,net.minecraft.network.chat.Component,int,int,int)"(arg0: Internal.Font_, arg1: Internal.Component_, arg2: number, arg3: number, arg4: number): void;
        wait(arg0: number, arg1: number): void;
        "drawString(net.minecraft.client.gui.Font,java.lang.String,float,float,int,boolean)"(arg0: Internal.Font_, arg1: string, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        flush(): void;
        blitRepeating(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        renderItemDecorations(arg0: Internal.Font_, arg1: Internal.ItemStack_, arg2: number, arg3: number, arg4: string): void;
        drawCenteredString(arg0: Internal.Font_, arg1: Internal.FormattedCharSequence_, arg2: number, arg3: number, arg4: number): void;
        "blit(int,int,int,int,int,net.minecraft.client.renderer.texture.TextureAtlasSprite,float,float,float,float)"(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.TextureAtlasSprite_, arg6: number, arg7: number, arg8: number, arg9: number): void;
        drawCenteredString(arg0: Internal.Font_, arg1: Internal.Component_, arg2: number, arg3: number, arg4: number): void;
        "drawString(net.minecraft.client.gui.Font,net.minecraft.util.FormattedCharSequence,int,int,int,boolean)"(arg0: Internal.Font_, arg1: Internal.FormattedCharSequence_, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        "drawString(net.minecraft.client.gui.Font,net.minecraft.network.chat.Component,int,int,int,boolean)"(arg0: Internal.Font_, arg1: Internal.Component_, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        "drawString(net.minecraft.client.gui.Font,java.lang.String,int,int,int)"(arg0: Internal.Font_, arg1: string, arg2: number, arg3: number, arg4: number): number;
        "drawCenteredString(net.minecraft.client.gui.Font,net.minecraft.util.FormattedCharSequence,int,int,int)"(arg0: Internal.Font_, arg1: Internal.FormattedCharSequence_, arg2: number, arg3: number, arg4: number): void;
        blit(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): void;
        /**
         * @deprecated
        */
        drawManaged(arg0: Internal.Runnable_): void;
        blit(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        hashCode(): number;
        "fill(net.minecraft.client.renderer.RenderType,int,int,int,int,int)"(arg0: Internal.RenderType_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
        blit(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: Internal.TextureAtlasSprite_): void;
        "drawString(net.minecraft.client.gui.Font,net.minecraft.util.FormattedCharSequence,int,int,int)"(arg0: Internal.Font_, arg1: Internal.FormattedCharSequence_, arg2: number, arg3: number, arg4: number): number;
        drawString(arg0: Internal.Font_, arg1: string, arg2: number, arg3: number, arg4: number): number;
        blitNineSliced(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): void;
        drawString(arg0: Internal.Font_, arg1: string, arg2: number, arg3: number, arg4: number, arg5: boolean): number;
        equals(arg0: any): boolean;
        blitInscribed(arg0: ResourceLocation_, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): void;
        get class(): typeof any
        static readonly MAX_GUI_Z: (10000.0) & (number);
        tooltipStack: Internal.ItemStack;
        static readonly MIN_GUI_Z: (-10000.0) & (number);
    }
    type GuiGraphics_ = GuiGraphics;
    class SharedSuggestionProvider$ElementSuggestionType extends Internal.Enum<Internal.SharedSuggestionProvider$ElementSuggestionType> {
        static valueOf<T extends Internal.Enum<T>>(arg0: T, arg1: string): T;
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        shouldSuggestElements(): boolean;
        shouldSuggestTags(): boolean;
        notify(): void;
        static valueOf(arg0: string): Internal.SharedSuggestionProvider$ElementSuggestionType;
        wait(arg0: number, arg1: number): void;
        compareTo(arg0: any): number;
        describeConstable(): Internal.Optional<Internal.Enum$EnumDesc<Internal.SharedSuggestionProvider$ElementSuggestionType>>;
        name(): string;
        hashCode(): number;
        "compareTo(net.minecraft.commands.SharedSuggestionProvider$ElementSuggestionType)"(arg0: Internal.SharedSuggestionProvider$ElementSuggestionType_): number;
        ordinal(): number;
        wait(): void;
        static values(): Internal.SharedSuggestionProvider$ElementSuggestionType[];
        wait(arg0: number): void;
        compareTo(arg0: Internal.SharedSuggestionProvider$ElementSuggestionType_): number;
        "compareTo(java.lang.Object)"(arg0: any): number;
        equals(arg0: any): boolean;
        getDeclaringClass(): typeof Internal.SharedSuggestionProvider$ElementSuggestionType;
        get class(): typeof any
        get declaringClass(): typeof Internal.SharedSuggestionProvider$ElementSuggestionType
        static readonly ALL: (Internal.SharedSuggestionProvider$ElementSuggestionType) & (Internal.SharedSuggestionProvider$ElementSuggestionType);
        static readonly TAGS: (Internal.SharedSuggestionProvider$ElementSuggestionType) & (Internal.SharedSuggestionProvider$ElementSuggestionType);
        static readonly ELEMENTS: (Internal.SharedSuggestionProvider$ElementSuggestionType) & (Internal.SharedSuggestionProvider$ElementSuggestionType);
    }
    type SharedSuggestionProvider$ElementSuggestionType_ = "elements" | "tags" | SharedSuggestionProvider$ElementSuggestionType | "all";
    class ServerFunctionManager {
        constructor(arg0: Internal.MinecraftServer_, arg1: Internal.ServerFunctionLibrary_)
        getFunctionNames(): Internal.Iterable<ResourceLocation>;
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        getCommandLimit(): number;
        notify(): void;
        execute(arg0: Internal.CommandFunction_, arg1: Internal.CommandSourceStack_, arg2: Internal.ServerFunctionManager$TraceCallbacks_): number;
        wait(arg0: number, arg1: number): void;
        tick(): void;
        getTag(arg0: ResourceLocation_): Internal.Collection<Internal.CommandFunction>;
        replaceLibrary(arg0: Internal.ServerFunctionLibrary_): void;
        hashCode(): number;
        getTagNames(): Internal.Iterable<ResourceLocation>;
        getDispatcher(): Internal.CommandDispatcher<Internal.CommandSourceStack>;
        wait(): void;
        execute(arg0: Internal.CommandFunction_, arg1: Internal.CommandSourceStack_): number;
        getGameLoopSender(): Internal.CommandSourceStack;
        wait(arg0: number): void;
        get(arg0: ResourceLocation_): Internal.Optional<Internal.CommandFunction>;
        equals(arg0: any): boolean;
        get functionNames(): Internal.Iterable<ResourceLocation>
        get class(): typeof any
        get commandLimit(): number
        get tagNames(): Internal.Iterable<ResourceLocation>
        get dispatcher(): Internal.CommandDispatcher<Internal.CommandSourceStack>
        get gameLoopSender(): Internal.CommandSourceStack
    }
    type ServerFunctionManager_ = ServerFunctionManager;
    interface DensityFunctions$MarkerOrMarked extends Internal.DensityFunction {
        halfNegative(): Internal.DensityFunction;
        abs(): Internal.DensityFunction;
        abstract maxValue(): number;
        codec(): Internal.KeyDispatchDataCodec<Internal.DensityFunction>;
        squeeze(): Internal.DensityFunction;
        abstract compute(arg0: Internal.DensityFunction$FunctionContext_): number;
        square(): Internal.DensityFunction;
        mapAll(arg0: Internal.DensityFunction$Visitor_): Internal.DensityFunction;
        clamp(arg0: number, arg1: number): Internal.DensityFunction;
        abstract wrapped(): Internal.DensityFunction;
        quarterNegative(): Internal.DensityFunction;
        abstract type(): Internal.DensityFunctions$Marker$Type;
        cube(): Internal.DensityFunction;
        abstract fillArray(arg0: number[], arg1: Internal.DensityFunction$ContextProvider_): void;
        abstract minValue(): number;
    }
    type DensityFunctions$MarkerOrMarked_ = DensityFunctions$MarkerOrMarked;
    interface EntityBlock {
        getListener<T extends Internal.BlockEntity>(arg0: Internal.ServerLevel_, arg1: T): Internal.GameEventListener;
        abstract newBlockEntity(arg0: BlockPos_, arg1: Internal.BlockState_): Internal.BlockEntity;
        getTicker<T extends Internal.BlockEntity>(arg0: Internal.Level_, arg1: Internal.BlockState_, arg2: Internal.BlockEntityType_<T>): Internal.BlockEntityTicker<T>;
        (arg0: BlockPos, arg1: Internal.BlockState): Internal.BlockEntity_;
    }
    type EntityBlock_ = ((arg0: BlockPos, arg1: Internal.BlockState)=> Internal.BlockEntity_) | EntityBlock;
    class ButtonBlockBuilder extends Internal.ShapedBlockBuilder {
        constructor(i: ResourceLocation_)
        /**
         * Bounces entities that land on this block by bounciness * their fall velocity.
         * Do not make bounciness negative, as that is a recipe for a long and laggy trip to the void
        */
        bounciness(bounciness: number): Internal.BlockBuilder;
        /**
         * Note block instrument.
        */
        instrument(i: Internal.NoteBlockInstrument_): Internal.BlockBuilder;
        createAdditionalObjects(): void;
        /**
         * Tags the item with the given tag.
        */
        tagItem(tag: ResourceLocation_): Internal.BlockBuilder;
        /**
         * Sets the translation key for this object, e.g. `block.minecraft.stone`.
        */
        translationKey(key: string): Internal.BuilderBase<Internal.Block>;
        createObject(): any;
        sandSoundType(): Internal.BlockBuilder;
        /**
         * Set the shape of the block.
        */
        box(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number): Internal.BlockBuilder;
        get(): Internal.Block;
        behaviour(wt: string): this;
        getRegistryType(): Internal.RegistryInfo<any>;
        textureAll(tex: string): Internal.BlockBuilder;
        /**
         * Makes displayName() override language files.
        */
        formattedDisplayName(): Internal.BuilderBase<Internal.Block>;
        arrowsCanPress(b: boolean): this;
        /**
         * Sets the block's map color dynamically per block state. If unset, defaults to NONE.
        */
        dynamicMapColor(m: Internal.Function_<Internal.BlockState, any>): Internal.BlockBuilder;
        /**
         * Tags both the block and the item with the given tag.
        */
        tagBoth(tag: ResourceLocation_): Internal.BlockBuilder;
        /**
         * Makes the block unbreakable.
        */
        unbreakable(): Internal.BlockBuilder;
        /**
         * Sets random tick callback for this black.
        */
        randomTick(randomTickCallback: Internal.Consumer_<Internal.RandomTickCallbackJS>): Internal.BlockBuilder;
        /**
         * Sets the light level of the block. Defaults to 0 (no light).
        */
        lightLevel(light: number): Internal.BlockBuilder;
        /**
         * Combined method of formattedDisplayName().displayName(name).
        */
        formattedDisplayName(name: Internal.Component_): Internal.BuilderBase<Internal.Block>;
        /**
         * Sets the display name for this object, e.g. `Stone`.
         * 
         * This will be overridden by a lang file if it exists.
        */
        displayName(name: Internal.Component_): Internal.BuilderBase<Internal.Block>;
        static createShape(boxes: Internal.List_<Internal.AABB>): Internal.VoxelShape;
        /**
         * Makes the block not be solid.
        */
        notSolid(): Internal.BlockBuilder;
        generateLang(lang: Internal.LangEventJS_): void;
        /**
         * Clears all drops for the block.
        */
        noDrops(): Internal.BlockBuilder;
        getClass(): typeof any;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        setWaterlogged(waterlogged: boolean): Internal.BlockBuilder;
        createProperties(): Internal.BlockBehaviour$Properties;
        grassSoundType(): Internal.BlockBuilder;
        /**
         * Sets the block's sound type. Defaults to wood.
        */
        soundType(m: SoundType_): Internal.BlockBuilder;
        "transformObject(java.lang.Object)"(arg0: any): any;
        /**
         * Set the callback used for determining how the block rotates
        */
        rotateState(callbackJS: Internal.Consumer_<Internal.BlockStateRotateCallbackJS>): Internal.BlockBuilder;
        /**
         * Set the callback used for right-clicking on the block
        */
        rightClick(callbackJS: Internal.Consumer_<Internal.BlockRightClickedEventJS>): Internal.BlockBuilder;
        /**
         * Makes the block require a tool to have drops when broken.
        */
        requiresTool(f: boolean): Internal.BlockBuilder;
        ticksToStayPressed(t: number): this;
        /**
         * Sets the hardness of the block. Defaults to 1.5.
         * 
         * Setting this to -1 will make the block unbreakable like bedrock.
        */
        hardness(h: number): Internal.BlockBuilder;
        /**
         * Creates a Block Entity for this block
        */
        blockEntity(callback: Internal.Consumer_<Internal.BlockEntityInfo>): Internal.BlockBuilder;
        /**
         * Set the block to have no corresponding item.
        */
        noItem(): Internal.BlockBuilder;
        transformObject(arg0: any): any;
        /**
         * Set the callback used for determining how the block is mirrored
        */
        mirrorState(callbackJS: Internal.Consumer_<Internal.BlockStateMirrorCallbackJS>): Internal.BlockBuilder;
        /**
         * Set how slippery the block is.
        */
        slipperiness(f: number): Internal.BlockBuilder;
        toString(): string;
        woodSoundType(): Internal.BlockBuilder;
        notifyAll(): void;
        transformObject(obj: Internal.Block_): Internal.Block;
        /**
         * Tags both the block and the item with the given tag.
        */
        tag(tag: ResourceLocation_): Internal.BlockBuilder;
        /**
         * Set how this block bounces/moves entities that land on top of this. Do not use this to modify the block, use fallOn instead!
         * Use ctx.bounce(height) or ctx.setVelocity(x, y, z) to change the entities velocity.
        */
        afterFallenOn(callbackJS: Internal.Consumer_<Internal.AfterEntityFallenOnBlockCallbackJS>): Internal.BlockBuilder;
        /**
         * Makes the block suffocating.
        */
        suffocating(b: boolean): Internal.BlockBuilder;
        /**
         * Set the color of a specific layer of the block.
        */
        color(index: number, color: Internal.BlockTintFunction_): Internal.BlockBuilder;
        wait(arg0: number): void;
        /**
         * Set how fast you can walk on the block.
         * 
         * Any value above 1 will make you walk insanely fast as your speed is multiplied by this value each tick.
         * 
         * Recommended values are between 0.1 and 1, useful for mimicking soul sand or ice.
        */
        speedFactor(f: number): Internal.BlockBuilder;
        cropSoundType(): Internal.BlockBuilder;
        newID(pre: string, post: string): ResourceLocation;
        "transformObject(net.minecraft.world.level.block.Block)"(obj: Internal.Block_): Internal.Block;
        /**
         * Set what happens when an entity falls on the block. Do not use this for moving them, use bounce instead!
        */
        fallenOn(callbackJS: Internal.Consumer_<Internal.EntityFallenOnBlockCallbackJS>): Internal.BlockBuilder;
        /**
         * Set the block's model.
        */
        model(m: string): Internal.BlockBuilder;
        getTranslationKeyGroup(): string;
        notify(): void;
        /**
         * Makes the block a redstone conductor.
        */
        redstoneConductor(b: boolean): Internal.BlockBuilder;
        noSoundType(): Internal.BlockBuilder;
        /**
         * Modifies the block's item representation.
        */
        item(i: Internal.Consumer_<Internal.BlockItemBuilder>): Internal.BlockBuilder;
        /**
         * Set the default state of the block.
        */
        defaultState(callbackJS: Internal.Consumer_<Internal.BlockStateModifyCallbackJS>): Internal.BlockBuilder;
        /**
         * Set what happens when an entity steps on the block
         * This is called every tick for every entity standing on the block, so be careful what you do here.
        */
        steppedOn(callbackJS: Internal.Consumer_<Internal.EntitySteppedOnBlockCallbackJS>): Internal.BlockBuilder;
        /**
         * Helper method for setting the render type of the block to `translucent` correctly.
        */
        defaultTranslucent(): Internal.BlockBuilder;
        /**
         * Makes the block view blocking.
        */
        viewBlocking(b: boolean): Internal.BlockBuilder;
        /**
         * Add a blockstate property to the block.
         * 
         * For example, facing, lit, etc.
        */
        property(property: Internal.Property_<any>): Internal.BlockBuilder;
        /**
         * Sets the blast resistance of the block. Defaults to 3.
        */
        resistance(r: number): Internal.BlockBuilder;
        gravelSoundType(): Internal.BlockBuilder;
        getBuilderTranslationKey(): string;
        /**
         * Set the shape of the block.
        */
        box(x0: number, y0: number, z0: number, x1: number, y1: number, z1: number, scale16: boolean): Internal.BlockBuilder;
        /**
         * Set the callback for determining the blocks state when placed.
        */
        placementState(callbackJS: Internal.Consumer_<Internal.BlockStateModifyPlacementCallbackJS>): Internal.BlockBuilder;
        "behaviour(java.lang.String)"(wt: string): this;
        /**
         * Set if the block can be replaced by something else.
        */
        canBeReplaced(callbackJS: Internal.Predicate_<Internal.CanBeReplacedCallbackJS>): Internal.BlockBuilder;
        wait(): void;
        /**
         * Set how this block reacts after an explosion. Note the block has already been destroyed at this point
        */
        exploded(callbackJS: Internal.Consumer_<Internal.BlockExplodedCallbackJS>): Internal.BlockBuilder;
        /**
         * Sets the block's map color. Defaults to NONE.
        */
        mapColor(m: Internal.MapColor_): Internal.BlockBuilder;
        /**
         * Sets the render type of the block. Can be `cutout`, `cutout_mipped`, `translucent`, or `basic`.
        */
        renderType(l: string): Internal.BlockBuilder;
        stoneSoundType(): Internal.BlockBuilder;
        behaviour(wt: Internal.BlockSetType_): this;
        /**
         * Makes the block can be waterlogged.
        */
        waterlogged(): Internal.BlockBuilder;
        wait(arg0: number, arg1: number): void;
        /**
         * Set how high you can jump on the block.
        */
        jumpFactor(f: number): Internal.BlockBuilder;
        /**
         * Set the color of a specific layer of the block.
        */
        color(color: Internal.BlockTintFunction_): Internal.BlockBuilder;
        generateDataJsons(generator: Internal.DataJsonGenerator_): void;
        /**
         * Texture a specific texture key of the block.
        */
        texture(id: string, tex: string): Internal.BlockBuilder;
        /**
         * Texture a specific side of the block.
        */
        textureSide(direction: Internal.Direction_, tex: string): Internal.BlockBuilder;
        /**
         * Checks if the block can be waterlogged.
        */
        canBeWaterlogged(): boolean;
        glassSoundType(): Internal.BlockBuilder;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getWaterlogged(): boolean;
        /**
         * Tags the block with the given tag.
        */
        tagBlock(tag: ResourceLocation_): Internal.BlockBuilder;
        /**
         * Sets the opacity of the block. Opaque blocks do not let light through.
        */
        opaque(o: boolean): Internal.BlockBuilder;
        "behaviour(net.minecraft.world.level.block.state.properties.BlockSetType)"(wt: Internal.BlockSetType_): this;
        /**
         * Makes mobs not spawn on the block.
        */
        noValidSpawns(b: boolean): Internal.BlockBuilder;
        material(material: string): Internal.BlockBuilder;
        /**
         * Makes the block transparent.
        */
        transparent(b: boolean): Internal.BlockBuilder;
        /**
         * Helper method for setting the render type of the block to `cutout` correctly.
        */
        defaultCutout(): Internal.BlockBuilder;
        /**
         * Sets the block should be a full block or not, like cactus or doors.
        */
        fullBlock(f: boolean): Internal.BlockBuilder;
        /**
         * Makes the block not collide with entities.
        */
        noCollision(): Internal.BlockBuilder;
        hashCode(): number;
        /**
         * Makes the block require a tool to have drops when broken.
        */
        requiresTool(): Internal.BlockBuilder;
        equals(arg0: any): boolean;
        generateAssetJsons(generator: Internal.AssetJsonGenerator_): void;
        get registryType(): Internal.RegistryInfo<any>
        get class(): typeof any
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        set waterlogged(waterlogged: boolean)
        get translationKeyGroup(): string
        get builderTranslationKey(): string
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        get waterlogged(): boolean
    }
    type ButtonBlockBuilder_ = ButtonBlockBuilder;
    interface BlockEntityRenderer <T extends Internal.BlockEntity> {
        getViewDistance(): number;
        shouldRender(arg0: T, arg1: Vec3d_): boolean;
        abstract render(arg0: T, arg1: number, arg2: Internal.PoseStack_, arg3: Internal.MultiBufferSource_, arg4: number, arg5: number): void;
        shouldRenderOffScreen(arg0: T): boolean;
        get viewDistance(): number
        (arg0: T, arg1: number, arg2: Internal.PoseStack, arg3: Internal.MultiBufferSource, arg4: number, arg5: number): void;
    }
    type BlockEntityRenderer_<T extends Internal.BlockEntity> = BlockEntityRenderer<T> | ((arg0: T, arg1: number, arg2: Internal.PoseStack, arg3: Internal.MultiBufferSource, arg4: number, arg5: number)=> void);
    class AttributeSupplier$Builder {
        constructor()
        constructor(arg0: Internal.AttributeSupplier_)
        getClass(): typeof any;
        toString(): string;
        build(): Internal.AttributeSupplier;
        notifyAll(): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        hasAttribute(arg0: Internal.Attribute_): boolean;
        add(arg0: Internal.Attribute_, arg1: number): this;
        hashCode(): number;
        wait(): void;
        wait(arg0: number): void;
        combine(arg0: Internal.AttributeSupplier$Builder_): void;
        equals(arg0: any): boolean;
        add(arg0: Internal.Attribute_): this;
        get class(): typeof any
    }
    type AttributeSupplier$Builder_ = AttributeSupplier$Builder;
    interface FloatIterator extends Internal.PrimitiveIterator<number, Internal.FloatConsumer> {
        "forEachRemaining(it.unimi.dsi.fastutil.floats.FloatConsumer)"(arg0: Internal.FloatConsumer_): void;
        forEachRemaining(arg0: any): void;
        "forEachRemaining(java.util.function.DoubleConsumer)"(arg0: Internal.DoubleConsumer_): void;
        forEachRemaining(arg0: Internal.FloatConsumer_): void;
        /**
         * @deprecated
        */
        next(): any;
        skip(arg0: number): number;
        /**
         * @deprecated
        */
        "forEachRemaining(java.util.function.Consumer)"(arg0: Internal.Consumer_<number>): void;
        /**
         * @deprecated
        */
        forEachRemaining(arg0: Internal.Consumer_<number>): void;
        remove(): void;
        abstract nextFloat(): number;
        forEachRemaining(arg0: Internal.DoubleConsumer_): void;
        "forEachRemaining(java.lang.Object)"(arg0: any): void;
        abstract hasNext(): boolean;
    }
    type FloatIterator_ = FloatIterator;
    class ChannelOutboundBuffer {
        isWritable(): boolean;
        getClass(): typeof any;
        remove(): boolean;
        forEachFlushedMessage(arg0: Internal.ChannelOutboundBuffer$MessageProcessor_): void;
        nioBuffers(arg0: number, arg1: number): Internal.ByteBuffer[];
        isEmpty(): boolean;
        progress(arg0: number): void;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        nioBufferCount(): number;
        nioBuffers(): Internal.ByteBuffer[];
        bytesBeforeWritable(): number;
        totalPendingWriteBytes(): number;
        toString(): string;
        bytesBeforeUnwritable(): number;
        notifyAll(): void;
        addMessage(arg0: any, arg1: number, arg2: Internal.ChannelPromise_): void;
        removeBytes(arg0: number): void;
        setUserDefinedWritability(arg0: number, arg1: boolean): void;
        size(): number;
        currentProgress(): number;
        hashCode(): number;
        /**
         * @deprecated
        */
        recycle(): void;
        current(): any;
        nioBufferSize(): number;
        addFlush(): void;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        remove(arg0: Internal.Throwable_): boolean;
        getUserDefinedWritability(arg0: number): boolean;
        get writable(): boolean
        get class(): typeof any
        get empty(): boolean
    }
    type ChannelOutboundBuffer_ = ChannelOutboundBuffer;
    interface ParticleProvider <T extends Internal.ParticleOptions> {
        abstract createParticle(arg0: T, arg1: Internal.ClientLevel_, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.Particle;
        (arg0: T, arg1: Internal.ClientLevel, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): Internal.Particle_;
    }
    type ParticleProvider_<T extends Internal.ParticleOptions> = ((arg0: T, arg1: Internal.ClientLevel, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number)=> Internal.Particle_) | ParticleProvider<T>;
    class BiasedToBottomHeight extends Internal.HeightProvider {
        getClass(): typeof any;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        sample(arg0: Internal.RandomSource_, arg1: Internal.WorldGenerationContext_): number;
        equals(arg0: any): boolean;
        notify(): void;
        static of(arg0: Internal.VerticalAnchor_, arg1: Internal.VerticalAnchor_, arg2: number): Internal.BiasedToBottomHeight;
        wait(arg0: number, arg1: number): void;
        getType(): Internal.HeightProviderType<any>;
        get class(): typeof any
        get type(): Internal.HeightProviderType<any>
        static readonly CODEC: Internal.Codec<Internal.BiasedToBottomHeight>;
    }
    type BiasedToBottomHeight_ = BiasedToBottomHeight;
    class StringArgumentSerializer$Template implements Internal.ArgumentTypeInfo$Template<Internal.StringArgumentType> {
        constructor(arg0: Internal.StringArgumentSerializer_, arg1: Internal.StringArgumentType$StringType_)
        getClass(): typeof any;
        instantiate(arg0: Internal.CommandBuildContext_): Internal.ArgumentType<any>;
        hashCode(): number;
        toString(): string;
        wait(): void;
        notifyAll(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        type(): Internal.ArgumentTypeInfo<Internal.StringArgumentType, any>;
        get class(): typeof any
    }
    type StringArgumentSerializer$Template_ = StringArgumentSerializer$Template;
    class BiomeGenerationSettings$PlainBuilder {
        constructor()
        addFeature(arg0: Internal.GenerationStep$Decoration_, arg1: Internal.Holder_<Internal.PlacedFeature>): this;
        getClass(): typeof any;
        toString(): string;
        notifyAll(): void;
        addFeature(arg0: number, arg1: Internal.Holder_<Internal.PlacedFeature>): this;
        notify(): void;
        wait(arg0: number, arg1: number): void;
        "addFeature(int,net.minecraft.core.Holder)"(arg0: number, arg1: Internal.Holder_<Internal.PlacedFeature>): this;
        hashCode(): number;
        build(): Internal.BiomeGenerationSettings;
        addCarver(arg0: Internal.GenerationStep$Carving_, arg1: Internal.Holder_<Internal.ConfiguredWorldCarver<any>>): this;
        wait(): void;
        wait(arg0: number): void;
        equals(arg0: any): boolean;
        "addFeature(net.minecraft.world.level.levelgen.GenerationStep$Decoration,net.minecraft.core.Holder)"(arg0: Internal.GenerationStep$Decoration_, arg1: Internal.Holder_<Internal.PlacedFeature>): this;
        get class(): typeof any
        readonly features: Internal.List<Internal.List<Internal.Holder<Internal.PlacedFeature>>>;
    }
    type BiomeGenerationSettings$PlainBuilder_ = BiomeGenerationSettings$PlainBuilder;
    class EnderDragonPart extends Internal.PartEntity<Internal.EnderDragon> {
        constructor(arg0: Internal.EnderDragon_, arg1: string, arg2: number, arg3: number)
        isInWall(): boolean;
        getAllSlots(): Internal.Iterable<Internal.ItemStack>;
        getUpVector(arg0: number): Vec3d;
        gameEvent(arg0: Internal.GameEvent_, arg1: Internal.Entity_): void;
        remove(arg0: Internal.Entity$RemovalReason_): void;
        getBlockZ(): number;
        isSuppressingBounce(): boolean;
        dampensVibrations(): boolean;
        isSilent(): boolean;
        "playSound(net.minecraft.sounds.SoundEvent)"(arg0: Internal.SoundEvent_): void;
        getPitch(): number;
        isOnFire(): boolean;
        getPassengersAndSelf(): Internal.Stream<Internal.Entity>;
        rotate(arg0: Internal.Rotation_): number;
        getPositionCodec(): Internal.VecDeltaCodec;
        getPickedResult(arg0: Internal.HitResult_): Internal.ItemStack;
        /**
         * @deprecated
        */
        updateFluidHeightAndDoFluidPushing(arg0: Internal.TagKey_<Internal.Fluid>, arg1: number): boolean;
        setMaxUpStep(arg0: number): void;
        setPosition(x: number, y: number, z: number): void;
        runCommandSilent(command: string): number;
        chunkPosition(): Internal.ChunkPos;
        rayTrace(distance: number, fluids: boolean): Internal.RayTraceResultJS;
        gameEvent(arg0: Internal.GameEvent_): void;
        alwaysAccepts(): boolean;
        isShiftKeyDown(): boolean;
        isInFluidType(arg0: Internal.FluidState_): boolean;
        setUUID(arg0: Internal.UUID_): void;
        checkBelowWorld(): void;
        isVisuallyCrawling(): boolean;
        shouldUpdateFluidWhileBoating(arg0: Internal.FluidState_, arg1: Internal.Boat_): boolean;
        setMotionZ(z: number): void;
        "deserializeNBT(net.minecraft.nbt.Tag)"(arg0: Internal.Tag_): void;
        ignoreExplosion(): boolean;
        canFreeze(): boolean;
        teleportRelative(arg0: number, arg1: number, arg2: number): void;
        getBlockY(): number;
        isSpectator(): boolean;
        isInWaterOrBubble(): boolean;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        updateFluidHeightAndDoFluidPushing(): void;
        spawnAtLocation(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        getPersistentData(): Internal.CompoundTag;
        getPortalCooldown(): number;
        getItem(): Internal.ItemStack;
        getRandomZ(arg0: number): number;
        causeFallDamage(arg0: number, arg1: number, arg2: DamageSource_): boolean;
        setRemoved(arg0: Internal.Entity$RemovalReason_): void;
        getPosition(arg0: number): Vec3d;
        getDistanceSq(arg0: number, arg1: number, arg2: number): number;
        isInWaterRainOrBubble(): boolean;
        getRemovalReason(): Internal.Entity$RemovalReason;
        wait(arg0: number): void;
        isIgnoringBlockTriggers(): boolean;
        getHandHoldingItemAngle(arg0: Internal.Item_): Vec3d;
        canUpdate(arg0: boolean): void;
        getIndirectPassengers(): Internal.Iterable<Internal.Entity>;
        getEyeInFluidType(): Internal.FluidType;
        distanceToSqr(arg0: Vec3d_): number;
        resetFallDistance(): void;
        canSprint(): boolean;
        blockPosition(): BlockPos;
        isSteppingCarefully(): boolean;
        setBoundingBox(arg0: Internal.AABB_): void;
        isAmbientCreature(): boolean;
        getSoundFromFluidType(arg0: Internal.FluidType_, arg1: Internal.SoundAction_): Internal.SoundEvent;
        "spawnAtLocation(net.minecraft.world.item.ItemStack,float)"(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        getBlockX(): number;
        /**
         * @deprecated
        */
        getLightLevelDependentMagicValue(): number;
        getEncodeId(): string;
        getY(arg0: number): number;
        getBlock(): Internal.BlockContainerJS;
        getNbt(): Internal.CompoundTag;
        setInvisible(arg0: boolean): void;
        invalidateCaps(): void;
        getName(): Internal.Component;
        onGround(): boolean;
        getControlledVehicle(): Internal.Entity;
        isOnSameTeam(arg0: Internal.Entity_): boolean;
        attack(arg0: DamageSource_, arg1: number): boolean;
        onInsideBubbleColumn(arg0: boolean): void;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        tick(): void;
        getEyePosition(): Vec3d;
        getEyeHeight(): number;
        hasPassenger(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getYaw(): number;
        isPushedByFluid(arg0: Internal.FluidType_): boolean;
        hasPermissions(arg0: number): boolean;
        getCapability<T>(arg0: Internal.Capability_<T>, arg1: Internal.Direction_): Internal.LazyOptional<T>;
        teleportTo(dimension: ResourceLocation_, x: number, y: number, z: number, yaw: number, pitch: number): void;
        setCustomNameVisible(arg0: boolean): void;
        isAlliedTo(arg0: Internal.Team_): boolean;
        getRemainingFireTicks(): number;
        getControllingPassenger(): Internal.LivingEntity;
        getScriptType(): Internal.ScriptType;
        onlyOpCanSetNbt(): boolean;
        startRiding(arg0: Internal.Entity_): boolean;
        saveWithoutId(arg0: Internal.CompoundTag_): Internal.CompoundTag;
        getForward(): Vec3d;
        serializeNBT(): Internal.Tag;
        fireImmune(): boolean;
        addMotion(arg0: number, arg1: number, arg2: number): void;
        getMaxFallDistance(): number;
        getZ(arg0: number): number;
        hasCustomOutlineRendering(arg0: Player_): boolean;
        getId(): number;
        canBeHitByProjectile(): boolean;
        getTicksFrozen(): number;
        handler$zcl000$isInvisibleTo(arg0: Player_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getRandomX(arg0: number): number;
        getEyeY(): number;
        spawnAtLocation(arg0: Internal.ItemStack_, arg1: number): Internal.ItemEntity;
        pick(arg0: number, arg1: number, arg2: boolean): Internal.HitResult;
        setStatusMessage(message: Internal.Component_): void;
        getBoundingBox(): Internal.AABB;
        isInWaterOrRain(): boolean;
        isDescending(): boolean;
        setItemSlot(arg0: Internal.EquipmentSlot_, arg1: Internal.ItemStack_): void;
        getYHeadRot(): number;
        equals(arg0: any): boolean;
        getViewYRot(arg0: number): number;
        dismountsUnderwater(): boolean;
        addTag(arg0: string): boolean;
        playerTouch(arg0: Player_): void;
        getAddEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>;
        getEyeHeight(arg0: Internal.Pose_): number;
        syncPacketPositionCodec(arg0: number, arg1: number, arg2: number): void;
        getTeam(): Internal.Team;
        shouldRenderAtSqrDistance(arg0: number): boolean;
        damageSources(): Internal.DamageSources;
        setTicksFrozen(arg0: number): void;
        recreateFromPacket(arg0: Internal.ClientboundAddEntityPacket_): void;
        getMyRidingOffset(): number;
        canStartSwimming(): boolean;
        dismountTo(arg0: number, arg1: number, arg2: number): void;
        setDeltaMovement(arg0: Vec3d_): void;
        getLeashOffset(arg0: number): Vec3d;
        hasCustomName(): boolean;
        isLiving(): boolean;
        getX(): number;
        isGlowing(): boolean;
        "isInFluidType(net.minecraft.world.level.material.FluidState)"(arg0: Internal.FluidState_): boolean;
        isVehicle(): boolean;
        getLeashOffset(): Vec3d;
        isAttackable(): boolean;
        spawnAtLocation(arg0: Internal.ItemStack_): Internal.ItemEntity;
        mergeNbt(tag: Internal.CompoundTag_): Internal.Entity;
        thunderHit(arg0: Internal.ServerLevel_, arg1: Internal.LightningBolt_): void;
        setIsInPowderSnow(arg0: boolean): void;
        doEnchantDamageEffects(arg0: Internal.LivingEntity_, arg1: Internal.Entity_): void;
        setCustomName(arg0: Internal.Component_): void;
        getSlot(arg0: number): Internal.SlotAccess;
        "deserializeNBT(net.minecraft.nbt.CompoundTag)"(arg0: Internal.CompoundTag_): void;
        getTeamId(): string;
        stopSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        canBeRiddenUnderFluidType(arg0: Internal.FluidType_, arg1: Internal.Entity_): boolean;
        handler$zcl000$setTicksFrozen(arg0: number, arg1: Internal.CallbackInfo_): void;
        isUnderWater(): boolean;
        stopRiding(): void;
        isCustomNameVisible(): boolean;
        isSupportedBy(arg0: BlockPos_): boolean;
        getPistonPushReaction(): Internal.PushReaction;
        getX(arg0: number): number;
        shouldRiderSit(): boolean;
        lookAt(arg0: Internal.EntityAnchorArgument$Anchor_, arg1: Vec3d_): void;
        captureDrops(arg0: Internal.Collection_<Internal.ItemEntity>): Internal.Collection<Internal.ItemEntity>;
        rayTrace(distance: number): Internal.RayTraceResultJS;
        getDeltaMovement(): Vec3d;
        isInFluidType(arg0: Internal.FluidType_): boolean;
        getFluidMotionScale(arg0: Internal.FluidType_): number;
        getMotionX(): number;
        "onSyncedDataUpdated(java.util.List)"(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        hasPassenger(arg0: Internal.Entity_): boolean;
        hasIndirectPassenger(arg0: Internal.Entity_): boolean;
        getEntityData(): Internal.SynchedEntityData;
        setSecondsOnFire(arg0: number): void;
        moveTo(arg0: number, arg1: number, arg2: number): void;
        "getDisplayName()"(): Internal.Component;
        handleInsidePortal(arg0: BlockPos_): void;
        setMotion(arg0: number, arg1: number, arg2: number): void;
        playSound(arg0: Internal.SoundEvent_): void;
        updateFluidHeightAndDoFluidPushing(arg0: Internal.Predicate_<Internal.FluidState>): void;
        absMoveTo(arg0: number, arg1: number, arg2: number): void;
        isOnRails(): boolean;
        restoreFrom(arg0: Internal.Entity_): void;
        getDimensionChangingDelay(): number;
        isPeacefulCreature(): boolean;
        setOnGround(arg0: boolean): void;
        setPos(arg0: number, arg1: number, arg2: number): void;
        setYaw(arg0: number): void;
        getPickRadius(): number;
        notify(): void;
        getFirstTick(): boolean;
        getVehicle(): Internal.Entity;
        isEffectiveAi(): boolean;
        startRiding(arg0: Internal.Entity_, arg1: boolean): boolean;
        getStringUuid(): string;
        isRemoved(): boolean;
        setSwimming(arg0: boolean): void;
        canHydrateInFluidType(arg0: Internal.FluidType_): boolean;
        teleportToWithTicket(arg0: number, arg1: number, arg2: number): void;
        fillCrashReportCategory(arg0: Internal.CrashReportCategory_): void;
        getRotationVector(): Internal.Vec2;
        refreshDimensions(): void;
        self(): Internal.Entity;
        isSprinting(): boolean;
        "spawnAtLocation(net.minecraft.world.level.ItemLike)"(arg0: Internal.ItemLike_): Internal.ItemEntity;
        getMotionY(): number;
        canCollideWith(arg0: Internal.Entity_): boolean;
        getEyePosition(arg0: number): Vec3d;
        setShiftKeyDown(arg0: boolean): void;
        getPassengers(): Internal.EntityArrayList;
        getBlockExplosionResistance(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: Internal.FluidState_, arg5: number): number;
        getFluidFallDistanceModifier(arg0: Internal.FluidType_): number;
        getMaxHeightFluidType(): Internal.FluidType;
        getZ(): number;
        canSpawnSprintParticle(): boolean;
        "moveTo(net.minecraft.core.BlockPos,float,float)"(arg0: BlockPos_, arg1: number, arg2: number): void;
        teleportTo(arg0: number, arg1: number, arg2: number): void;
        getServer(): Internal.MinecraftServer;
        getSelfAndPassengers(): Internal.Stream<Internal.Entity>;
        moveRelative(arg0: number, arg1: Vec3d_): void;
        isAddedToWorld(): boolean;
        getFirstPassenger(): Internal.Entity;
        saveAsPassenger(arg0: Internal.CompoundTag_): boolean;
        interact(arg0: Player_, arg1: Internal.InteractionHand_): Internal.InteractionResult;
        getDismountLocationForPassenger(arg0: Internal.LivingEntity_): Vec3d;
        checkSlowFallDistance(): void;
        getSoundSource(): Internal.SoundSource;
        getPose(): Internal.Pose;
        touchingUnloadedChunk(): boolean;
        getLookAngle(): Vec3d;
        setPositionAndRotation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        getMotionZ(): number;
        removeVehicle(): void;
        isInvisible(): boolean;
        is(arg0: Internal.Entity_): boolean;
        setZ(z: number): void;
        getY(): number;
        ejectPassengers(): void;
        hashCode(): number;
        deserializeNBT(arg0: Internal.CompoundTag_): void;
        getProfile(): Internal.GameProfile;
        static setViewScale(arg0: number): void;
        setLevelCallback(arg0: Internal.EntityInLevelCallback_): void;
        showVehicleHealth(): boolean;
        getDistance(pos: BlockPos_): number;
        playSound(arg0: Internal.SoundEvent_, arg1: number, arg2: number): void;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityDispatcher)"(arg0: Internal.CapabilityDispatcher_): boolean;
        startSeenByPlayer(arg0: Internal.ServerPlayer_): void;
        isOnScoreboardTeam(teamId: string): boolean;
        /**
         * @deprecated
        */
        isPushedByFluid(): boolean;
        position(): Vec3d;
        displayFireAnimation(): boolean;
        turn(arg0: number, arg1: number): void;
        getAirSupply(): number;
        getRopeHoldPosition(arg0: number): Vec3d;
        copyPosition(arg0: Internal.Entity_): void;
        onAddedToWorld(): void;
        "hasPassenger(net.minecraft.world.entity.Entity)"(arg0: Internal.Entity_): boolean;
        isCrouching(): boolean;
        moveTo(arg0: BlockPos_, arg1: number, arg2: number): void;
        isPlayer(): boolean;
        isAnimal(): boolean;
        getMotionDirection(): Internal.Direction;
        canBeCollidedWith(): boolean;
        setY(y: number): void;
        getFeetBlockState(): Internal.BlockState;
        lavaHurt(): void;
        handleDamageEvent(arg0: DamageSource_): void;
        changeDimension(arg0: Internal.ServerLevel_, arg1: Internal.ITeleporter_): Internal.Entity;
        canChangeDimensions(): boolean;
        getCommandSenderWorld(): Internal.Level;
        positionRider(arg0: Internal.Entity_): void;
        broadcastToPlayer(arg0: Internal.ServerPlayer_): boolean;
        baseTick(): void;
        changeDimension(arg0: Internal.ServerLevel_): Internal.Entity;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getEyeHeightAccess(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        getCustomName(): Internal.Component;
        getClass(): typeof any;
        getMaxAirSupply(): number;
        isVisuallySwimming(): boolean;
        canTrample(arg0: Internal.BlockState_, arg1: BlockPos_, arg2: number): boolean;
        attack(hp: number): void;
        canSwimInFluidType(arg0: Internal.FluidType_): boolean;
        getFacing(): Internal.Direction;
        isInFluidType(arg0: Internal.BiPredicate_<Internal.FluidType, number>, arg1: boolean): boolean;
        "hasPassenger(java.util.function.Predicate)"(arg0: Internal.Predicate_<Internal.Entity>): boolean;
        getDimensions(arg0: Internal.Pose_): Internal.EntityDimensions;
        isPassengerOfSameVehicle(arg0: Internal.Entity_): boolean;
        getBoundingBoxForCulling(): Internal.AABB;
        isSwimming(): boolean;
        mayInteract(arg0: Internal.Level_, arg1: BlockPos_): boolean;
        setSprinting(arg0: boolean): void;
        setPortalCooldown(): void;
        setX(x: number): void;
        trackingPosition(): Vec3d;
        getNameTagOffsetY(): number;
        isInvulnerable(): boolean;
        isInLava(): boolean;
        getPortalWaitTime(): number;
        isInWater(): boolean;
        getBlockStateOn(): Internal.BlockState;
        awardKillScore(arg0: Internal.Entity_, arg1: number, arg2: DamageSource_): void;
        getFluidJumpThreshold(): number;
        "setPositionAndRotation(double,double,double,float,float)"(x: number, y: number, z: number, yaw: number, pitch: number): void;
        isInvisibleTo(arg0: Player_): boolean;
        setAirSupply(arg0: number): void;
        getRootVehicle(): Internal.Entity;
        getOnPos(): BlockPos;
        save(arg0: Internal.CompoundTag_): boolean;
        isNoGravity(): boolean;
        getStepHeight(): number;
        acceptsFailure(): boolean;
        setOnGroundWithKnownMovement(arg0: boolean, arg1: Vec3d_): void;
        setOldPosAndRot(): void;
        isFree(arg0: number, arg1: number, arg2: number): boolean;
        updateSwimming(): void;
        "moveTo(double,double,double)"(arg0: number, arg1: number, arg2: number): void;
        setRemainingFireTicks(arg0: number): void;
        shouldInformAdmins(): boolean;
        canFluidExtinguish(arg0: Internal.FluidType_): boolean;
        rideTick(): void;
        /**
         * @deprecated
        */
        getOnPosLegacy(): BlockPos;
        setPos(arg0: Vec3d_): void;
        wait(): void;
        getUuid(): Internal.UUID;
        spawn(): void;
        areCapsCompatible(arg0: Internal.CapabilityDispatcher_): boolean;
        teleportTo(arg0: Internal.ServerLevel_, arg1: number, arg2: number, arg3: number, arg4: Internal.Set_<Internal.RelativeMovement>, arg5: number, arg6: number): boolean;
        shouldShowName(): boolean;
        setSilent(arg0: boolean): void;
        getArmorSlots(): Internal.Iterable<Internal.ItemStack>;
        hasExactlyOnePlayerPassenger(): boolean;
        captureDrops(): Internal.Collection<Internal.ItemEntity>;
        kill(): void;
        isOnPortalCooldown(): boolean;
        animateHurt(arg0: number): void;
        setPitch(arg0: number): void;
        isMultipartEntity(): boolean;
        setPosRaw(arg0: number, arg1: number, arg2: number): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getDimensionsForge(arg0: Internal.Pose_): Internal.EntityDimensions;
        handleEntityEvent(arg0: number): void;
        getParts(): Internal.PartEntity<any>[];
        isAlwaysTicking(): boolean;
        interactAt(arg0: Player_, arg1: Vec3d_, arg2: Internal.InteractionHand_): Internal.InteractionResult;
        deserializeNBT(arg0: Internal.Tag_): void;
        lerpTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): void;
        onPassengerTurned(arg0: Internal.Entity_): void;
        revive(): void;
        spawnAtLocation(arg0: Internal.ItemLike_): Internal.ItemEntity;
        getBbWidth(): number;
        isEyeInFluidType(arg0: Internal.FluidType_): boolean;
        getForgePersistentData(): Internal.CompoundTag;
        addDeltaMovement(arg0: Vec3d_): void;
        "spawnAtLocation(net.minecraft.world.level.ItemLike,int)"(arg0: Internal.ItemLike_, arg1: number): Internal.ItemEntity;
        setInvulnerable(arg0: boolean): void;
        "getName()"(): Internal.Component;
        push(arg0: Internal.Entity_): void;
        isInFluidType(): boolean;
        mirror(arg0: Internal.Mirror_): number;
        canUpdate(): boolean;
        getTicksRequiredToFreeze(): number;
        /**
         * @deprecated
        */
        maxUpStep(): number;
        setGlowing(arg0: boolean): void;
        load(arg0: Internal.CompoundTag_): void;
        isAlive(): boolean;
        handler$zdd000$changeGlowOutline(arg0: Internal.CallbackInfoReturnable_<any>): void;
        getBbHeight(): number;
        getUsername(): string;
        move(arg0: Internal.MoverType_, arg1: Vec3d_): void;
        getTags(): Internal.Set<string>;
        getViewVector(arg0: number): Vec3d;
        onRemovedFromWorld(): void;
        getCapability<T>(arg0: Internal.Capability_<T>): Internal.LazyOptional<T>;
        isPickable(): boolean;
        setYHeadRot(arg0: number): void;
        hasControllingPassenger(): boolean;
        closerThan(arg0: Internal.Entity_, arg1: number, arg2: number): boolean;
        absMoveTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
        getParent(): Internal.EnderDragon;
        getPickResult(): Internal.ItemStack;
        getPercentFrozen(): number;
        getRandomY(): number;
        setPortalCooldown(arg0: number): void;
        getDisplayName(): Internal.Component;
        shouldBlockExplode(arg0: Internal.Explosion_, arg1: Internal.BlockGetter_, arg2: BlockPos_, arg3: Internal.BlockState_, arg4: number): boolean;
        hasGlowingTag(): boolean;
        setPosition(block: Internal.BlockContainerJS_): void;
        shouldBeSaved(): boolean;
        getFluidTypeHeight(arg0: Internal.FluidType_): number;
        getViewXRot(arg0: number): number;
        canRiderInteract(): boolean;
        "areCapsCompatible(net.minecraftforge.common.capabilities.CapabilityProvider)"(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        removeTag(arg0: string): boolean;
        setPose(arg0: Internal.Pose_): void;
        /**
         * @deprecated
        */
        getFluidHeight(arg0: Internal.TagKey_<Internal.Fluid>): number;
        static collideBoundingBox(arg0: Internal.Entity_, arg1: Vec3d_, arg2: Internal.AABB_, arg3: Internal.Level_, arg4: Internal.List_<Internal.VoxelShape>): Vec3d;
        getEntityType(): Internal.EntityType<any>;
        isWaterCreature(): boolean;
        toString(): string;
        notifyAll(): void;
        getPassengersRidingOffset(): number;
        "isInFluidType(java.util.function.BiPredicate)"(arg0: Internal.BiPredicate_<Internal.FluidType, number>): boolean;
        distanceToEntitySqr(arg0: Internal.Entity_): number;
        "getServer()"(): Internal.MinecraftServer;
        isFrame(): boolean;
        discard(): void;
        isPushable(): boolean;
        setYBodyRot(arg0: number): void;
        onClientRemoval(): void;
        sendSystemMessage(arg0: Internal.Component_): void;
        acceptsSuccess(): boolean;
        reviveCaps(): void;
        getDistance(x: number, y: number, z: number): number;
        setMotionY(y: number): void;
        setNoGravity(arg0: boolean): void;
        setRotation(yaw: number, pitch: number): void;
        createCommandSourceStack(): Internal.CommandSourceStack;
        isControlledByLocalInstance(): boolean;
        isMonster(): boolean;
        getHorizontalFacing(): Internal.Direction;
        onSyncedDataUpdated(arg0: Internal.List_<Internal.SynchedEntityData$DataValue<any>>): void;
        setId(arg0: number): void;
        getType(): string;
        getLightProbePosition(arg0: number): Vec3d;
        onAboveBubbleCol(arg0: boolean): void;
        "playSound(net.minecraft.sounds.SoundEvent,float,float)"(id: Internal.SoundEvent_, volume: number, pitch: number): void;
        isPassenger(): boolean;
        hasPose(arg0: Internal.Pose_): boolean;
        checkDespawn(): void;
        makeStuckInBlock(arg0: Internal.BlockState_, arg1: Vec3d_): void;
        /**
         * @deprecated
        */
        isEyeInFluid(arg0: Internal.TagKey_<Internal.Fluid>): boolean;
        isInvulnerableTo(arg0: DamageSource_): boolean;
        skipAttackInteraction(arg0: Internal.Entity_): boolean;
        lerpMotion(arg0: number, arg1: number, arg2: number): void;
        shouldRender(arg0: number, arg1: number, arg2: number): boolean;
        onSyncedDataUpdated(arg0: Internal.EntityDataAccessor_<any>): void;
        lerpHeadTo(arg0: number, arg1: number): void;
        static getViewScale(): number;
        setMotionX(x: number): void;
        handler$zcl000$isAlliedTo(arg0: Internal.Entity_, arg1: Internal.CallbackInfoReturnable_<any>): void;
        getHandSlots(): Internal.Iterable<Internal.ItemStack>;
        distanceToEntity(arg0: Internal.Entity_): number;
        getVisualRotationYInDegrees(): number;
        wait(arg0: number, arg1: number): void;
        getTeamColor(): number;
        isDiscrete(): boolean;
        setNbt(nbt: Internal.CompoundTag_): void;
        unRide(): void;
        getLevel(): Internal.Level;
        "spawnAtLocation(net.minecraft.world.item.ItemStack)"(arg0: Internal.ItemStack_): Internal.ItemEntity;
        "isInFluidType(net.minecraftforge.fluids.FluidType)"(arg0: Internal.FluidType_): boolean;
        extinguish(): void;
        updateDynamicGameEventListener(arg0: Internal.BiConsumer_<Internal.DynamicGameEventListener<any>, Internal.ServerLevel>): void;
        moveTo(arg0: Vec3d_): void;
        isColliding(arg0: BlockPos_, arg1: Internal.BlockState_): boolean;
        "onSyncedDataUpdated(net.minecraft.network.syncher.EntityDataAccessor)"(arg0: Internal.EntityDataAccessor_<any>): void;
        areCapsCompatible(arg0: Internal.CapabilityProvider_<Internal.Entity>): boolean;
        extinguishFire(): void;
        /**
         * @deprecated
         * This method is marked to be removed in future!
        */
        getEyeHeightForge(arg0: Internal.Pose_, arg1: Internal.EntityDimensions_): number;
        tell(message: Internal.Component_): void;
        closerThan(arg0: Internal.Entity_, arg1: number): boolean;
        getDistanceSq(pos: BlockPos_): number;
        killedEntity(arg0: Internal.ServerLevel_, arg1: Internal.LivingEntity_): boolean;
        getClassification(arg0: boolean): Internal.MobCategory;
        isFreezing(): boolean;
        isFullyFrozen(): boolean;
        runCommand(command: string): number;
        setSharedFlagOnFire(arg0: boolean): void;
        get inWall(): boolean
        get allSlots(): Internal.Iterable<Internal.ItemStack>
        get blockZ(): number
        get suppressingBounce(): boolean
        get silent(): boolean
        get pitch(): number
        get onFire(): boolean
        get passengersAndSelf(): Internal.Stream<Internal.Entity>
        get positionCodec(): Internal.VecDeltaCodec
        set maxUpStep(arg0: number)
        get shiftKeyDown(): boolean
        set UUID(arg0: Internal.UUID_)
        get visuallyCrawling(): boolean
        set motionZ(z: number)
        get blockY(): number
        get spectator(): boolean
        get inWaterOrBubble(): boolean
        get persistentData(): Internal.CompoundTag
        get portalCooldown(): number
        get item(): Internal.ItemStack
        set removed(arg0: Internal.Entity$RemovalReason_)
        get inWaterRainOrBubble(): boolean
        get removalReason(): Internal.Entity$RemovalReason
        get ignoringBlockTriggers(): boolean
        get indirectPassengers(): Internal.Iterable<Internal.Entity>
        get eyeInFluidType(): Internal.FluidType
        get steppingCarefully(): boolean
        set boundingBox(arg0: Internal.AABB_)
        get ambientCreature(): boolean
        get blockX(): number
        /**
         * @deprecated
        */
        get lightLevelDependentMagicValue(): number
        get encodeId(): string
        get block(): Internal.BlockContainerJS
        get nbt(): Internal.CompoundTag
        set invisible(arg0: boolean)
        get name(): Internal.Component
        get controlledVehicle(): Internal.Entity
        get eyePosition(): Vec3d
        get eyeHeight(): number
        get yaw(): number
        set customNameVisible(arg0: boolean)
        get remainingFireTicks(): number
        get controllingPassenger(): Internal.LivingEntity
        get scriptType(): Internal.ScriptType
        get forward(): Vec3d
        get maxFallDistance(): number
        get id(): number
        get ticksFrozen(): number
        get eyeY(): number
        set statusMessage(message: Internal.Component_)
        get boundingBox(): Internal.AABB
        get inWaterOrRain(): boolean
        get descending(): boolean
        get YHeadRot(): number
        get addEntityPacket(): Internal.Packet<Internal.ClientGamePacketListener>
        get team(): Internal.Team
        set ticksFrozen(arg0: number)
        get myRidingOffset(): number
        set deltaMovement(arg0: Vec3d_)
        get living(): boolean
        get x(): number
        get glowing(): boolean
        get vehicle(): boolean
        get leashOffset(): Vec3d
        get attackable(): boolean
        set isInPowderSnow(arg0: boolean)
        set customName(arg0: Internal.Component_)
        get teamId(): string
        get underWater(): boolean
        get customNameVisible(): boolean
        get pistonPushReaction(): Internal.PushReaction
        get deltaMovement(): Vec3d
        get motionX(): number
        get entityData(): Internal.SynchedEntityData
        set secondsOnFire(arg0: number)
        get "displayName()"(): Internal.Component
        get onRails(): boolean
        get dimensionChangingDelay(): number
        get peacefulCreature(): boolean
        set onGround(arg0: boolean)
        set yaw(arg0: number)
        get pickRadius(): number
        get firstTick(): boolean
        get vehicle(): Internal.Entity
        get effectiveAi(): boolean
        get stringUuid(): string
        get removed(): boolean
        set swimming(arg0: boolean)
        get rotationVector(): Internal.Vec2
        get sprinting(): boolean
        get motionY(): number
        set shiftKeyDown(arg0: boolean)
        get passengers(): Internal.EntityArrayList
        get maxHeightFluidType(): Internal.FluidType
        get z(): number
        get server(): Internal.MinecraftServer
        get selfAndPassengers(): Internal.Stream<Internal.Entity>
        get addedToWorld(): boolean
        get firstPassenger(): Internal.Entity
        get soundSource(): Internal.SoundSource
        get pose(): Internal.Pose
        get lookAngle(): Vec3d
        get motionZ(): number
        get invisible(): boolean
        set z(z: number)
        get y(): number
        get profile(): Internal.GameProfile
        set viewScale(arg0: number)
        set levelCallback(arg0: Internal.EntityInLevelCallback_)
        /**
         * @deprecated
        */
        get pushedByFluid(): boolean
        get airSupply(): number
        get crouching(): boolean
        get player(): boolean
        get animal(): boolean
        get motionDirection(): Internal.Direction
        set y(y: number)
        get feetBlockState(): Internal.BlockState
        get commandSenderWorld(): Internal.Level
        get customName(): Internal.Component
        get class(): typeof any
        get maxAirSupply(): number
        get visuallySwimming(): boolean
        get facing(): Internal.Direction
        get boundingBoxForCulling(): Internal.AABB
        get swimming(): boolean
        set sprinting(arg0: boolean)
        set x(x: number)
        get nameTagOffsetY(): number
        get invulnerable(): boolean
        get inLava(): boolean
        get portalWaitTime(): number
        get inWater(): boolean
        get blockStateOn(): Internal.BlockState
        get fluidJumpThreshold(): number
        set airSupply(arg0: number)
        get rootVehicle(): Internal.Entity
        get onPos(): BlockPos
        get noGravity(): boolean
        get stepHeight(): number
        set remainingFireTicks(arg0: number)
        /**
         * @deprecated
        */
        get onPosLegacy(): BlockPos
        set pos(arg0: Vec3d_)
        get uuid(): Internal.UUID
        set silent(arg0: boolean)
        get armorSlots(): Internal.Iterable<Internal.ItemStack>
        get onPortalCooldown(): boolean
        set pitch(arg0: number)
        get multipartEntity(): boolean
        get parts(): Internal.PartEntity<any>[]
        get alwaysTicking(): boolean
        get bbWidth(): number
        get forgePersistentData(): Internal.CompoundTag
        set invulnerable(arg0: boolean)
        get "name()"(): Internal.Component
        get inFluidType(): boolean
        get ticksRequiredToFreeze(): number
        set glowing(arg0: boolean)
        get alive(): boolean
        get bbHeight(): number
        get username(): string
        get tags(): Internal.Set<string>
        get pickable(): boolean
        set YHeadRot(arg0: number)
        get parent(): Internal.EnderDragon
        get pickResult(): Internal.ItemStack
        get percentFrozen(): number
        get randomY(): number
        set portalCooldown(arg0: number)
        get displayName(): Internal.Component
        set position(block: Internal.BlockContainerJS_)
        set pose(arg0: Internal.Pose_)
        get entityType(): Internal.EntityType<any>
        get waterCreature(): boolean
        get passengersRidingOffset(): number
        get "server()"(): Internal.MinecraftServer
        get frame(): boolean
        get pushable(): boolean
        set YBodyRot(arg0: number)
        set motionY(y: number)
        set noGravity(arg0: boolean)
        get controlledByLocalInstance(): boolean
        get monster(): boolean
        get horizontalFacing(): Internal.Direction
        set id(arg0: number)
        get type(): string
        get passenger(): boolean
        get viewScale(): number
        set motionX(x: number)
        get handSlots(): Internal.Iterable<Internal.ItemStack>
        get visualRotationYInDegrees(): number
        get teamColor(): number
        get discrete(): boolean
        set nbt(nbt: Internal.CompoundTag_)
        get level(): Internal.Level
        get freezing(): boolean
        get fullyFrozen(): boolean
        set sharedFlagOnFire(arg0: boolean)
        readonly name: string;
        readonly parentMob: Internal.EnderDragon;
    }
    type EnderDragonPart_ = EnderDragonPart;
}
